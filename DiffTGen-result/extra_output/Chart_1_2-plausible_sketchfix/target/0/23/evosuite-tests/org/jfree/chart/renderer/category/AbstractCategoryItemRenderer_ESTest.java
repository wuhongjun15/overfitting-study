/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 07:56:32 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.event.ActionEvent;
import java.awt.geom.AffineTransform;
import java.awt.geom.GeneralPath;
import java.awt.geom.PathIterator;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.math.BigInteger;
import java.sql.Connection;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.EventListener;
import java.util.List;
import javax.swing.Icon;
import javax.swing.JMenuItem;
import javax.swing.JTable;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;
import javax.swing.text.StyledEditorKit;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.AreaRendererEndType;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.GrayPaintScale;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.XYDifferenceRenderer;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.ObjectList;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Week;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, 3.0, layeredBarRenderer0.ZERO, (-3363.840280672372), layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      categoryLineAnnotation0.setValue2((double) layeredBarRenderer0.ZERO);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, layeredBarRenderer0.DEFAULT_VALUE_LABEL_FONT, fastScatterPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 10, 10, 15, 4313, true, false, false, true, true, true, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(15, 10);
      layeredBarRenderer0.setBaseLegendShape(rectangle2D0);
      XYDifferenceRenderer xYDifferenceRenderer0 = new XYDifferenceRenderer(layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, true);
      categoryLineAnnotation0.addChangeListener(xYDifferenceRenderer0);
      Layer layer0 = Layer.FOREGROUND;
      layeredBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.setAutoPopulateSeriesPaint(true);
      statisticalLineAndShapeRenderer0.setBaseShapesVisible(false);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      statisticalLineAndShapeRenderer0.setItemLabelAnchorOffset(0.0);
      levelRenderer0.setMaximumItemWidth(2.0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(604.1672, 1839.460679038, true);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, "ItemLabelGenerator not cloneable.");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineRenderer3D0.ZERO, (double) lineRenderer3D0.ZERO, 8.0, (double) lineRenderer3D0.ZERO, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
      try { 
        lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = minMaxCategoryRenderer0.getSeriesToolTipGenerator(0);
      minMaxCategoryRenderer0.setSeriesToolTipGenerator(816, (CategoryToolTipGenerator) null, true);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getOpenIcon();
      minMaxCategoryRenderer0.setObjectIcon(icon0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double double0 = lineRenderer3D0.getYOffset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setRenderAsPercentages(true);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryPlot categoryPlot0 = lineRenderer3D0.getPlot();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getDomainAxis((CategoryPlot) null, defaultBoxAndWhiskerCategoryDataset0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Paint paint0 = defaultPolarItemRenderer0.getItemLabelPaint(1790, 5, true);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, defaultPolarItemRenderer0.DEFAULT_OUTLINE_PAINT, paint0, paint0);
      double[][] doubleArray0 = new double[6][7];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = (double) 5;
      doubleArray1[1] = (double) defaultPolarItemRenderer0.ZERO;
      doubleArray1[2] = (double) 1790;
      doubleArray1[3] = (double) 5;
      doubleArray1[4] = (double) 5;
      doubleArray1[5] = (-1885.4554);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 1790;
      doubleArray2[1] = (double) 5;
      doubleArray2[2] = (double) 5;
      doubleArray2[3] = (-1885.4554);
      doubleArray2[4] = 3.0;
      doubleArray2[5] = (double) 1790;
      doubleArray2[6] = (double) defaultPolarItemRenderer0.ZERO;
      doubleArray2[7] = (-1885.4554);
      doubleArray2[8] = (-1885.4554);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[5];
      doubleArray4[0] = 3.0;
      doubleArray4[1] = (double) 1790;
      doubleArray4[2] = (double) 1790;
      doubleArray4[3] = (double) waterfallBarRenderer0.ZERO;
      doubleArray4[4] = (double) 1790;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[8];
      doubleArray5[0] = 3.0;
      doubleArray5[1] = 0.5;
      doubleArray5[2] = (double) waterfallBarRenderer0.ZERO;
      doubleArray5[3] = 2178.7124;
      doubleArray5[4] = 0.0;
      doubleArray5[5] = 3.0;
      doubleArray5[6] = (double) defaultPolarItemRenderer0.ZERO;
      doubleArray5[7] = (double) defaultPolarItemRenderer0.ZERO;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[3];
      doubleArray6[0] = 0.2;
      doubleArray6[1] = 0.2;
      doubleArray6[2] = (double) 1790;
      doubleArray0[5] = doubleArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, 1790, 1790);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.addEntity((EntityCollection) null, (Shape) null, slidingCategoryDataset0, 1790, 5, false);
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = barRenderer0.createState(plotRenderingInfo0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Number[][] numberArray0 = new Number[6][0];
      Number[] numberArray1 = new Number[3];
      numberArray1[0] = (Number) 0.2;
      numberArray1[1] = (Number) 3.0;
      numberArray1[2] = (Number) barRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[9];
      numberArray2[0] = (Number) 3.0;
      numberArray2[1] = (Number) 0.2;
      numberArray2[2] = (Number) groupedStackedBarRenderer0.ZERO;
      numberArray2[3] = (Number) 0.2;
      numberArray2[4] = (Number) barRenderer0.ZERO;
      numberArray2[5] = (Number) 0.2;
      numberArray2[6] = (Number) barRenderer0.ZERO;
      numberArray2[7] = (Number) 3.0;
      numberArray2[8] = (Number) 0.2;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[9];
      numberArray3[0] = (Number) 0.2;
      numberArray3[1] = (Number) groupedStackedBarRenderer0.ZERO;
      int int0 = (-1047);
      int int1 = 2931;
      int int2 = (-1539);
      MockDate mockDate0 = null;
      try {
        mockDate0 = new MockDate("FW.K?3pdRp<~w.6");
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Date", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Object[][] objectArray0 = new Object[4][0];
      Object[] objectArray1 = new Object[5];
      objectArray1[0] = (Object) boxAndWhiskerRenderer0;
      objectArray1[1] = (Object) boxAndWhiskerRenderer0;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Object object0 = stackedBarRenderer3D0.clone();
      objectArray1[2] = object0;
      objectArray1[3] = (Object) boxAndWhiskerRenderer0;
      objectArray1[4] = (Object) boxAndWhiskerRenderer0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[8];
      objectArray2[0] = object0;
      objectArray2[1] = object0;
      objectArray2[2] = (Object) stackedBarRenderer3D0;
      objectArray2[3] = object0;
      objectArray2[4] = object0;
      objectArray2[5] = (Object) stackedBarRenderer3D0;
      objectArray2[6] = object0;
      objectArray2[7] = (Object) stackedBarRenderer3D0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[1];
      objectArray3[0] = object0;
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[0];
      objectArray0[3] = objectArray4;
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      boolean boolean0 = boxAndWhiskerRenderer0.hasListener(jTable0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = boxAndWhiskerRenderer0.getSeriesItemLabelGenerator(1247);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean1 = scatterRenderer0.equals(boxAndWhiskerRenderer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      JMenuItem jMenuItem0 = new JMenuItem("");
      EtchedBorder etchedBorder0 = new EtchedBorder();
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jMenuItem0, (Border) etchedBorder0, (-1011), 1912, 0, 423);
      GrayPaintScale grayPaintScale0 = new GrayPaintScale();
      DateAxis dateAxis0 = new DateAxis("");
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(grayPaintScale0, dateAxis0);
      RectangleEdge rectangleEdge0 = paintScaleLegend0.getPosition();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.getItemMiddle((Comparable) null, (Comparable) null, slidingGanttCategoryDataset0, extendedCategoryAxis0, rectangle0, rectangleEdge0);
      } catch(IllegalArgumentException e) {
         //
         // Invalid category index: -1
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LegendItemCollection legendItemCollection0 = scatterRenderer0.getLegendItems();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      Boolean boolean0 = defaultXYItemRenderer0.getSeriesShapesVisible(86);
      CategoryToolTipGenerator categoryToolTipGenerator0 = scatterRenderer0.getToolTipGenerator(86, 0, false);
      scatterRenderer0.setSeriesToolTipGenerator(86, (CategoryToolTipGenerator) null, false);
      scatterRenderer0.setSeriesShapesFilled(0, (Boolean) null);
      boolean boolean1 = Boolean.logicalAnd(false, false);
      scatterRenderer0.setSeriesShapesFilled(0, (Boolean) null);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 86, 3744, 10, 1, 86, 1, true, false, true, false, true, true, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(0, 67);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "r!Ylr;CJ.g0]p5]t=");
      Number[][] numberArray0 = new Number[0][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 3, 67, false, categoryItemRendererState0, rectangle2D0);
      } catch(IllegalArgumentException e) {
         //
         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      stackedBarRenderer0.removeAnnotations();
      stackedBarRenderer0.setDefaultEntityRadius(0);
      stackedBarRenderer0.removeAnnotations();
      boolean boolean0 = stackedBarRenderer0.getIncludeBaseInRange();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesShapesVisible(0, true);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.7976931348623157E308, 1.7976931348623157E308, true);
      Paint paint0 = stackedBarRenderer3D0.lookupSeriesPaint(0);
      stackedBarRenderer3D0.setItemMargin(55.6);
      stackedBarRenderer3D0.setIgnoreZeroValues(true);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer3D0.getItemLabelGenerator(0, 0, true);
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("\"XW", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, true, true, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      String string0 = numberFormat0.format(0.0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", numberFormat0);
      boolean boolean0 = levelRenderer0.equals(standardCategoryToolTipGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setShadowPaint(levelRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getBaseToolTipGenerator();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseOutlinePaint(true);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      boolean boolean0 = scatterRenderer0.equals(boxAndWhiskerToolTipGenerator0);
      int int0 = scatterRenderer0.getPassCount();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      Rectangle rectangle0 = chartPanel0.getBounds((Rectangle) null);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 0, 1.0E7, 2526.52585, 0.0);
      PathIterator pathIterator0 = rectangle0.getPathIterator(affineTransform0, 4.0);
      // Undeclared exception!
      try { 
        rectangle0.createUnion((Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Rectangle2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) scatterRenderer0.ZERO, "7*lD>");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("Y},!:0to,", combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2041, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      AffineTransform affineTransform0 = AffineTransform.getScaleInstance(0.0, 2.0F);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Point2D point2D0 = affineTransform0.deltaTransform((Point2D) point2D_Double0, (Point2D) point2D_Double0);
      CategoryPlot categoryPlot0 = combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D rectangle2D0 = null;
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Y},!:0to,");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      int int0 = (-2054);
      int int1 = 0;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedDomainCategoryPlot0, jDBCCategoryDataset0, plotRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryURLGenerator categoryURLGenerator0 = stackedAreaRenderer0.getBaseURLGenerator();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      Paint paint0 = stackedBarRenderer0.getLegendTextPaint(983);
      int int0 = stackedBarRenderer0.getPassCount();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Paint paint1 = statisticalLineAndShapeRenderer0.getErrorIndicatorPaint();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-1806.1763396719148), (-1806.1763396719148));
      LegendItem legendItem0 = barRenderer3D0.getLegendItem(0, 0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      double double0 = layeredBarRenderer0.getSeriesBarWidth(244);
      Graphics2D graphics2D0 = null;
      GeneralPath generalPath0 = null;
      try {
        generalPath0 = new GeneralPath(244);
      } catch(IllegalArgumentException e) {
         //
         // winding rule must be WIND_EVEN_ODD or WIND_NON_ZERO
         //
         verifyException("java.awt.geom.Path2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Paint paint0 = scatterRenderer0.lookupLegendTextPaint(0);
      Stroke stroke0 = scatterRenderer0.lookupSeriesOutlineStroke(2861);
      scatterRenderer0.setDrawOutlines(true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setBaseLegendTextPaint(scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      boolean boolean0 = stackedBarRenderer3D0.getRenderAsPercentages();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      boolean boolean1 = stackedAreaRenderer0.equals(scatterRenderer0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      double double0 = statisticalLineAndShapeRenderer0.getItemMargin();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Rectangle rectangle0 = new Rectangle(9999, 2861);
      Rectangle2D rectangle2D0 = chartPanel0.scale(rectangle0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.calculateBarW0(combinedRangeCategoryPlot0, plotOrientation0, rectangle2D0, categoryAxis3D0, (CategoryItemRendererState) null, 151, 9999);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.GroupedStackedBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalLineAndShapeRenderer0.getBaseItemLabelGenerator();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      statisticalLineAndShapeRenderer0.setSeriesItemLabelGenerator(2086, (CategoryItemLabelGenerator) null);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      boolean boolean0 = areaRenderer0.equals(categoryStepRenderer0);
      float float0 = 3.0F;
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((Plot) null);
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double double0 = lineRenderer3D0.getXOffset();
      int int0 = 0;
      DateFormat dateFormat0 = DateFormat.getTimeInstance(0);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator(".X#oM8Lr;28_{&g", dateFormat0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesToolTipGenerator((-1375), (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      boxAndWhiskerRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = boxAndWhiskerRenderer0.getLegendItemLabelGenerator();
      CategoryCrosshairState categoryCrosshairState0 = null;
      double double0 = 179.0462161275;
      int int0 = 0;
      double double1 = 200000.0;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) boxAndWhiskerRenderer0.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("{0}", thermometerPlot0);
      // Undeclared exception!
      try { 
        jFreeChart0.getCategoryPlot();
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.plot.ThermometerPlot cannot be cast to org.jfree.chart.plot.CategoryPlot
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      boolean boolean0 = stackedBarRenderer0.equals((Object) null);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      int int0 = 438;
      Boolean boolean1 = stackedBarRenderer0.getSeriesItemLabelsVisible(438);
      boolean boolean2 = Boolean.getBoolean("");
      boolean boolean3 = Boolean.logicalAnd(true, false);
      lineAndShapeRenderer0.setSeriesShapesVisible(438, (Boolean) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      stackedAreaRenderer0.setPlot(combinedDomainCategoryPlot0);
      int int1 = 3;
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-100);
      byteArray0[0] = (byte) (-100);
      byteArray0[1] = (byte)0;
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte2 = (byte) (-16);
      byteArray0[3] = (byte) (-16);
      byteArray0[4] = (byte)0;
      byte byte3 = (byte)105;
      byteArray0[5] = (byte)105;
      byte byte4 = (byte)0;
      byteArray0[6] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(3, 10, byteArray0, byteArray0, byteArray0, (byte)0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      Paint paint0 = stackedAreaRenderer0.getLegendTextPaint((-1370));
      int int0 = 202;
      lineAndShapeRenderer0.setLegendTextFont(202, stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setPlot((CategoryPlot) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      defaultMultiValueCategoryDataset0.validateObject();
      categoryAxis3D0.setAxisLinePaint(lineRenderer3D0.DEFAULT_OUTLINE_PAINT);
      LogAxis logAxis0 = new LogAxis((String) null);
      logAxis0.setTickMarkOutsideLength(0.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, logAxis0, lineRenderer3D0);
      CategoryAxis categoryAxis0 = lineRenderer3D0.getDomainAxis(categoryPlot0, defaultMultiValueCategoryDataset0);
      int int0 = 0;
      Paint paint0 = lineRenderer3D0.lookupSeriesOutlinePaint(0);
      lineRenderer3D0.setBaseLinesVisible(false);
      boolean boolean0 = lineRenderer3D0.getBaseLinesVisible();
      // Undeclared exception!
      try { 
        lineRenderer3D0.getLegendItem(0, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 1802;
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setMinorTickMarksVisible(false);
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, logAxis0, scatterRenderer0);
      categoryAxis3D0.setLabelFont(categoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      categoryPlot0.setBackgroundImageAlignment(3779);
      CategoryAxis categoryAxis0 = scatterRenderer0.getDomainAxis(categoryPlot0, (CategoryDataset) null);
      boolean boolean0 = scatterRenderer0.hasListener(categoryPlot0);
      // Undeclared exception!
      try { 
        scatterRenderer0.lookupSeriesShape((-1507));
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryURLGenerator categoryURLGenerator0 = categoryStepRenderer0.getSeriesURLGenerator(0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      AreaRendererEndType areaRendererEndType0 = areaRenderer0.getEndType();
      Paint paint0 = areaRenderer0.lookupLegendTextPaint((-955));
      CategoryToolTipGenerator categoryToolTipGenerator0 = areaRenderer0.getSeriesToolTipGenerator((-1804));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = (-422);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getToolTipGenerator((-422), (-422), true);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesToolTipGenerator((-422), (CategoryToolTipGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemURLGenerator();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemURLGenerator();
      layeredBarRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      String string0 = "";
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      PeriodAxis periodAxis0 = null;
      try {
        periodAxis0 = new PeriodAxis("", (RegularTimePeriod) null, (RegularTimePeriod) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.PeriodAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      boolean boolean0 = lineAndShapeRenderer0.getItemShapeFilled(182, (-865));
      String string0 = "org.jfree.chart.event.ChartChangeEventType";
      Object[][][] objectArray0 = new Object[2][2][3];
      Object[][] objectArray1 = new Object[8][9];
      Object[] objectArray2 = new Object[8];
      objectArray2[0] = (Object) "org.jfree.chart.event.ChartChangeEventType";
      objectArray2[1] = (Object) lineAndShapeRenderer0;
      objectArray2[2] = (Object) lineAndShapeRenderer0;
      objectArray2[3] = (Object) "org.jfree.chart.event.ChartChangeEventType";
      objectArray2[4] = (Object) lineAndShapeRenderer0;
      objectArray2[5] = (Object) lineAndShapeRenderer0;
      objectArray2[6] = (Object) "org.jfree.chart.event.ChartChangeEventType";
      objectArray2[7] = (Object) lineAndShapeRenderer0;
      objectArray1[0] = objectArray2;
      Object[] objectArray3 = new Object[4];
      Object object0 = lineAndShapeRenderer0.clone();
      objectArray3[0] = object0;
      objectArray3[1] = (Object) "org.jfree.chart.event.ChartChangeEventType";
      objectArray3[2] = (Object) lineAndShapeRenderer0;
      objectArray3[3] = (Object) lineAndShapeRenderer0;
      objectArray1[1] = objectArray3;
      Object[] objectArray4 = new Object[9];
      objectArray4[0] = (Object) "org.jfree.chart.event.ChartChangeEventType";
      objectArray4[1] = (Object) lineAndShapeRenderer0;
      objectArray4[2] = (Object) lineAndShapeRenderer0;
      objectArray4[3] = (Object) "org.jfree.chart.event.ChartChangeEventType";
      objectArray4[4] = (Object) lineAndShapeRenderer0;
      objectArray4[5] = (Object) "org.jfree.chart.event.ChartChangeEventType";
      objectArray4[6] = object0;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Object object1 = scatterRenderer0.clone();
      objectArray4[7] = object1;
      objectArray4[8] = object0;
      objectArray1[2] = objectArray4;
      Object[] objectArray5 = new Object[0];
      objectArray1[3] = objectArray5;
      Object[] objectArray6 = new Object[0];
      objectArray1[4] = objectArray6;
      Object[] objectArray7 = new Object[9];
      objectArray7[0] = (Object) "org.jfree.chart.event.ChartChangeEventType";
      objectArray7[1] = object0;
      objectArray7[2] = (Object) scatterRenderer0;
      objectArray7[3] = (Object) scatterRenderer0;
      objectArray7[4] = (Object) lineAndShapeRenderer0;
      objectArray7[5] = (Object) lineAndShapeRenderer0;
      objectArray7[6] = object0;
      objectArray7[7] = (Object) "org.jfree.chart.event.ChartChangeEventType";
      objectArray7[8] = (Object) "org.jfree.chart.event.ChartChangeEventType";
      objectArray1[5] = objectArray7;
      Object[] objectArray8 = new Object[2];
      objectArray8[0] = (Object) scatterRenderer0;
      objectArray8[1] = (Object) "org.jfree.chart.event.ChartChangeEventType";
      objectArray1[6] = objectArray8;
      Object[] objectArray9 = new Object[3];
      objectArray9[0] = (Object) lineAndShapeRenderer0;
      objectArray9[1] = (Object) lineAndShapeRenderer0;
      objectArray9[2] = object1;
      objectArray1[7] = objectArray9;
      objectArray0[0] = objectArray1;
      Object[][] objectArray10 = new Object[1][8];
      objectArray10[0] = objectArray3;
      objectArray0[1] = objectArray10;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(objectArray0);
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.renderer.category.LineAndShapeRenderer cannot be cast to java.lang.Number
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      Paint paint0 = ringPlot0.getLabelBackgroundPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, paint0, ringPlot0.DEFAULT_LABEL_OUTLINE_PAINT, ringPlot0.DEFAULT_LABEL_SHADOW_PAINT);
      Paint paint1 = waterfallBarRenderer0.getNegativeBarPaint();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setSeriesShapesFilled(10, false);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      double double0 = levelRenderer0.calculateSeriesWidth(10, categoryAxis0, 3, 10);
      int int0 = waterfallBarRenderer0.getRowCount();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int[] intArray0 = new int[6];
      intArray0[0] = 10;
      intArray0[1] = 10;
      intArray0[2] = 3;
      // Undeclared exception!
      try { 
        defaultStatisticalCategoryDataset0.getStdDevValue(0, 10);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      BarPainter barPainter0 = BarRenderer.getDefaultBarPainter();
      BarRenderer.setDefaultBarPainter(barPainter0);
      BarRenderer.setDefaultShadowsVisible(true);
      stackedBarRenderer3D0.setMinimumBarLength(0.0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = lineRenderer3D0.hashCode();
      int int1 = lineRenderer3D0.getPassCount();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer3D0.getBaseItemLabelGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Object object0 = new Object();
      boolean boolean0 = statisticalLineAndShapeRenderer0.equals(object0);
      String string0 = "";
      // Undeclared exception!
      try { 
        Week.parseWeek("");
      } catch(IllegalArgumentException e) {
         //
         // Could not find separator.
         //
         verifyException("org.jfree.data.time.Week", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.getItemShapeFilled(0, 3002);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesShapesFilled(1565, true);
      Week week0 = new Week(1565, 71);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(week0, (double) scatterRenderer0.ZERO, lineRenderer3D0.ZERO, 2.0, lineRenderer3D0.DEFAULT_PAINT, lineRenderer3D0.DEFAULT_STROKE);
      PiePlot3D piePlot3D0 = new PiePlot3D();
      categoryLineAnnotation0.setPaint(piePlot3D0.DEFAULT_LABEL_PAINT);
      boolean boolean1 = categoryLineAnnotation0.hasListener(piePlot3D0);
      categoryLineAnnotation0.setNotify(true);
      boolean boolean2 = lineRenderer3D0.removeAnnotation(categoryLineAnnotation0);
      boolean boolean3 = lineRenderer3D0.getBaseShapesFilled();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      double[][] doubleArray0 = new double[6][0];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) 1.0F;
      doubleArray1[1] = 2.0;
      doubleArray1[2] = (double) 3002;
      doubleArray1[3] = (-4143.163547875);
      doubleArray1[4] = (double) 1565;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = (double) 10;
      doubleArray3[1] = (double) lineRenderer3D0.ZERO;
      doubleArray3[2] = (double) 53;
      doubleArray3[3] = 8.0;
      doubleArray3[4] = 2.0;
      doubleArray3[5] = 90.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = 0.4;
      doubleArray4[1] = (double) 1.0F;
      doubleArray4[2] = (double) 1;
      doubleArray4[3] = (double) 1.0F;
      doubleArray4[4] = (double) 10;
      doubleArray4[5] = 12.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[2];
      doubleArray5[0] = 2.0;
      doubleArray5[1] = (double) 53;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[9];
      doubleArray6[0] = (double) 10;
      doubleArray6[1] = (double) 0;
      doubleArray6[2] = (double) 1.0F;
      doubleArray6[3] = 5.0E-4;
      doubleArray6[4] = (double) 71;
      doubleArray6[5] = 0.4;
      doubleArray6[6] = 8.0;
      doubleArray6[7] = 0.4;
      doubleArray6[8] = (double) 10;
      doubleArray0[5] = doubleArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        lineRenderer3D0.getDomainAxis(combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = groupedStackedBarRenderer0.getLegendItemLabelGenerator();
      groupedStackedBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      CategoryPlot categoryPlot0 = groupedStackedBarRenderer0.getPlot();
      Rectangle rectangle0 = new Rectangle(10, (-971), 0, (-1));
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo((-971));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      double double0 = barRenderer3D0.getBase();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, 0.0, 3.0, (double) barRenderer3D0.ZERO, defaultCategoryItemRenderer0.DEFAULT_OUTLINE_PAINT, barRenderer3D0.DEFAULT_STROKE);
      boolean boolean0 = barRenderer3D0.removeAnnotation(categoryLineAnnotation0);
      boolean boolean1 = defaultCategoryItemRenderer0.getBaseShapesFilled();
      barRenderer3D0.setSeriesToolTipGenerator(97, (CategoryToolTipGenerator) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Object object0 = scatterRenderer0.clone();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean2 = boxAndWhiskerRenderer0.getFillBox();
      CategoryDataset categoryDataset0 = null;
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null, tableOrder0);
      CategoryURLGenerator categoryURLGenerator0 = spiderWebPlot0.getURLGenerator();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesURLGenerator((-2801), (CategoryURLGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      boolean boolean0 = false;
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation(":}&s/F2hj", 0.2, 2.5);
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      statisticalBarRenderer0.clearSeriesStrokes(false);
      Paint paint0 = statisticalBarRenderer0.lookupLegendTextPaint(3);
      Stroke stroke0 = statisticalBarRenderer0.getErrorIndicatorStroke();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      int int0 = (-1999);
      boolean boolean1 = false;
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      defaultCategoryItemRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.setSeriesLinesVisible((-1999), true);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 1.0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      stackedBarRenderer3D0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      double double0 = stackedBarRenderer3D0.getItemMargin();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      int[] intArray0 = new int[0];
      List list0 = stackedBarRenderer3D0.createStackedValueList(defaultCategoryDataset0, statisticalBarRenderer0.ZERO, intArray0, (-2148.14816403), false);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      // Undeclared exception!
      try { 
        levelRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle0, categoryAxis3D0, (CategoryItemRendererState) null, 0, 0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LevelRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      Shape shape0 = barRenderer0.lookupSeriesShape((-462));
      boolean boolean0 = barRenderer0.getIncludeBaseInRange();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(643.58153449, (double) barRenderer0.ZERO);
      Graphics2D graphics2D0 = null;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setRangeGridlineStroke(barRenderer0.DEFAULT_STROKE);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, (-676.1374F), 1873.4156F, 1.0F);
      barRenderer3D0.setBaseLegendTextPaint(combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      AxisLocation axisLocation0 = null;
      ValueMarker valueMarker0 = new ValueMarker(0.2, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Null 'plot' argument.");
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'plot' argument.", logarithmicAxis0.DEFAULT_AXIS_LABEL_FONT, ringPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        barRenderer3D0.createHotSpotShape((Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, categoryAxis0, logarithmicAxis0, (CategoryDataset) null, (-2335), 500, false, categoryItemRendererState0);
      } catch(RuntimeException e) {
         //
         // Not implemented.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Paint paint0 = waterfallBarRenderer0.getPositiveBarPaint();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      MatrixSeriesCollection matrixSeriesCollection0 = new MatrixSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("OzMFYI,mH8|");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(matrixSeriesCollection0, numberAxis3D0, defaultPolarItemRenderer0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Point point0 = polarPlot0.translateValueThetaRadiusToJava2D(0.0, 0.0, rectangle2D_Double0);
      CategoryPlot categoryPlot0 = combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point0);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.getRangeAxis((CategoryPlot) null, (-1198));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      Object object0 = standardCategorySeriesLabelGenerator0.clone();
      stackedAreaRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      stackedAreaRenderer0.setRenderAsPercentages(true);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setAutoPopulateSeriesStroke(false);
      lineRenderer3D0.setWallPaint(stackedAreaRenderer0.DEFAULT_PAINT);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer0.getLegendItemToolTipGenerator();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Boolean boolean0 = candlestickRenderer0.getSeriesCreateEntities((-761));
      boolean boolean1 = Boolean.logicalAnd(true, false);
      lineAndShapeRenderer0.setSeriesShapesVisible(0, (Boolean) null);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setItemLabelAnchorOffset(0.0);
      Color color0 = Color.getColor("ua2{:U", 9);
      Color color1 = Color.getColor("ua2{:U", color0);
      minMaxCategoryRenderer0.setGroupPaint(color1);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("ua2{:U", minMaxCategoryRenderer0.ZERO, 9);
      boolean boolean0 = categoryTextAnnotation0.hasListener((EventListener) null);
      Layer layer0 = Layer.BACKGROUND;
      minMaxCategoryRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      minMaxCategoryRenderer0.setGroupPaint(color0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null, false);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      DateFormat dateFormat0 = DateFormat.getDateInstance(0);
      Paint paint0 = barRenderer0.lookupSeriesPaint(0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", 0.2, 25000.0, (double) barRenderer0.ZERO);
      barRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", dateFormat0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        standardCategoryItemLabelGenerator0.generateLabel(defaultKeyedValues2DDataset0, 0, 544);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getObjectIcon();
      minMaxCategoryRenderer0.setMinIcon(icon0);
      minMaxCategoryRenderer0.setBaseLegendShape((Shape) null);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setItemLabelAnchorOffset(0);
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getBaseURLGenerator();
      lineAndShapeRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null);
      lineAndShapeRenderer0.setBaseLinesVisible(false);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(3.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.updateCrosshairValues(categoryCrosshairState0, 3.0, statisticalBarRenderer0.ZERO, 642.160193045542, (-1), 1061.3822702, 1061.3822702, plotOrientation0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = layeredBarRenderer0.getBaseURLGenerator();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.setSeriesURLGenerator((-2818), (CategoryURLGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("ULA1D[G9$)S", "", "");
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      int int0 = stackedAreaRenderer0.getPassCount();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(0);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-584.3343598830431), 0.0);
      barRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null, false);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setSeriesItemLabelGenerator((-2495), (CategoryItemLabelGenerator) null, true);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BarPainter barPainter0 = BarRenderer.getDefaultBarPainter();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      int int0 = stackedAreaRenderer0.getPassCount();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 2, 0);
      Range range0 = stackedAreaRenderer0.findRangeBounds(slidingGanttCategoryDataset0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setBaseLegendTextFont(scatterRenderer0.DEFAULT_VALUE_LABEL_FONT);
      LegendItem legendItem0 = stackedAreaRenderer0.getLegendItem((-3250), (-1219));
      statisticalBarRenderer0.setLegendShape(711, stackedAreaRenderer0.DEFAULT_SHAPE);
      Range range1 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) null, false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getSeriesToolTipGenerator(2);
      scatterRenderer0.setSeriesToolTipGenerator(2, (CategoryToolTipGenerator) null);
      scatterRenderer0.setUseFillPaint(true);
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.createState((PlotRenderingInfo) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(458.630181, 3.0);
      double double0 = stackedBarRenderer3D0.getXOffset();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Range range2 = waterfallBarRenderer0.findRangeBounds((CategoryDataset) null);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getItemLabelGenerator(2, 2, false);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setSeriesItemLabelGenerator((-1219), (CategoryItemLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Range range0 = scatterRenderer0.findRangeBounds(jDBCCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      categoryItemRendererState0.setBarWidth((double) categoryStepRenderer0.ZERO);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Object object0 = layeredBarRenderer0.clone();
      boolean boolean0 = chartRenderingInfo1.equals(object0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      PlotRenderingInfo plotRenderingInfo2 = new PlotRenderingInfo(chartRenderingInfo1);
      Dialog dialog0 = null;
      try {
        dialog0 = new Dialog((Frame) null, "org.jfree.chart.labels.IntervalXYItemLabelGenerator", false);
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2.5E-8, 2.5E-8);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Graphics2D graphics2D0 = null;
      String string0 = "";
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      double double0 = 911.510182;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(0);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      String string0 = "";
      StyledEditorKit.FontSizeAction styledEditorKit_FontSizeAction0 = new StyledEditorKit.FontSizeAction("", 1);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(0.0, (-1833.02), true);
      ActionEvent actionEvent0 = new ActionEvent(stackedBarRenderer3D1, (-1782), "Year outside valid range.", (-1L), 1);
      styledEditorKit_FontSizeAction0.actionPerformed(actionEvent0);
      boolean boolean0 = stackedBarRenderer3D0.hasListener(styledEditorKit_FontSizeAction0);
      boolean boolean1 = stackedBarRenderer3D0.isDrawBarOutline();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setDrawOutlines(true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D1.getToolTipGenerator(0, 0, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setDrawLines(true);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = 55;
      int int1 = 625;
      int[] intArray0 = new int[1];
      intArray0[0] = 625;
      BigInteger bigInteger0 = BigInteger.ZERO;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1782), 1, intArray0, (-276), (-1782), bigInteger0);
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Stroke stroke0 = statisticalBarRenderer0.getErrorIndicatorStroke();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      boolean boolean0 = defaultCategoryItemRenderer0.getItemLineVisible(1479, (-779));
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, (-1), 400, 400, 400, 66, 3087, false, true, true, false, false, false, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer0.getItemLabelGenerator(0, 0, true);
      stackedBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      int int0 = (-1790);
      ObjectList objectList0 = null;
      try {
        objectList0 = new ObjectList((-1790));
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      double double0 = lineAndShapeRenderer0.getItemMargin();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(1925, 3, (-2363));
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -2363
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }
}
