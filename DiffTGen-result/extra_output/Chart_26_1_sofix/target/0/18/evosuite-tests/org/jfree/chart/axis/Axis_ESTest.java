/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 12:16:38 GMT 2020
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.Rectangle2D;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Axis_ESTest extends Axis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, "6G!|jny");
      String[] stringArray0 = new String[3];
      SymbolAxis symbolAxis0 = new SymbolAxis("!sdGcoxv&jf6]TP_", stringArray0);
      boolean boolean0 = cyclicNumberAxis0.equals(symbolAxis0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05);
      cyclicNumberAxis0.setTickLabelPaint(defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05);
      cyclicNumberAxis0.setAxisLineStroke(logarithmicAxis0.DEFAULT_TICK_MARK_STROKE);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Paint paint0 = defaultPolarItemRenderer0.getItemOutlinePaint(4580, 1327);
      logarithmicAxis0.setAxisLinePaint(paint0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("xa;+");
      float float0 = numberAxis3D0.getTickMarkOutsideLength();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(954.31, (String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      cyclicNumberAxis0.removeChangeListener(combinedRangeCategoryPlot0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1679.1566, "");
      cyclicNumberAxis0.setTickMarkOutsideLength(702.0F);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[3];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      DateAxis dateAxis0 = new DateAxis();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot((XYDataset) null, symbolAxis0, defaultPolarItemRenderer0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1.0F, 363.951F, (-1.0F), (-1.0F));
      Point point0 = polarPlot0.translateValueThetaRadiusToJava2D((-365.9168179187), 0.0, rectangle2D_Float0);
      Rectangle rectangle0 = new Rectangle(point0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        dateAxis0.refreshTicksHorizontal((Graphics2D) null, rectangle0, rectangleEdge0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.DateAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      DateAxis dateAxis0 = new DateAxis("_1+k.!gGXwu'tpz.", timeZone0);
      Object object0 = dateAxis0.clone();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Paint paint0 = categoryAxis0.getTickLabelPaint();
  }
}
