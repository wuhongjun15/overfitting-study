/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 13:09:39 GMT 2020
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.text.NumberFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisState;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.DateTickUnit;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.MarkerAxisBand;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTick;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.title.Title;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.Range;
import org.jfree.data.RangeType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Axis_ESTest extends Axis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("Fsp", stringArray0);
      symbolAxis0.setAxisLineVisible(true);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Y6Lc");
      Font font0 = subCategoryAxis0.getSubLabelFont();
      RectangleInsets rectangleInsets0 = subCategoryAxis0.getTickLabelInsets();
      NumberAxis numberAxis0 = new NumberAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-148.4248), (-3363.793177), "Y6Lc");
      NumberTickUnit numberTickUnit0 = cyclicNumberAxis0.getTickUnit();
      numberAxis0.setTickUnit(numberTickUnit0);
      TextAnchor textAnchor0 = TextAnchor.HALF_ASCENT_LEFT;
      TextAnchor textAnchor1 = TextAnchor.BASELINE_LEFT;
      NumberTick numberTick0 = new NumberTick(0.05, "org.jfree.chart.plot.MultiplePiePlot", textAnchor0, textAnchor1, 500);
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((Plot) null);
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("7CP,mTV;");
      extendedCategoryAxis0.setFixedDimension(3.0);
      Font font0 = extendedCategoryAxis0.getTickLabelFont();
      NumberAxis numberAxis0 = new NumberAxis("7CP,mTV;");
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 200, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, false, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(200, (-1700));
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      AxisState axisState0 = numberAxis0.draw(graphics2D0, 0.0, rectangle2D0, rectangle2D0, rectangleEdge0, plotRenderingInfo0);
      MarkerAxisBand markerAxisBand0 = numberAxis0.getMarkerBand();
      Object object0 = extendedCategoryAxis0.clone();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      String string0 = categoryAxis3D0.getCategoryLabelToolTip("");
      categoryAxis3D0.setTickMarkInsideLength(0.0F);
      categoryAxis3D0.setCategoryLabelPositionOffset(1273);
      Object object0 = new Object();
      boolean boolean0 = categoryAxis3D0.equals(object0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1273, 2.5E-5);
      cyclicNumberAxis0.setPeriod(343.93674266);
      RangeType rangeType0 = RangeType.NEGATIVE;
      cyclicNumberAxis0.setRangeType(rangeType0);
      PeriodAxis periodAxis0 = new PeriodAxis("");
      Range range0 = periodAxis0.getRange();
      DateAxis dateAxis0 = new DateAxis((String) null);
      DateTickUnit dateTickUnit0 = new DateTickUnit(0, 0);
      dateAxis0.setTickUnit(dateTickUnit0);
      ModuloAxis moduloAxis0 = new ModuloAxis((String) null, range0);
      double double0 = moduloAxis0.getDisplayEnd();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = "";
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      PiePlot piePlot0 = new PiePlot();
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(0.0, numberFormat0);
      boolean boolean0 = numberTickUnit0.equals(subCategoryAxis0);
      Paint paint0 = piePlot0.getSectionPaint(numberTickUnit0);
      piePlot0.setLabelLinksVisible(false);
      // Undeclared exception!
      try { 
        subCategoryAxis0.setLabelPaint((Paint) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.axis.Axis", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("21*W{nC b9!Iv'[;^8r");
      String string0 = logarithmicAxis0.makeTickLabel((-424.2));
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(logarithmicAxis0);
      logarithmicAxis0.notifyListeners(axisChangeEvent0);
      byte[][] byteArray0 = new byte[6][2];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
      byte byte0 = (byte)39;
      byteArray1[1] = (byte)39;
      byteArray1[2] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)39;
      byteArray2[1] = (byte)39;
      byte byte1 = (byte)0;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte)0;
      byteArray2[5] = (byte)0;
      byteArray2[6] = (byte)0;
      byteArray2[7] = (byte)39;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)40;
      byteArray3[1] = (byte)39;
      byteArray3[2] = (byte)0;
      byteArray3[3] = (byte)0;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte)0;
      byteArray4[1] = (byte)0;
      byteArray4[2] = (byte)0;
      byteArray4[3] = (byte)0;
      byteArray4[4] = (byte)0;
      byteArray4[5] = (byte)0;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[7];
      byteArray5[0] = (byte)0;
      byteArray5[1] = (byte)0;
      byteArray5[2] = (byte)0;
      byteArray5[3] = (byte)0;
      byteArray5[4] = (byte)39;
      byteArray5[5] = (byte)39;
      byteArray5[6] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[9];
      byteArray6[0] = (byte)0;
      byteArray6[1] = (byte)40;
      byteArray6[2] = (byte)0;
      byteArray6[3] = (byte)0;
      byteArray6[4] = (byte)0;
      byteArray6[5] = (byte)40;
      byteArray6[6] = (byte)0;
      byteArray6[7] = (byte)0;
      byteArray6[8] = (byte)39;
      byteArray0[5] = byteArray6;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(500, byteArray0);
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart("-424", logarithmicAxis0.DEFAULT_TICK_LABEL_FONT, (Plot) null, true);
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("?!");
      CategoryAxis3D categoryAxis3D1 = new CategoryAxis3D((String) null);
      boolean boolean0 = categoryAxis3D0.equals(categoryAxis3D1);
      categoryAxis3D0.setUpperMargin(238.557462452);
      categoryAxis3D0.setPlot((Plot) null);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      categoryAxis3D0.setTickLabelsVisible(false);
      categoryAxis3D0.setVisible(true);
      RectangleInsets rectangleInsets0 = thermometerPlot0.getPadding();
      categoryAxis3D0.setLabelInsets(rectangleInsets0);
      categoryAxis3D0.setMaximumCategoryLabelWidthRatio(1);
      Object object0 = categoryAxis3D0.clone();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      boolean boolean1 = extendedCategoryAxis0.equals("?!");
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("'C7a}C\"-%XPB{Uk");
      Font font0 = subCategoryAxis0.DEFAULT_TICK_LABEL_FONT.deriveFont((-612.329F));
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(10);
      FontRenderContext fontRenderContext0 = null;
      try {
        fontRenderContext0 = new FontRenderContext(affineTransform0, subCategoryAxis0, "'C7a}C\"-%XPB{Uk");
      } catch(IllegalArgumentException e) {
         //
         // AA hint:org.jfree.chart.axis.SubCategoryAxis@cc76c035
         //
         verifyException("java.awt.font.FontRenderContext", e);
      }
  }
}
