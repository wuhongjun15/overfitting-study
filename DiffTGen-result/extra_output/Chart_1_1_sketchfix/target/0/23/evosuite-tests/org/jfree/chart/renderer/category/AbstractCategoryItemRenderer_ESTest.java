/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 11:13:30 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.RescaleOp;
import java.sql.Connection;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.PasswordView;
import javax.swing.text.Position;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = 0;
      LegendItem legendItem0 = lineRenderer3D0.getLegendItem(0, 0);
      String[] stringArray0 = new String[0];
      Number[][] numberArray0 = new Number[8][3];
      Number[] numberArray1 = new Number[5];
      numberArray1[0] = (Number) lineRenderer3D0.ZERO;
      numberArray1[1] = (Number) 12.0;
      numberArray1[2] = (Number) lineRenderer3D0.ZERO;
      numberArray1[3] = (Number) 12.0;
      numberArray1[4] = (Number) 12.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[3];
      numberArray2[0] = (Number) 12.0;
      numberArray2[1] = (Number) lineRenderer3D0.ZERO;
      numberArray2[2] = (Number) 12.0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[6];
      Float float0 = new Float((float) 0);
      numberArray3[0] = (Number) float0;
      numberArray3[1] = (Number) 12.0;
      numberArray3[2] = (Number) 8.0;
      numberArray3[3] = (Number) 8.0;
      numberArray3[4] = (Number) 12.0;
      numberArray3[5] = (Number) lineRenderer3D0.ZERO;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[3];
      numberArray4[0] = (Number) float0;
      numberArray4[1] = (Number) float0;
      numberArray4[2] = (Number) float0;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[7];
      numberArray5[0] = (Number) float0;
      numberArray5[1] = (Number) 12.0;
      numberArray5[2] = (Number) 12.0;
      numberArray5[3] = (Number) float0;
      numberArray5[4] = (Number) float0;
      int int1 = lineRenderer3D0.getColumnCount();
      numberArray5[5] = (Number) 0;
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) 12.0, (Comparable) 12.0);
      } catch(IllegalArgumentException e) {
         //
         // Row key (12.0) not recognised.
         //
         verifyException("org.jfree.data.KeyedObjects2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      String string0 = "['zv(@4E3EIgP";
      double double0 = 0.0;
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setRangeMinorGridlineStroke(intervalBarRenderer0.DEFAULT_STROKE);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        scatterRenderer0.getDomainAxis(categoryPlot0, defaultBoxAndWhiskerCategoryDataset0);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(ganttRenderer0.ZERO);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      LogAxis logAxis0 = new LogAxis();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(timePeriodValuesCollection0, logAxis0, defaultPolarItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("Base tool tip generator not cloneable.", polarPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 4033);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      float[] floatArray0 = new float[2];
      floatArray0[0] = 1.0F;
      floatArray0[1] = (float) 4033;
      float[] floatArray1 = new float[2];
      floatArray1[0] = (float) 10;
      floatArray1[1] = (float) 1;
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray1, renderingHints0);
      Rectangle2D rectangle2D0 = rescaleOp0.getBounds2D(bufferedImage0);
      CategoryPlot categoryPlot0 = ganttRenderer0.getPlot();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        ganttRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, jDBCCategoryDataset0, plotRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = 0;
      Stroke stroke0 = minMaxCategoryRenderer0.lookupSeriesStroke(0);
      minMaxCategoryRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null, true);
      minMaxCategoryRenderer0.setGroupStroke(stackedBarRenderer0.DEFAULT_STROKE);
      Icon icon0 = minMaxCategoryRenderer0.getMinIcon();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.getUseFillPaint();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      int int1 = 192;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)99;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-54);
      byteArray0[6] = (byte) (-55);
      byteArray0[7] = (byte)20;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(192, (-3866), byteArray0, byteArray0, byteArray0, 0);
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesShapesVisible(118, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Element element0 = defaultStyledDocument0.getDefaultRootElement();
      PasswordView passwordView0 = new PasswordView(element0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Position.Bias position_Bias0 = defaultCaret0.getDotBias();
      Shape shape0 = passwordView0.modelToView(93, lineRenderer3D0.DEFAULT_SHAPE, (Position.Bias) null);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultMultiValueCategoryDataset0, 0, 118, false, 0.0, 4.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PeriodAxis periodAxis0 = new PeriodAxis("H8hz");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      Paint paint0 = combinedDomainXYPlot0.getRangeZeroBaselinePaint();
      lineRenderer3D0.setLegendTextPaint(9, paint0);
      CategoryURLGenerator categoryURLGenerator0 = lineRenderer3D0.getURLGenerator(0, 0, true);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("x", 0.2, 0.2);
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = levelRenderer0.getBaseToolTipGenerator();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(12.0, 893.56067, barRenderer3D0.ZERO, 0.2, lineAndShapeRenderer0.DEFAULT_PAINT, barRenderer3D0.DEFAULT_STROKE);
      barRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      CategoryLineAnnotation categoryLineAnnotation1 = new CategoryLineAnnotation(lineAndShapeRenderer0.ZERO, 8.0, lineAndShapeRenderer0.ZERO, (-1308.8), barRenderer3D0.DEFAULT_WALL_PAINT, barRenderer3D0.DEFAULT_OUTLINE_STROKE);
      categoryLineAnnotation1.setValue1((-1487.5));
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      lineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation1);
      lineAndShapeRenderer0.removeAnnotations();
      boolean boolean0 = lineAndShapeRenderer0.getDrawOutlines();
      lineAndShapeRenderer0.setSeriesShapesVisible(1831, false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      int int0 = 4051;
      CategoryToolTipGenerator categoryToolTipGenerator0 = barRenderer0.getSeriesToolTipGenerator(4051);
      barRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null, false);
      barRenderer0.setItemMargin(0.0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 0.2);
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      boolean boolean0 = true;
      JFreeChart jFreeChart0 = new JFreeChart("##h5jO{{M:&", barRenderer0.DEFAULT_VALUE_LABEL_FONT, compassPlot0, true);
      int int1 = 221;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 15, 4051, 0, 4051, 221, false, true, true, true, false, true, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, 0.0);
      double[][] doubleArray0 = new double[9][1];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 0.2;
      doubleArray1[1] = 0.2;
      doubleArray1[2] = 3175.2921341600195;
      doubleArray1[3] = 12.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) barRenderer3D0.ZERO;
      doubleArray2[1] = (double) barRenderer3D0.ZERO;
      doubleArray2[2] = 0.2;
      doubleArray2[3] = 12.0;
      doubleArray2[4] = 3.0;
      doubleArray2[5] = 8.0;
      doubleArray2[6] = 0.2;
      doubleArray2[7] = 3.0;
      doubleArray2[8] = 12.0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = 12.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = 3.0;
      doubleArray4[1] = (double) barRenderer3D0.ZERO;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[5];
      doubleArray5[0] = 12.0;
      doubleArray5[1] = 8.0;
      doubleArray5[2] = 3175.2921341600195;
      doubleArray5[3] = 8.0;
      doubleArray5[4] = 3175.2921341600195;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[9];
      doubleArray6[0] = (double) barRenderer3D0.ZERO;
      doubleArray6[1] = 12.0;
      doubleArray6[2] = (double) barRenderer3D0.ZERO;
      doubleArray6[3] = 3175.2921341600195;
      doubleArray6[4] = 8.0;
      doubleArray6[5] = (double) barRenderer3D0.ZERO;
      doubleArray6[6] = 3175.2921341600195;
      doubleArray6[7] = (-372.574591);
      doubleArray6[8] = 3175.2921341600195;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[3];
      doubleArray7[0] = 8.0;
      doubleArray7[1] = (double) barRenderer3D0.ZERO;
      doubleArray7[2] = (-372.574591);
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[5];
      doubleArray8[0] = 0.0;
      doubleArray8[1] = 0.2;
      doubleArray8[2] = 0.0;
      doubleArray8[3] = 437.9709043749;
      doubleArray8[4] = 8.0;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[9];
      doubleArray9[0] = 3175.2921341600195;
      doubleArray9[1] = 8.0;
      doubleArray9[2] = 437.9709043749;
      doubleArray9[3] = 0.2;
      doubleArray9[4] = 3175.2921341600195;
      doubleArray9[5] = 8.0;
      doubleArray9[6] = 3.0;
      doubleArray9[7] = 0.0;
      doubleArray9[8] = 8.0;
      doubleArray0[8] = doubleArray9;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, 2304, 2304);
      CategoryAxis categoryAxis0 = new CategoryAxis("Requires 'size' > 0.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-654.7), 5.0E7, "]hyT2T, q,(");
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingCategoryDataset0, categoryAxis0, cyclicNumberAxis0, barRenderer3D0);
      barRenderer3D0.setPlot(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      int int0 = groupedStackedBarRenderer0.hashCode();
      groupedStackedBarRenderer0.removeAnnotations();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      int int1 = (-431);
      ItemLabelPosition itemLabelPosition0 = defaultPolarItemRenderer0.getSeriesPositiveItemLabelPosition((-431));
      groupedStackedBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
      try {
        defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((double[][]) null, (double[][]) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'data' argument.
         //
         verifyException("org.jfree.data.DataUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Shape shape0 = lineRenderer3D0.getBaseLegendShape();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = taskSeriesCollection0.getRowIndex(8.0);
      int int1 = 73;
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, taskSeriesCollection0, 73, 73, false);
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setBase(2.5E8);
      Object object0 = waterfallBarRenderer0.clone();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      LegendItem legendItem0 = categoryStepRenderer0.getLegendItem((-2130), 3);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        categoryStepRenderer0.drawLine((Graphics2D) null, categoryStepRenderer_State0, plotOrientation0, (-2130), (double) waterfallBarRenderer0.ZERO, 0.0, 0.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.CategoryStepRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = 1281;
      Paint paint0 = minMaxCategoryRenderer0.lookupSeriesPaint(1281);
      Icon icon0 = minMaxCategoryRenderer0.getObjectIcon();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      int int1 = 1;
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 1281, 1);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, minMaxCategoryRenderer0.DEFAULT_SHAPE, slidingCategoryDataset0, 1281, 1, true, 5000000.0, 2.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.clearSeriesPaints(false);
      int int0 = defaultCategoryItemRenderer0.getRowCount();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Paint paint0 = statisticalBarRenderer0.getErrorIndicatorPaint();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      boxAndWhiskerRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      boolean boolean0 = true;
      boxAndWhiskerRenderer0.setFillBox(true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      int int0 = 354;
      Boolean boolean1 = statisticalLineAndShapeRenderer0.getSeriesShapesFilled(354);
      ColorModel colorModel0 = ColorModel.getRGBdefault();
      int int1 = 2444;
      int int2 = (-552);
      int int3 = 1411;
      int[] intArray0 = new int[8];
      intArray0[0] = 1411;
      intArray0[1] = 1411;
      intArray0[2] = 1411;
      intArray0[3] = 2444;
      intArray0[4] = 2444;
      intArray0[5] = 354;
      intArray0[6] = 0;
      intArray0[7] = 354;
      Point point0 = null;
      try {
        point0 = new Point((Point) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Point", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Font font0 = XYTextAnnotation.DEFAULT_FONT;
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, (-2805), statisticalLineAndShapeRenderer0.ZERO);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0, waferMapRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("", font0, waferMapPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Number[][] numberArray0 = new Number[2][3];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) 1024;
      numberArray1[1] = (Number) 1024;
      numberArray1[2] = (Number) 15;
      numberArray1[3] = (Number) 0.5F;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = (Number) 300;
      numberArray2[1] = (Number) 10;
      numberArray2[2] = (Number) 1.0F;
      numberArray2[3] = (Number) 1024;
      numberArray2[4] = (Number) 300;
      numberArray2[5] = (Number) 1024;
      numberArray0[1] = numberArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      statisticalLineAndShapeRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultIntervalCategoryDataset0, 1, (-419), true, 0.5, 10, true);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(0, true);
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getBaseURLGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setAutoPopulateSeriesShape(true);
      stackedBarRenderer3D0.setAutoPopulateSeriesShape(true);
      stackedBarRenderer3D0.clearSeriesPaints(true);
      Paint paint0 = stackedBarRenderer3D0.getWallPaint();
      boolean boolean0 = stackedBarRenderer3D0.isDrawBarOutline();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      boolean boolean0 = categoryStepRenderer0.getStagger();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      stackedBarRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      boolean boolean1 = stackedBarRenderer3D0.getShadowsVisible();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1791);
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(5, (CategoryItemLabelGenerator) null, false);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Range range0 = groupedStackedBarRenderer0.findRangeBounds(taskSeriesCollection0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setLegendTextFont(8, groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT);
      scatterRenderer0.setBaseShapesFilled(false);
      boolean boolean0 = scatterRenderer0.getItemShapeFilled((-2407), 3);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      double double0 = groupedStackedBarRenderer0.getMinimumBarLength();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(taskSeriesCollection0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 0, 8, 0, 0, 0, false, false, false, false, false, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      double[][] doubleArray0 = new double[2][6];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray2[1] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray2[2] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray2[3] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray2[4] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray2[5] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray2[6] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray2[7] = 0.0;
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setErrorIndicatorStroke(minMaxCategoryRenderer0.DEFAULT_STROKE);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      LegendItemCollection legendItemCollection0 = stackedBarRenderer0.getLegendItems();
      ItemLabelPosition itemLabelPosition0 = stackedBarRenderer0.getNegativeItemLabelPositionFallback();
      stackedBarRenderer0.setPositiveItemLabelPositionFallback((ItemLabelPosition) null);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer0.getSeriesItemLabelGenerator(0);
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesShapesFilled(33, true);
      stackedBarRenderer0.setShadowVisible(true);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(8.0, (-2832.405403), boxAndWhiskerRenderer0.ZERO, 3.0, stackedBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      stackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      boxAndWhiskerRenderer0.setMedianVisible(false);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setCompletePaint(lineRenderer3D0.DEFAULT_WALL_PAINT);
      boolean boolean0 = scatterRenderer0.getDrawOutlines();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Null 'plot' argument.", scatterRenderer0.ZERO, 2757.0, 0.0);
      stackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      GeneralPath generalPath0 = new GeneralPath();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = (-1);
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.addEntity(standardEntityCollection0, generalPath0, taskSeriesCollection0, (-1), (-1), true, 1824.894955263, (-1));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultKeyedValues2DDataset0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      lineAndShapeRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      Paint paint0 = meterPlot0.getTickPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, meterPlot0.DEFAULT_OUTLINE_PAINT, meterPlot0.DEFAULT_BACKGROUND_PAINT, paint0);
      double[] doubleArray0 = waterfallBarRenderer0.calculateBarL0L1(2816.9867118, 10, 4.0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.ChartMouseListener", stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_FONT, meterPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 542.150602212, 4.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryPlot categoryPlot0 = waterfallBarRenderer0.getPlot();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.drawBackground(graphics2D0, (CategoryPlot) null, rectangle2D0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      boolean boolean0 = stackedBarRenderer0.isDrawBarOutline();
      CategoryDataset categoryDataset0 = null;
      Range range0 = stackedBarRenderer0.findRangeBounds((CategoryDataset) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      Vector<CategoryLineAnnotation> vector0 = new Vector<CategoryLineAnnotation>();
      String string0 = "N([S(>yw:,zW`e~";
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("N([S(>yw:,zW`e~", stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_FONT, polarPlot0, false);
      int int0 = 507;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 15, 0, 508, 0, (-1525), 507, false, false, true, true, true, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double double0 = levelRenderer0.getItemMargin();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryURLGenerator categoryURLGenerator0 = levelRenderer0.getSeriesURLGenerator(0);
      boxAndWhiskerRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      boolean boolean0 = boxAndWhiskerRenderer0.isMedianVisible();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      ganttRenderer0.setIncompletePaint(levelRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      boolean boolean1 = lineAndShapeRenderer0.getDrawOutlines();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, false, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.setDrawOutlines(true);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalLineAndShapeRenderer0.getLegendItemLabelGenerator();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, statisticalLineAndShapeRenderer0.ZERO, 0.0, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = statisticalLineAndShapeRenderer0.removeAnnotation(categoryLineAnnotation0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      boolean boolean1 = stackedBarRenderer3D0.getIgnoreZeroValues();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      LogAxis logAxis0 = new LogAxis("");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("Oa8i{J", combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ItemLabelPosition itemLabelPosition0 = ganttRenderer0.getNegativeItemLabelPositionFallback();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getSeriesToolTipGenerator(0);
      ganttRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double double0 = lineRenderer3D0.getYOffset();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin((-2586.893910232));
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer0.getLegendItemURLGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = boxAndWhiskerRenderer0.isMeanVisible();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      JDialog jDialog0 = null;
      try {
        jDialog0 = new JDialog();
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false, true, false, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.createState(plotRenderingInfo0);
      boolean boolean0 = boxAndWhiskerRenderer0.isMedianVisible();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setLegendTextFont(200, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_FONT);
      lineAndShapeRenderer0.setSeriesLinesVisible(200, true);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.setDrawBarOutline(true);
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer0.getSeriesURLGenerator((-1996));
      stackedBarRenderer0.setSeriesURLGenerator(420, (CategoryURLGenerator) null, true);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Week week0 = new Week(0, 0);
      RegularTimePeriod regularTimePeriod0 = week0.previous();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Line2D.Double line2D_Double0 = new Line2D.Double((double) ganttRenderer0.ZERO, 97.67703516, 0.0, (-1640.4));
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge();
      double double0 = ganttRenderer0.getItemMiddle(regularTimePeriod0, regularTimePeriod0, defaultMultiValueCategoryDataset0, categoryAxis0, rectangle2D0, rectangleEdge0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      // Undeclared exception!
      try { 
        ganttRenderer0.setSeriesURLGenerator((-1244), (CategoryURLGenerator) standardCategoryURLGenerator0);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = barRenderer0.getRangeAxis(categoryPlot0, 0);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      barRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      MeterPlot meterPlot0 = new MeterPlot();
      Paint paint0 = meterPlot0.getValuePaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(barRenderer0.DEFAULT_OUTLINE_PAINT, paint0, valueAxis0.DEFAULT_TICK_MARK_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      Paint paint1 = waterfallBarRenderer0.getFirstBarPaint();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Boolean boolean0 = new Boolean("WOU*Cm|~|J#Ku*");
      boolean boolean1 = false;
      Shape shape0 = scatterRenderer0.lookupLegendShape(1277);
      boolean boolean2 = Boolean.logicalOr(false, true);
      boolean boolean3 = Boolean.logicalAnd(true, true);
      boolean boolean4 = Boolean.logicalAnd(true, true);
      scatterRenderer0.setSeriesShapesFilled(1277, boolean0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = barRenderer0.getSeriesToolTipGenerator((-713));
      // Undeclared exception!
      try { 
        barRenderer0.setSeriesToolTipGenerator((-713), (CategoryToolTipGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, 0.0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = lineAndShapeRenderer0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        ganttRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PiePlot piePlot0 = new PiePlot();
      JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
      int int0 = (-1337);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-1337), (-1337), 10, chartRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Width (-1337) and height (-1337) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Range range0 = scatterRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = boxAndWhiskerRenderer0.isMedianVisible();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getSeriesURLGenerator(408);
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Paint paint0 = boxAndWhiskerRenderer0.lookupSeriesFillPaint(2183);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      boxAndWhiskerRenderer0.setPlot(combinedDomainCategoryPlot0);
      boolean boolean0 = boxAndWhiskerRenderer0.equals(layeredBarRenderer0);
      layeredBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      String string0 = "Layer.BACKGROUND";
      JFreeChart jFreeChart0 = new JFreeChart("Layer.BACKGROUND", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(10, 10, renderingHints0);
      int int0 = 3;
      int int1 = (-2417);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(3, 10, (-2417));
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -2417
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }
}
