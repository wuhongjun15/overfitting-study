/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 11:10:15 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Paint;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.sql.Connection;
import java.sql.Statement;
import java.text.NumberFormat;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.event.PlotChangeEvent;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = true;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      int int0 = (-1);
      CategoryURLGenerator categoryURLGenerator0 = categoryStepRenderer0.getURLGenerator((-1), (-1), false);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.setSeriesURLGenerator((-1), (CategoryURLGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      NumberTickUnit numberTickUnit0 = new NumberTickUnit(3.0);
      categoryCrosshairState0.setRowKey(numberTickUnit0);
      int int0 = (-3785);
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("tX6", ringPlot0);
      int int1 = 67;
      boolean boolean0 = false;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 665, 31, 15, 719, 0, 67, false, true, true, false, false, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, numberTickUnit0, (Comparable) null, 20000.0, (-3785), 3026.77, (-3785), plotOrientation0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Paint paint0 = barRenderer3D0.getWallPaint();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      boolean boolean0 = defaultCategoryItemRenderer0.getUseOutlinePaint();
      CategoryPlot categoryPlot0 = defaultCategoryItemRenderer0.getPlot();
      boolean boolean1 = false;
      PlotChangeEvent plotChangeEvent0 = null;
      try {
        plotChangeEvent0 = new PlotChangeEvent((Plot) null);
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = true;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      int int0 = 1388;
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer3D0.getSeriesItemLabelGenerator(1388);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      double double0 = 5.0E10;
      double[] doubleArray0 = stackedBarRenderer0.calculateBarL0L1(5.0E10, 250000.0, 2.5E10);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Null 'polygon' argument.", "Null 'polygon' argument.", "org.jfree.chart.util.ObjectList");
      boolean boolean0 = standardCategoryURLGenerator0.equals("org.jfree.chart.util.ObjectList");
      boolean boolean1 = standardCategoryURLGenerator0.equals(stackedBarRenderer0);
      // Undeclared exception!
      try { 
        stackedBarRenderer0.setSeriesURLGenerator((-18), (CategoryURLGenerator) standardCategoryURLGenerator0, true);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      LegendItem legendItem0 = categoryStepRenderer0.getLegendItem(0, 0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = 0;
      levelRenderer0.setAutoPopulateSeriesShape(true);
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getSeriesURLGenerator(0);
      levelRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.setBaseLinesVisible(true);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultBoxAndWhiskerXYDataset defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset(0.2);
      int int1 = (-2526);
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerXYDataset0.getXDate(0, (-2526));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.clearSeriesPaints(false);
      double double0 = lineRenderer3D0.getYOffset();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryDataset categoryDataset0 = null;
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("The 'alpha' value must be in the range 0.0f to 1.0f.");
      char[] charArray0 = new char[1];
      charArray0[0] = '$';
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance(12.0, (-798.0));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
      // Undeclared exception!
      try { 
        subCategoryAxis0.DEFAULT_AXIS_LABEL_FONT.getStringBounds(charArray0, (-3051), (-3051), fontRenderContext0);
      } catch(IndexOutOfBoundsException e) {
         //
         // beginIndex: -3051
         //
         verifyException("java.awt.Font", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1272.54, 1272.54);
      int int0 = (-1011);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = null;
      try {
        standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Rd:#W,fg,^Lw0(Ltx;r", (NumberFormat) null, (NumberFormat) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double double0 = levelRenderer0.getMaximumItemWidth();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double double1 = boxAndWhiskerRenderer0.getItemMargin();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, (String) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Object object0 = lineRenderer3D0.clone();
      lineRenderer3D0.setXOffset(526.834);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 606;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(stackedAreaRenderer0);
      JFreeChart jFreeChart0 = rendererChangeEvent0.getChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null, false);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Number[][] numberArray0 = new Number[6][8];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[7];
      numberArray2[0] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray2[1] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray2[2] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray2[3] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray2[4] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray2[5] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray2[6] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[9];
      numberArray3[0] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray3[1] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray3[2] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray3[3] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray3[4] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray3[5] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray3[6] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray3[7] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray3[8] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[7];
      numberArray4[0] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray4[1] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray4[2] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray4[3] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray4[4] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray4[5] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray4[6] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[6];
      numberArray5[0] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray5[1] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray5[2] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray5[3] = (Number) defaultCategoryItemRenderer0.ZERO;
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      numberArray5[4] = (Number) integer0;
      numberArray5[5] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[5];
      numberArray6[0] = (Number) integer0;
      numberArray6[1] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray6[2] = (Number) integer0;
      numberArray6[3] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray6[4] = (Number) defaultCategoryItemRenderer0.ZERO;
      numberArray0[5] = numberArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = true;
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      double double0 = 20.0;
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setItemMargin(20.0);
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.LineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      boolean boolean0 = stackedBarRenderer3D0.equals(lineRenderer3D0);
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getSeriesURLGenerator((-121));
      LevelRenderer levelRenderer0 = new LevelRenderer();
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, numberAxis3D0, numberAxis3D0, (XYItemRenderer) null);
      JFreeChart jFreeChart0 = new JFreeChart("", stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_FONT, xYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getStackValues(taskSeriesCollection0, 4651, 4651);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
