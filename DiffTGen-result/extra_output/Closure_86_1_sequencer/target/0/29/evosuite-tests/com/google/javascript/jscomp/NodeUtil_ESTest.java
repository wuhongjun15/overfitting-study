/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 09:08:31 GMT 2020
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.qos.logback.classic.Level;
import com.google.common.base.Predicate;
import com.google.common.collect.BoundType;
import com.google.common.collect.ContiguousSet;
import com.google.common.collect.DiscreteDomain;
import com.google.common.collect.ImmutableSortedSet;
import com.google.common.collect.LinkedListMultimap;
import com.google.common.collect.Range;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.AbstractPeepholeOptimization;
import com.google.javascript.jscomp.AstParallelizer;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.CheckRegExp;
import com.google.javascript.jscomp.ClosureCodingConvention;
import com.google.javascript.jscomp.CodingConvention;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerInput;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.ControlFlowAnalysis;
import com.google.javascript.jscomp.DefaultCodingConvention;
import com.google.javascript.jscomp.DefaultPassConfig;
import com.google.javascript.jscomp.Denormalize;
import com.google.javascript.jscomp.DiagnosticType;
import com.google.javascript.jscomp.FindExportableNodes;
import com.google.javascript.jscomp.GoogleCodingConvention;
import com.google.javascript.jscomp.GroupVariableDeclarations;
import com.google.javascript.jscomp.JSError;
import com.google.javascript.jscomp.JSModule;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.LightweightMessageFormatter;
import com.google.javascript.jscomp.LoggerErrorManager;
import com.google.javascript.jscomp.MakeDeclaredNamesUnique;
import com.google.javascript.jscomp.MessageFormatter;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.NodeUtil;
import com.google.javascript.jscomp.PassConfig;
import com.google.javascript.jscomp.PeepholeFoldConstants;
import com.google.javascript.jscomp.PeepholeFoldWithTypes;
import com.google.javascript.jscomp.PeepholeRemoveDeadCode;
import com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax;
import com.google.javascript.jscomp.PrintStreamErrorManager;
import com.google.javascript.jscomp.ReferenceCollectingCallback;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.jscomp.ScopeCreator;
import com.google.javascript.jscomp.SimpleDefinitionFinder;
import com.google.javascript.jscomp.SourceExcerptProvider;
import com.google.javascript.jscomp.SourceMap;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.jscomp.TightenTypes;
import com.google.javascript.jscomp.TypedScopeCreator;
import com.google.javascript.jscomp.VarCheck;
import com.google.javascript.jscomp.VerboseMessageFormatter;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.TernaryValue;
import java.io.File;
import java.io.OutputStream;
import java.io.PrintStream;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.logging.Logger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NodeUtil_ESTest extends NodeUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Node node0 = new Node(49, 0, 0);
      node0.setType(49);
      Iterable<Node> iterable0 = node0.siblings();
      // Undeclared exception!
      try { 
        NodeUtil.getCatchBlock(node0);
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.isForIn((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString((-944), "com.google.common.base.CharMatcher$7", (-944), 0);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      Object object0 = new Object();
      node0.putProp(1000, object0);
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node0, nodeArray0);
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = NodeUtil.isLatin("kuueKk");
      PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
      Node node0 = Node.newNumber(0.0, 508, 508);
      Node node1 = peepholeFoldWithTypes0.optimizeSubtree(node0);
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node1, node1);
      } catch(IllegalStateException e) {
         //
         // Invalid attempt to remove node: NUMBER 0.0 508 of NUMBER 0.0 508
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Node node0 = Node.newString("57>XJ  xEX_=S");
      node0.setCharno((-164));
      boolean boolean0 = NodeUtil.isNameReferenced(node0, "57>XJ  xEX_=S");
      Node node1 = NodeUtil.getLoopCodeBlock(node0);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructure((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForFunction((Node) null, 2630);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "vR?";
      boolean boolean0 = NodeUtil.isValidPropertyName("vR?");
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getExpressionBooleanValue((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "i";
      boolean boolean0 = NodeUtil.isLatin("i");
      Node node0 = Node.newString("i", 0, 0);
      // Undeclared exception!
      try { 
        NodeUtil.callHasLocalResult(node0);
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Node node0 = Node.newNumber(37.0, 0, 0);
      boolean boolean0 = NodeUtil.isLhs(node0, node0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Node node0 = Node.newString("XM\"dtG-zE");
      // Undeclared exception!
      try { 
        NodeUtil.hasFinally(node0);
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = Node.newString("7W!,?sXRxcP@WWLikN");
      String string0 = node0.toString(true, true, true);
      boolean boolean0 = nodeUtil_MatchDeclaration0.apply(node0);
      boolean boolean1 = nodeUtil_MatchDeclaration0.equals((Object) null);
      Node node1 = null;
      // Undeclared exception!
      try { 
        nodeUtil_MatchDeclaration0.apply((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "";
      Node node0 = new Node(2507);
      Node node1 = NodeUtil.newVarNode("", node0);
      boolean boolean0 = NodeUtil.isAssignmentOp(node1);
      boolean boolean1 = NodeUtil.isLatin("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      boolean boolean2 = NodeUtil.isStatementBlock(node2);
      // Undeclared exception!
      try { 
        NodeUtil.getNearestFunctionName(node2);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Node node0 = new Node(2535, 2535, 2535);
      Node node1 = Node.newString("", 0, 0);
      Node node2 = NodeUtil.newExpr(node0);
      Node node3 = null;
      try {
        node3 = new Node(2535, node2, node0, node2, 44, 39);
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      // Undeclared exception!
      try { 
        NodeUtil.getFunctionBody((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Node node0 = Node.newString("comma", 1533, 1533);
      Node node1 = new Node(21, node0, node0, 309, 49);
      node1.setJSType((JSType) null);
      node0.addChildToFront(node1);
      boolean boolean0 = NodeUtil.isExpressionNode(node0);
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "\\?7eTG|EU(Oc\"p";
      Node node0 = Node.newString("?7eTG|EU(Oc\"p", (-2201), (-2201));
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForFunction(node0, 0);
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(0);
      Character character0 = Character.valueOf('9');
      boolean boolean0 = nodeUtil_MatchNodeType0.equals(character0);
      Node node0 = Node.newString(0, "");
      boolean boolean1 = nodeUtil_MatchNodeType0.apply(node0);
      boolean boolean2 = NodeUtil.isSimpleOperator(node0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node node1 = peepholeRemoveDeadCode0.optimizeSubtree(node0);
      String string0 = NodeUtil.getSourceName(node1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
      Character character0 = Character.valueOf('j');
      boolean boolean0 = Character.isSurrogate('j');
      boolean boolean1 = nodeUtil_MatchNotFunction0.equals(character0);
      boolean boolean2 = nodeUtil_MatchNotFunction0.equals("");
      Node node0 = null;
      // Undeclared exception!
      try { 
        nodeUtil_MatchNotFunction0.apply((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getBooleanValue((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = (-24);
      DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
      String string0 = "e_l{yU6*f=;tvPWPy";
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.newQualifiedNameNode((CodingConvention) defaultCodingConvention0, "e_l{yU6*f=;tvPWPy", (Node) null, "e_l{yU6*f=;tvPWPy");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      TernaryValue ternaryValue0 = NodeUtil.getExpressionBooleanValue(node0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getOpFromAssignmentOp((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
      boolean boolean0 = NodeUtil.isAssociative((-4804));
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.isAssignmentOp((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "3YvXp-=kC@N#";
      Node node0 = Node.newString("3YvXp-=kC@N#", 148, 42);
      node0.putIntProp((-249), 20);
      Node node1 = node0.cloneTree();
      // Undeclared exception!
      try { 
        NodeUtil.getConditionExpression(node0);
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("com.google.javascript.rhino.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.nodeTypeMayHaveSideEffects((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.mayHaveSideEffects((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        NodeUtil.isWithinLoop((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Node node0 = new Node(1247, 1247, 0);
      boolean boolean0 = NodeUtil.isNameReferenced(node0, "D/");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 0;
      // Undeclared exception!
      try { 
        NodeUtil.opToStrNoFail(0);
      } catch(Error e) {
         //
         // Unknown op 0: EOF
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 50, 43);
      Node node1 = new Node(0, node0, node0, node0, node0, 11, 1);
      boolean boolean0 = NodeUtil.containsFunction(node1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
      String string0 = "";
      Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "&", (-2072), (-2072));
      Logger logger0 = Logger.getGlobal();
      LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
      Compiler compiler0 = null;
      try {
        compiler0 = new Compiler(loggerErrorManager0);
      } catch(NoSuchMethodError e) {
         //
         // com.google.common.collect.ImmutableSet.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
         //
         verifyException("com.google.javascript.jscomp.ClosureCodingConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "";
      Vector<Node> vector0 = new Vector<Node>();
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      Node node0 = Node.newString(58, "");
      Node node1 = NodeUtil.getLoopCodeBlock(node0);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode((Node) null, nodeArray0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Node node0 = Node.newNumber((-2172.8070443943875));
      boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getAssignedValue((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
      String string0 = "UU6BJ'cjply|]?\"6{<";
      int int0 = 61;
      Node node0 = new Node(8, 8, 8);
      // Undeclared exception!
      try { 
        NodeUtil.getAssignedValue(node0);
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
      Node node0 = new Node(26);
      Node node1 = NodeUtil.newExpr(node0);
      // Undeclared exception!
      try { 
        NodeUtil.newExpr(node0);
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      boolean boolean0 = NodeUtil.isFunctionExpression(node0);
      SyntheticAst syntheticAst0 = new SyntheticAst("");
      Node node1 = syntheticAst0.getAstRoot((AbstractCompiler) null);
      TightenTypes tightenTypes0 = new TightenTypes((AbstractCompiler) null);
      // Undeclared exception!
      try { 
        tightenTypes0.getTypeRegistry();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.TightenTypes", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
      Node node0 = new Node(1529, 133, 133);
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForFunction(node0, 35);
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.isConstantName((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = NodeUtil.opToStr((-1211));
      Node node0 = Node.newNumber(2364.31058237195, 63, 1023);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node1 = null;
      try {
        node1 = new Node(1727, nodeArray0);
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "[3r";
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node0 = new Node((-780), 0, (-769));
      Node node1 = node0.cloneTree();
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForCallOrNew(node0, 0);
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.constructorCallHasSideEffects((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = 2863;
      // Undeclared exception!
      try { 
        NodeUtil.opToStrNoFail(2863);
      } catch(IllegalStateException e) {
         //
         // 2863
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Node node0 = Node.newString(536870912, ">~#LIHW6qCzQ+0PP;a");
      Node node1 = Node.newString(35, ">~#LIHW6qCzQ+0PP;a");
      boolean boolean0 = NodeUtil.isLoopStructure(node0);
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForCallOrNew(node0, 232);
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2640, nodeArray0, 172, 172);
      // Undeclared exception!
      try { 
        NodeUtil.getRootOfQualifiedName(node0);
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = "Pp";
      boolean boolean0 = NodeUtil.isValidPropertyName("Pp");
      PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
      Node node0 = null;
      Compiler compiler0 = null;
      try {
        compiler0 = new Compiler();
      } catch(NoSuchMethodError e) {
         //
         // com.google.common.collect.ImmutableSet.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
         //
         verifyException("com.google.javascript.jscomp.ClosureCodingConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "9QX\"L`|vVs8p{lS_F_";
      boolean boolean0 = NodeUtil.isLatin("9QX\"L`|vVs8p{lS_F_");
      int int0 = 0;
      Compiler compiler0 = null;
      try {
        compiler0 = new Compiler();
      } catch(NoSuchMethodError e) {
         //
         // com.google.common.collect.ImmutableSet.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
         //
         verifyException("com.google.javascript.jscomp.ClosureCodingConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-410), (-410));
      // Undeclared exception!
      try { 
        NodeUtil.getRootOfQualifiedName(node0);
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = (-1466);
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getConditionExpression((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.isGetOrSetKey((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getPrototypeClassName((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CodingConvention codingConvention0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.newQualifiedNameNode((CodingConvention) null, (String) null, 535, 3271);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = "Error";
      int int0 = 0;
      Node node0 = new Node(124);
      // Undeclared exception!
      try { 
        NodeUtil.getFnParameters(node0);
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(29);
      int int0 = (-2544);
      Node[] nodeArray0 = new Node[2];
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(29, node0, 11, 0);
      Node node2 = NodeUtil.getPrototypeClassName(node1);
      // Undeclared exception!
      try { 
        NodeUtil.getCatchBlock((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
      String string0 = "uX(|>A)3;J.";
      Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "uX(|>A)3;J.", (-862048943), (-862048943));
      Node node1 = NodeUtil.newExpr(node0);
      // Undeclared exception!
      try { 
        NodeUtil.getCatchBlock(node1);
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Node node0 = Node.newString("2#Wd~},");
      Node node1 = NodeUtil.getPrototypeClassName(node0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode((Node) null, nodeArray0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        NodeUtil.removeChild((Node) null, (Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = (-3909);
      Node node0 = Node.newString("", (-1908), (-1908));
      Node node1 = NodeUtil.newExpr(node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      String string0 = node0.checkTreeEquals(node1);
      // Undeclared exception!
      try { 
        NodeUtil.newVarNode("Unrecognized variable visibility: ", node0);
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
      Node node0 = null;
      Node node1 = NodeUtil.newVarNode("xterm", (Node) null);
      // Undeclared exception!
      try { 
        node1.checkTreeEqualsSilent((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = NodeUtil.newExpr(node0);
      boolean boolean0 = NodeUtil.isTryFinallyNode(node1, node1);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Node node0 = null;
      int int0 = 0;
      NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
      boolean boolean0 = nodeUtil_MatchNotFunction0.equals((Object) null);
      // Undeclared exception!
      try { 
        NodeUtil.getNodeTypeReferenceCount((Node) null, 0, nodeUtil_MatchNotFunction0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil$MatchNodeType", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Node node0 = Node.newString("", (-2347), (-2347));
      Node node1 = new Node((-2347), node0, node0, node0, node0);
      boolean boolean0 = NodeUtil.isSimpleOperator(node1);
      MockFile mockFile0 = new MockFile(".cO", "JSC_INVALID_CAST");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, false);
      String string0 = node0.getQualifiedName();
      PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager(mockPrintStream1);
      CheckLevel checkLevel0 = CheckLevel.ERROR;
      DiagnosticType diagnosticType0 = VarCheck.MISSING_MODULE_DEP_ERROR;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "wlMhlpbmTDt7$wlOKJ";
      stringArray0[1] = null;
      stringArray0[2] = "JSC_INVALID_CAST";
      stringArray0[3] = "";
      JSError jSError0 = JSError.make("JSC_INVALID_CAST", 29, 18, diagnosticType0, stringArray0);
      printStreamErrorManager0.println(checkLevel0, jSError0);
      Compiler compiler0 = null;
      try {
        compiler0 = new Compiler(printStreamErrorManager0);
      } catch(NoSuchMethodError e) {
         //
         // com.google.common.collect.ImmutableSet.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
         //
         verifyException("com.google.javascript.jscomp.ClosureCodingConvention", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Node node0 = NodeUtil.newUndefinedNode((Node) null);
      Node node1 = NodeUtil.getLoopCodeBlock(node0);
      // Undeclared exception!
      try { 
        NodeUtil.newFunctionNode("", (List<Node>) null, (Node) null, 0, 7);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.mayHaveSideEffects((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForCallOrNew((Node) null, 103);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      boolean boolean0 = NodeUtil.isValidPropertyName("hHu\"jf");
      int int0 = 3135;
      PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
      Node node0 = null;
      try {
        node0 = new Node(3135, (Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.isValidPropertyName((String) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.TokenStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      String string0 = NodeUtil.opToStr(32);
      DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
      // Undeclared exception!
      try { 
        NodeUtil.newName(defaultCodingConvention0, "typeof", (Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getLoopCodeBlock((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node node1 = NodeUtil.getLoopCodeBlock(node0);
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue((Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      boolean boolean0 = NodeUtil.isAssociative(41);
      boolean boolean1 = NodeUtil.isCommutative(742);
  }
}
