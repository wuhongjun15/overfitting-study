/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 13:47:53 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Button;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.color.ICC_Profile;
import java.awt.geom.AffineTransform;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.IndexColorModel;
import java.math.BigInteger;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.EventListener;
import java.util.SimpleTimeZone;
import javax.swing.Icon;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLayeredPane;
import javax.swing.JPasswordField;
import javax.swing.JTabbedPane;
import javax.swing.JTree;
import javax.swing.plaf.basic.BasicTabbedPaneUI;
import javax.swing.plaf.multi.MultiTreeUI;
import javax.swing.plaf.synth.SynthEditorPaneUI;
import javax.swing.plaf.synth.SynthTreeUI;
import javax.swing.text.DateFormatter;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.JTextComponent;
import javax.swing.text.NumberFormatter;
import javax.swing.text.Position;
import javax.swing.text.StyleContext;
import javax.swing.text.WrappedPlainView;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeSelectionModel;
import javax.swing.tree.TreeNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.GradientPaintTransformType;
import org.jfree.chart.util.GradientPaintTransformer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.StandardGradientPaintTransformer;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.MatrixSeries;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setAutoPopulateSeriesStroke(false);
      boxAndWhiskerRenderer0.setFillBox(true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = boxAndWhiskerRenderer0.getToolTipGenerator(24, 24, false);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      double[][] doubleArray0 = new double[3][8];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 1.0F;
      doubleArray1[1] = (double) 1.0F;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = (double) 10;
      doubleArray2[2] = (double) barRenderer0.ZERO;
      doubleArray2[3] = (double) 10;
      doubleArray2[4] = 3.0;
      doubleArray2[5] = (double) 10;
      doubleArray2[6] = (double) 10;
      doubleArray2[7] = (double) barRenderer0.ZERO;
      doubleArray2[8] = (double) barRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[9];
      doubleArray3[0] = 1.0;
      doubleArray3[1] = 594.0;
      doubleArray3[2] = 0.2;
      doubleArray3[3] = (double) statisticalBarRenderer0.ZERO;
      doubleArray3[4] = 0.2;
      doubleArray3[5] = 0.0;
      doubleArray3[6] = (double) 1.0F;
      doubleArray3[7] = (double) barRenderer0.ZERO;
      doubleArray3[8] = 0.2;
      doubleArray0[2] = doubleArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        barRenderer0.getDomainAxis((CategoryPlot) null, defaultIntervalCategoryDataset0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Paint paint0 = scatterRenderer0.lookupSeriesFillPaint(0);
      scatterRenderer0.setSeriesShapesFilled(0, false);
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      scatterRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      // Undeclared exception!
      try { 
        scatterRenderer0.setItemMargin((-496.1487395));
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.ScatterRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      int int0 = stackedAreaRenderer0.getPassCount();
      CategoryPlot categoryPlot0 = stackedAreaRenderer0.getPlot();
      SynthTreeUI synthTreeUI0 = new SynthTreeUI();
      JTree jTree0 = new JTree((TreeNode) null, false);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) synthTreeUI0;
      objectArray0[1] = (Object) null;
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 245);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      ItemLabelPosition itemLabelPosition0 = defaultPolarItemRenderer0.getNegativeItemLabelPosition((-317), (-317), true);
      waterfallBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      Paint paint0 = waterfallBarRenderer0.getLastBarPaint();
      int int0 = waterfallBarRenderer0.getColumnCount();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator(",l=", dateFormat0);
      boolean boolean0 = standardCategoryItemLabelGenerator0.equals(",l=");
      boolean boolean1 = standardCategoryItemLabelGenerator0.equals(intervalBarRenderer0);
      intervalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      intervalBarRenderer0.setShadowYOffset(0.0);
      intervalBarRenderer0.setShadowXOffset(0.0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesShapesFilled(0, true);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) intervalBarRenderer0.ZERO;
      AffineTransform affineTransform0 = null;
      try {
        affineTransform0 = new AffineTransform(doubleArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.setMinimumBarLength(2.5E11);
      layeredBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      layeredBarRenderer0.setDrawBarOutline(false);
      int int0 = 0;
      layeredBarRenderer0.setSeriesBarWidth(0, 0);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[5];
      MockFile mockFile0 = new MockFile("");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1915.2107577963106), 0.0, false);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("wF;XH");
      stackedBarRenderer3D0.setMinimumBarLength(0.0);
      boolean boolean0 = false;
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      int int0 = 1877;
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getURLGenerator(1877, 1877, false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      boolean boolean1 = statisticalBarRenderer0.equals(standardCategoryURLGenerator0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Paint paint0 = minMaxCategoryRenderer0.getGroupPaint();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemURLGenerator();
      minMaxCategoryRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setFirstBarPaint(statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("wF;XH", "wF;XH", "", "");
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItem legendItem0 = levelRenderer0.getLegendItem((-1), 0);
      levelRenderer0.setItemMargin(0.0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = (-1876);
      Paint paint0 = levelRenderer0.lookupSeriesPaint((-1876));
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 541.5411142);
      GradientPaintTransformer gradientPaintTransformer0 = intervalMarker0.getGradientPaintTransformer();
      statisticalBarRenderer0.setGradientPaintTransformer((GradientPaintTransformer) null);
      statisticalBarRenderer0.setErrorIndicatorPaint(levelRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      ItemLabelPosition itemLabelPosition0 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(0);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation(",t%0fAV#zx", ",t%0fAV#zx", (-3461.276976491));
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      waterfallBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.getRenderAsPercentages();
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, compassPlot0, false);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, false);
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      CategoryPlot categoryPlot0 = new CategoryPlot();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      intervalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode(intervalBarRenderer0);
      DefaultMutableTreeNode defaultMutableTreeNode1 = defaultMutableTreeNode0.getPreviousLeaf();
      JTree jTree0 = new JTree((TreeNode) null);
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      // Undeclared exception!
      try { 
        multiTreeUI0.getMaximumSize(jTree0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setMedianVisible(false);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      GradientPaintTransformType gradientPaintTransformType0 = GradientPaintTransformType.HORIZONTAL;
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer(gradientPaintTransformType0);
      layeredBarRenderer0.setGradientPaintTransformer(standardGradientPaintTransformer0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, symbolAxis0, layeredBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("", layeredBarRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, 10, 0, (-211), 2958465, 500, false, false, true, true, false, false, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(500, 2958465);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LayeredBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot();
      boolean boolean0 = minMaxCategoryRenderer0.hasListener(waferMapPlot0);
      boolean boolean1 = minMaxCategoryRenderer0.isDrawLines();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.setDrawBarOutline(false);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, (double) 1.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Element element0 = defaultStyledDocument0.getParagraphElement(1399);
      WrappedPlainView wrappedPlainView0 = new WrappedPlainView(element0, true);
      Position.Bias position_Bias0 = Position.Bias.Backward;
      Shape shape0 = wrappedPlainView0.modelToView(0, position_Bias0, 0, position_Bias0, stackedAreaRenderer0.DEFAULT_SHAPE);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, shape0, defaultCategoryDataset0, 0, 0, false);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Graphics2D graphics2D0 = null;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      JPasswordField jPasswordField0 = new JPasswordField(">?@ZFYmXkf1o");
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jPasswordField0.new AccessibleJTextComponent();
      Rectangle rectangle0 = jTextComponent_AccessibleJTextComponent0.getCharacterBounds(3);
      Rectangle2D rectangle2D0 = null;
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 1);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      LabelBlock labelBlock0 = new LabelBlock("{ayhx.Uw:s-*)Ts", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT);
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      // Undeclared exception!
      try { 
        scatterRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = false;
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      int int0 = (-1);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      Number[][] numberArray0 = new Number[9][0];
      Number[] numberArray1 = new Number[2];
      numberArray1[0] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray1[1] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[1];
      numberArray2[0] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[8];
      numberArray3[0] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray3[1] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray3[2] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray3[3] = (Number) lineAndShapeRenderer0.ZERO;
      double double0 = BarRenderer3D.DEFAULT_X_OFFSET;
      numberArray3[4] = (Number) 12.0;
      numberArray3[5] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray3[6] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray3[7] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[9];
      numberArray4[0] = (Number) lineAndShapeRenderer0.ZERO;
      double double1 = BarRenderer3D.DEFAULT_X_OFFSET;
      numberArray4[1] = (Number) 12.0;
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      numberArray4[2] = (Number) integer0;
      numberArray4[3] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray4[4] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray4[5] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray4[6] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray4[7] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray4[8] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[0];
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[0];
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[2];
      numberArray7[0] = (Number) integer0;
      numberArray7[1] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray0[6] = numberArray7;
      Number[] numberArray8 = new Number[8];
      numberArray8[0] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray8[1] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray8[2] = (Number) integer0;
      numberArray8[3] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray8[4] = (Number) lineAndShapeRenderer0.ZERO;
      numberArray8[5] = (Number) integer0;
      numberArray8[6] = (Number) integer0;
      numberArray8[7] = (Number) integer0;
      numberArray0[7] = numberArray8;
      Number[] numberArray9 = new Number[0];
      numberArray0[8] = numberArray9;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      String string0 = "";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 5, 0.0);
      // Undeclared exception!
      try { 
        categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, (Layer) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = waterfallBarRenderer0.getSeriesURLGenerator(42);
      boolean boolean0 = true;
      waterfallBarRenderer0.setSeriesURLGenerator(42, (CategoryURLGenerator) null, true);
      waterfallBarRenderer0.setBase((-582.53490715928));
      Paint paint0 = waterfallBarRenderer0.getFirstBarPaint();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Stroke stroke0 = boxAndWhiskerRenderer0.lookupSeriesStroke((-249));
      boxAndWhiskerRenderer0.setArtifactPaint(waterfallBarRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (-1.0), 0.2, (-582.53490715928), boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("Null 'orientation' argument.", "6%", "6%", "W `Dw");
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setItemLabelAnchorOffset(372.51521220989406);
      Paint paint0 = scatterRenderer0.lookupLegendTextPaint((-1190));
      scatterRenderer0.setUseOutlinePaint(true);
      LegendItem legendItem0 = scatterRenderer0.getLegendItem(1, 1);
      int int0 = scatterRenderer0.getRowCount();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemURLGenerator();
      boolean boolean0 = false;
      Graphics2D graphics2D0 = null;
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      BasicTabbedPaneUI basicTabbedPaneUI0 = new BasicTabbedPaneUI();
      categoryAxis0.setUpperMargin(372.51521220989406);
      categoryAxis0.removeChangeListener(combinedDomainCategoryPlot0);
      int int1 = (-85);
      int int2 = 3;
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane((-85), 3);
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryURLGenerator categoryURLGenerator0 = categoryStepRenderer0.getBaseURLGenerator();
      categoryStepRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryAxis categoryAxis0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      Button button0 = null;
      try {
        button0 = new Button("x|CA5@'0Mo");
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = (-992);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getBaseItemLabelGenerator();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.setSeriesItemLabelGenerator((-992), (CategoryItemLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getItemStroke(3900, 3900, false);
      minMaxCategoryRenderer0.setGroupStroke(stroke0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "", 107.1, (-1815.1248386548));
      boolean boolean0 = minMaxCategoryRenderer0.removeAnnotation(categoryPointerAnnotation0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultStatisticalCategoryDataset0);
      CategoryURLGenerator categoryURLGenerator0 = spiderWebPlot0.getURLGenerator();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setSeriesURLGenerator((-614), (CategoryURLGenerator) null, false);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) null);
      boolean boolean0 = lineAndShapeRenderer0.getUseFillPaint();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((double) lineAndShapeRenderer0.ZERO, (-1.5707963267948966));
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryURLGenerator categoryURLGenerator0 = spiderWebPlot0.getURLGenerator();
      barRenderer3D0.setSeriesURLGenerator(1, (CategoryURLGenerator) null, true);
      BarPainter barPainter0 = barRenderer3D0.getBarPainter();
      barRenderer3D0.setBarPainter(barPainter0);
      GradientPaintTransformType gradientPaintTransformType0 = GradientPaintTransformType.CENTER_HORIZONTAL;
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer(gradientPaintTransformType0);
      barRenderer3D0.setGradientPaintTransformer(standardGradientPaintTransformer0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) null);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((double) lineAndShapeRenderer0.ZERO, 1);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      BarPainter barPainter0 = barRenderer3D0.getBarPainter();
      barRenderer3D0.setBarPainter(barPainter0);
      GradientPaintTransformType gradientPaintTransformType0 = GradientPaintTransformType.CENTER_HORIZONTAL;
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer(gradientPaintTransformType0);
      barRenderer3D0.setGradientPaintTransformer(standardGradientPaintTransformer0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getBaseURLGenerator();
      // Undeclared exception!
      try { 
        barRenderer3D0.setSeriesURLGenerator((-2920), (CategoryURLGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(268.13138501, 268.13138501);
      DrawingSupplier drawingSupplier0 = stackedBarRenderer3D0.getDrawingSupplier();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 10);
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart("Null 'stroke' argument.", (Plot) null);
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      DatasetGroup datasetGroup0 = new DatasetGroup();
      Object object0 = datasetGroup0.clone();
      defaultStatisticalCategoryDataset0.setGroup(datasetGroup0);
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, false);
      boolean boolean0 = boxAndWhiskerRenderer0.getFillBox();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Null 'right' argument.");
      boxAndWhiskerRenderer0.setSeriesURLGenerator(213, (CategoryURLGenerator) standardCategoryURLGenerator0, false);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double double0 = levelRenderer0.getItemMargin();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setItemLabelAnchorOffset((double) levelRenderer0.ZERO);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Boolean boolean1 = candlestickRenderer0.getSeriesVisible(65);
      boolean boolean2 = Boolean.logicalXor(true, true);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(65, (Boolean) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      double double1 = stackedBarRenderer3D0.getItemMargin();
      stackedBarRenderer3D0.setAutoPopulateSeriesFillPaint(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      boolean boolean3 = ganttRenderer0.equals(stackedAreaRenderer0);
      boolean boolean4 = ganttRenderer0.equals(stackedBarRenderer3D0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      CategoryToolTipGenerator categoryToolTipGenerator0 = levelRenderer0.getSeriesToolTipGenerator(213);
      Paint paint0 = candlestickRenderer0.getSeriesFillPaint(213);
      WaterfallBarRenderer waterfallBarRenderer0 = null;
      try {
        waterfallBarRenderer0 = new WaterfallBarRenderer(minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, (Paint) null, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT);
      } catch(IllegalArgumentException e) {
         //
         // Null 'negativeBarPaint' argument
         //
         verifyException("org.jfree.chart.renderer.category.WaterfallBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(5, (-1047.0992320167), true);
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", dateFormat0);
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      GradientPaintTransformType gradientPaintTransformType0 = GradientPaintTransformType.CENTER_HORIZONTAL;
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer(gradientPaintTransformType0);
      boolean boolean0 = stackedBarRenderer3D0.equals(standardGradientPaintTransformer0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemLabelGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getBaseToolTipGenerator();
      stackedBarRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      CategoryToolTipGenerator categoryToolTipGenerator1 = stackedBarRenderer3D0.getBaseToolTipGenerator();
      categoryStepRenderer0.setSeriesToolTipGenerator(303, (CategoryToolTipGenerator) null, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = categoryStepRenderer0.getSeriesItemLabelGenerator(303);
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      Paint paint0 = minMaxCategoryRenderer0.getGroupPaint();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      ItemLabelPosition itemLabelPosition0 = defaultPolarItemRenderer0.getSeriesNegativeItemLabelPosition(5);
      stackedBarRenderer3D0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(5, false);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = lineRenderer3D0.getLegendItemURLGenerator();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.createState(plotRenderingInfo0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      stackedBarRenderer3D0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Object object0 = minMaxCategoryRenderer0.clone();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      Paint paint0 = minMaxCategoryRenderer0.getGroupPaint();
      PlotRenderingInfo plotRenderingInfo0 = null;
      CategoryItemRendererState categoryItemRendererState0 = minMaxCategoryRenderer0.createState((PlotRenderingInfo) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      int int0 = 234;
      // Undeclared exception!
      try { 
        defaultCategoryDataset0.removeRow(234);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 234, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      XYBoxAndWhiskerRenderer xYBoxAndWhiskerRenderer0 = new XYBoxAndWhiskerRenderer((double) statisticalLineAndShapeRenderer0.ZERO);
      xYBoxAndWhiskerRenderer0.setAutoPopulateSeriesStroke(true);
      boolean boolean0 = statisticalLineAndShapeRenderer0.hasListener(xYBoxAndWhiskerRenderer0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalLineAndShapeRenderer0.getItemLabelGenerator((-1089), 0, true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = null;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Q-Is'g";
      stringArray0[1] = "Base item URL generator not cloneable.";
      stringArray0[2] = "*@]eNe_H48(-g.R";
      stringArray0[3] = "X";
      stringArray0[4] = "6\n64wtxOQ`c0bm/1";
      stringArray0[5] = "Null 'orientation' argument.";
      Number[][] numberArray0 = new Number[7][4];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[5];
      numberArray2[0] = (Number) xYBoxAndWhiskerRenderer0.ZERO;
      numberArray2[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray2[2] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray2[3] = (Number) scatterRenderer0.ZERO;
      numberArray2[4] = (Number) xYBoxAndWhiskerRenderer0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[5];
      numberArray3[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray3[1] = (Number) xYBoxAndWhiskerRenderer0.ZERO;
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1089), "");
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(simpleTimeZone0);
      // Undeclared exception!
      try { 
        timeTableXYDataset0.getEndY((-1089), (-1089));
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Range range0 = areaRenderer0.findRangeBounds((CategoryDataset) jDBCCategoryDataset0, true);
      Stroke stroke0 = areaRenderer0.lookupSeriesStroke(0);
      areaRenderer0.setAutoPopulateSeriesShape(true);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      boolean boolean0 = areaRenderer0.equals(lineRenderer3D0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setGroupPaint(lineRenderer3D0.DEFAULT_WALL_PAINT);
      boolean boolean1 = lineRenderer3D0.getUseSeriesOffset();
      double double0 = lineRenderer3D0.getXOffset();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.getDomainAxis(categoryPlot0, jDBCCategoryDataset0);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      DrawingSupplier drawingSupplier0 = minMaxCategoryRenderer0.getDrawingSupplier();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setBaseLegendShape(minMaxCategoryRenderer0.DEFAULT_SHAPE);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = minMaxCategoryRenderer0.getItemLabelGenerator(0, (-1274), false);
      waterfallBarRenderer0.setShadowVisible(false);
      waterfallBarRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, false);
      Paint paint0 = waterfallBarRenderer0.getNegativeBarPaint();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Paint paint1 = statisticalBarRenderer0.lookupSeriesOutlinePaint(24);
      Shape shape0 = statisticalBarRenderer0.lookupLegendShape(2202);
      Stroke stroke0 = statisticalBarRenderer0.getErrorIndicatorStroke();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      boolean boolean0 = defaultCategoryItemRenderer0.getBaseLinesVisible();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      boolean boolean0 = categoryStepRenderer0.equals(layeredBarRenderer0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(layeredBarRenderer0.DEFAULT_PAINT, categoryStepRenderer0.DEFAULT_VALUE_LABEL_PAINT, categoryStepRenderer0.DEFAULT_PAINT, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryDataset categoryDataset0 = null;
      CategoryAxis categoryAxis0 = categoryStepRenderer0.getDomainAxis(categoryPlot0, (CategoryDataset) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'generator' argument.", defaultCategoryItemRenderer0.ZERO, 399.49611101127454);
      Layer layer0 = Layer.BACKGROUND;
      defaultCategoryItemRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      LegendItem legendItem0 = defaultCategoryItemRenderer0.getLegendItem(0, 0);
      Graphics2D graphics2D0 = null;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(15, 0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("pA8{*g@_9ayUJ#]a1>");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-22.0));
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(timePeriodValuesCollection0, cyclicNumberAxis0, defaultPolarItemRenderer0);
      Point point0 = polarPlot0.translateValueThetaRadiusToJava2D(0.05, 0.0, rectangle2D0);
      CategoryPlot categoryPlot0 = combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point0);
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("Null 'orientation' argument.", "j(})\"r[*yiXRF3d", "PC%Sz#qdT7;L", "PRINT");
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setAutoPopulateSeriesFillPaint(false);
      waterfallBarRenderer0.setDefaultEntityRadius(0);
      LegendItemCollection legendItemCollection0 = waterfallBarRenderer0.getLegendItems();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("", numberFormat0);
      defaultCategoryItemRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      Shape shape0 = defaultCategoryItemRenderer0.lookupLegendShape(3);
      boolean boolean0 = defaultCategoryItemRenderer0.getItemShapeFilled(62, 0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      defaultValueDataset0.validateObject();
      defaultValueDataset0.removeChangeListener(meterPlot0);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("", numberFormat0);
      Object object0 = intervalCategoryToolTipGenerator0.clone();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedAreaRenderer0.getLegendItemURLGenerator();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setMaximumItemWidth(10);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      boolean boolean0 = stackedBarRenderer3D0.getRenderAsPercentages();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", meterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2235, 270);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Number[][] numberArray0 = new Number[6][0];
      Number[] numberArray1 = new Number[2];
      Double double0 = new Double((-1654.60696942));
      numberArray1[0] = (Number) double0;
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      numberArray1[1] = (Number) integer0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[9];
      double double1 = BarRenderer3D.DEFAULT_Y_OFFSET;
      numberArray2[0] = (Number) 8.0;
      numberArray2[1] = (Number) 0.2;
      numberArray2[2] = (Number) levelRenderer0.ZERO;
      numberArray2[3] = (Number) 3.0F;
      numberArray2[4] = (Number) 0.2;
      numberArray2[5] = (Number) 0.5F;
      numberArray2[6] = (Number) 10;
      numberArray2[7] = (Number) double0;
      numberArray2[8] = (Number) 3.0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[0];
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[6];
      numberArray4[0] = (Number) 15;
      numberArray4[1] = (Number) 15;
      MatrixSeries matrixSeries0 = new MatrixSeries("7i\"0o5:t|HG", 270, 15);
      Number number0 = matrixSeries0.getItem(552);
      numberArray4[2] = number0;
      numberArray4[3] = (Number) 15;
      numberArray4[4] = (Number) layeredBarRenderer0.ZERO;
      numberArray4[5] = (Number) 10.0F;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[1];
      numberArray5[0] = (Number) integer0;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[2];
      numberArray6[0] = (Number) 3.0F;
      numberArray6[1] = (Number) 10;
      numberArray0[5] = numberArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, (ValueAxis) null, stackedBarRenderer3D0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getZoomRectangle();
      // Undeclared exception!
      try { 
        layeredBarRenderer0.drawDomainLine(graphics2D0, categoryPlot0, (Rectangle2D) null, 2074.65329, categoryPlot0.DEFAULT_CROSSHAIR_PAINT, stackedBarRenderer3D0.DEFAULT_STROKE);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double double0 = levelRenderer0.getMaximumItemWidth();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemURLGenerator();
      levelRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getBaseToolTipGenerator();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      statisticalBarRenderer0.removeAnnotations();
      Object object0 = statisticalBarRenderer0.clone();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      boolean boolean0 = minMaxCategoryRenderer0.isDrawLines();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PiePlot piePlot0 = new PiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("L_J", piePlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ganttRenderer0.setPlot(combinedRangeCategoryPlot0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = defaultCategoryItemRenderer0.createState(plotRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = minMaxCategoryRenderer0.hashCode();
      Paint paint0 = minMaxCategoryRenderer0.getGroupPaint();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      defaultXYItemRenderer0.setSeriesLinesVisible(0, false);
      Boolean boolean0 = defaultXYItemRenderer0.getSeriesLinesVisible((-1263));
      minMaxCategoryRenderer0.removeAnnotations();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Paint paint1 = statisticalBarRenderer0.getErrorIndicatorPaint();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      MultiTreeUI multiTreeUI0 = new MultiTreeUI();
      JTree jTree0 = new JTree();
      DefaultTreeSelectionModel defaultTreeSelectionModel0 = new DefaultTreeSelectionModel();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      GeneralPath generalPath0 = new GeneralPath();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        barRenderer3D0.addEntity(standardEntityCollection0, generalPath0, defaultBoxAndWhiskerCategoryDataset0, (-501), 45, false);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int0 = 0;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      levelRenderer0.setLegendShape(0, rectangle2D_Float0);
      levelRenderer0.setAutoPopulateSeriesShape(true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", 0.2, (double) levelRenderer0.ZERO);
      boolean boolean0 = categoryTextAnnotation0.hasListener((EventListener) null);
      categoryTextAnnotation0.setPaint(levelRenderer0.DEFAULT_OUTLINE_PAINT);
      boolean boolean1 = levelRenderer0.equals(categoryTextAnnotation0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setRenderAsPercentages(false);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setBarPainter((BarPainter) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'painter' argument.
         //
         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, true);
      Shape shape0 = defaultCategoryItemRenderer0.lookupSeriesShape(4055);
      boolean boolean0 = defaultCategoryItemRenderer0.getUseSeriesOffset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Object object0 = scatterRenderer0.clone();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      SynthEditorPaneUI synthEditorPaneUI0 = new SynthEditorPaneUI();
      DateFormatter dateFormatter0 = new DateFormatter();
      NumberFormatter numberFormatter0 = new NumberFormatter();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory(dateFormatter0, numberFormatter0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFormattedTextField jFormattedTextField0 = null;
      try {
        jFormattedTextField0 = new JFormattedTextField(defaultFormatterFactory0, statisticalBarRenderer0);
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      String string0 = "";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 5, 0.0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.equals(categoryStepRenderer0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BarPainter barPainter0 = BarRenderer.getDefaultBarPainter();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemToolTipGenerator();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      int int0 = (-1);
      int int1 = 0;
      int[] intArray0 = new int[3];
      intArray0[0] = 15;
      intArray0[1] = 10;
      intArray0[2] = 40;
      BigInteger bigInteger0 = BigInteger.ONE;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(10, 40, intArray0, 10, (-299), bigInteger0);
      } catch(IllegalArgumentException e) {
         //
         // transferType must be eitherDataBuffer.TYPE_BYTE or DataBuffer.TYPE_USHORT
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame();
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("XK-t%qP]{", statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO);
      Layer layer0 = Layer.FOREGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      boolean boolean0 = statisticalLineAndShapeRenderer0.equals((Object) null);
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.setBase(0.0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      boolean boolean0 = BarRenderer.getDefaultShadowsVisible();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      IntervalMarker intervalMarker0 = new IntervalMarker((-2385.358109), 8.0, barRenderer3D0.DEFAULT_PAINT);
      boolean boolean1 = barRenderer3D0.equals(intervalMarker0);
  }
}
