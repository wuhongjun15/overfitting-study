/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 23 09:02:26 GMT 2020
 */

package org.apache.commons.math.stat;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.Iterator;
import org.apache.commons.math.stat.Frequency;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

public class TestClass {

  //Test case number: 0
  /*
   * 126 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch
   * Goal 2. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 3. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 4. org.apache.commons.math.stat.Frequency.getCumFreq(I)J: root-Branch
   * Goal 5. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 7. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 8. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 9. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true
   * Goal 10. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 11. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 12. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 13. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 14. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false
   * Goal 15. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 16. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 17. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 18. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 19. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false
   * Goal 20. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false
   * Goal 21. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 22. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 23. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J
   * Goal 24. org.apache.commons.math.stat.Frequency.getCumFreq(I)J
   * Goal 25. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 26. org.apache.commons.math.stat.Frequency.addValue(I)V
   * Goal 27. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V
   * Goal 28. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 29. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J
   * Goal 30. org.apache.commons.math.stat.Frequency.getCumFreq(I)J
   * Goal 31. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 32. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V
   * Goal 33. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 34. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 35. Branch org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch in context: 
   * Goal 36. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 37. Branch org.apache.commons.math.stat.Frequency.getCumFreq(I)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(I)J
   * Goal 38. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 39. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 40. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 41. Branch org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(I)V
   * Goal 42. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Comparable;)V
   * Goal 43. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Comparable;)V
   * Goal 44. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 45. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 46. Weak Mutation 0: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:80 - ReplaceConstant - Value 	 Freq. 	 Pct. 	 Cum Pct. 
 -> 
   * Goal 47. Weak Mutation 1: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:82 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 2: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 0
   * Goal 49. Weak Mutation 3: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 1
   * Goal 50. Weak Mutation 4: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> -1
   * Goal 51. Weak Mutation 5: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 8
   * Goal 52. Weak Mutation 6: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 10
   * Goal 53. Weak Mutation 7: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 0
   * Goal 54. Weak Mutation 8: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 1
   * Goal 55. Weak Mutation 9: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> -1
   * Goal 56. Weak Mutation 10: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 8
   * Goal 57. Weak Mutation 11: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 10
   * Goal 58. Weak Mutation 12: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 0
   * Goal 59. Weak Mutation 13: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 1
   * Goal 60. Weak Mutation 14: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> -1
   * Goal 61. Weak Mutation 15: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 8
   * Goal 62. Weak Mutation 16: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 10
   * Goal 63. Weak Mutation 17: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 0
   * Goal 64. Weak Mutation 18: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 1
   * Goal 65. Weak Mutation 19: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> -1
   * Goal 66. Weak Mutation 20: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 9
   * Goal 67. Weak Mutation 21: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 11
   * Goal 68. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 69. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 70. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 71. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 72. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 73. Weak Mutation 41: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceConstant - Value not comparable to existing values. -> 
   * Goal 74. Weak Mutation 42: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceComparisonOperator == -> !=
   * Goal 75. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 76. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 77. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 78. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 79. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 80. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 81. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 82. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 83. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 84. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 85. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 86. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 87. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 88. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 89. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 90. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 91. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 92. Weak Mutation 75: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> <
   * Goal 93. Weak Mutation 81: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - InsertUnaryOp Negation
   * Goal 94. Weak Mutation 82: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> +
   * Goal 95. Weak Mutation 83: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> %
   * Goal 96. Weak Mutation 84: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> -
   * Goal 97. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 98. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 99. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 100. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 101. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 102. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 103. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 104. Weak Mutation 104: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:350 - ReplaceComparisonOperator = null -> != null
   * Goal 105. Weak Mutation 105: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:354 - InsertUnaryOp Negation
   * Goal 106. Weak Mutation 108: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> >
   * Goal 107. Weak Mutation 113: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> <=
   * Goal 108. Weak Mutation 115: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp Negation
   * Goal 109. Weak Mutation 116: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp IINC 1
   * Goal 110. Weak Mutation 117: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp IINC -1
   * Goal 111. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 112. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 113. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 114. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   * Goal 115. Weak Mutation 132: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - InsertUnaryOp Negation
   * Goal 116. Weak Mutation 133: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> +
   * Goal 117. Weak Mutation 134: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> %
   * Goal 118. Weak Mutation 135: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> -
   * Goal 119. Weak Mutation 43: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp Negation
   * Goal 120. Weak Mutation 44: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC 1
   * Goal 121. Weak Mutation 45: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC -1
   * Goal 122. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:nonnull
   * Goal 123. org.apache.commons.math.stat.Frequency.getCumFreq(I)J:zero
   * Goal 124. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:positive
   * Goal 125. addValue(I)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 126. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 353
   */

  

  //Test case number: 1
  /*
   * 196 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 8. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: Line 410
   * Goal 9. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 10. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 11. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 287
   * Goal 12. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 289
   * Goal 13. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 14. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 15. org.apache.commons.math.stat.Frequency.getPct(I)D: Line 300
   * Goal 16. org.apache.commons.math.stat.Frequency.addValue(J)V: Line 174
   * Goal 17. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 431
   * Goal 18. org.apache.commons.math.stat.Frequency.addValue(J)V: Line 175
   * Goal 19. org.apache.commons.math.stat.Frequency.getCumPct(I)D: Line 444
   * Goal 20. org.apache.commons.math.stat.Frequency.getPct(C)D: Line 322
   * Goal 21. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 67
   * Goal 22. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 68
   * Goal 23. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: Line 201
   * Goal 24. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 25. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 26. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 27. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 28. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 29. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 30. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 31. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 32. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 33. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 34. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 35. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 36. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 350
   * Goal 37. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 351
   * Goal 38. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 353
   * Goal 39. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 354
   * Goal 40. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 355
   * Goal 41. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 42. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 357
   * Goal 43. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 44. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 45. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 361
   * Goal 46. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 234
   * Goal 47. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 362
   * Goal 48. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 235
   * Goal 49. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 237
   * Goal 50. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 110
   * Goal 51. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 239
   * Goal 52. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 496
   * Goal 53. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 112
   * Goal 54. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 240
   * Goal 55. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 115
   * Goal 56. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 118
   * Goal 57. org.apache.commons.math.stat.Frequency.getCount(I)J: Line 250
   * Goal 58. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 59. org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch
   * Goal 60. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch
   * Goal 61. org.apache.commons.math.stat.Frequency.getPct(I)D: root-Branch
   * Goal 62. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 63. org.apache.commons.math.stat.Frequency.getCount(I)J: root-Branch
   * Goal 64. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch
   * Goal 65. org.apache.commons.math.stat.Frequency.getPct(C)D: root-Branch
   * Goal 66. org.apache.commons.math.stat.Frequency.getCumPct(I)D: root-Branch
   * Goal 67. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - true
   * Goal 68. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 69. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 70. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 71. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true
   * Goal 72. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 73. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 74. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 75. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 76. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - false
   * Goal 77. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 78. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 79. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 80. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - false
   * Goal 81. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 82. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false
   * Goal 83. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false
   * Goal 84. Weak Mutation 132: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - InsertUnaryOp Negation
   * Goal 85. Weak Mutation 133: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> +
   * Goal 86. Weak Mutation 134: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> %
   * Goal 87. Weak Mutation 135: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> -
   * Goal 88. Weak Mutation 137: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp Negation
   * Goal 89. Weak Mutation 138: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp IINC 1
   * Goal 90. Weak Mutation 139: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp IINC -1
   * Goal 91. Weak Mutation 22: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:110 - ReplaceComparisonOperator != -> ==
   * Goal 92. Weak Mutation 23: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> 0
   * Goal 93. Weak Mutation 24: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> 1
   * Goal 94. Weak Mutation 25: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> -2
   * Goal 95. Weak Mutation 26: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:115 - ReplaceComparisonOperator == -> !=
   * Goal 96. Weak Mutation 27: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:118 - ReplaceConstant - Object must implement Comparable -> 
   * Goal 97. Weak Mutation 28: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:118 - ReplaceComparisonOperator == -> !=
   * Goal 98. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 99. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 100. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 101. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 102. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 103. Weak Mutation 46: org.apache.commons.math.stat.Frequency.addValue(J)V:174 - InsertUnaryOp Negation
   * Goal 104. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 105. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 106. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 107. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 108. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 109. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 110. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 111. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 112. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 113. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 114. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 115. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 116. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 117. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 118. Weak Mutation 64: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp Negation
   * Goal 119. Weak Mutation 65: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp IINC 1
   * Goal 120. Weak Mutation 66: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp IINC -1
   * Goal 121. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 122. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 123. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 124. Weak Mutation 74: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> -1
   * Goal 125. Weak Mutation 75: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> <
   * Goal 126. Weak Mutation 77: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 0.0
   * Goal 127. Weak Mutation 78: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 1.0
   * Goal 128. Weak Mutation 79: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> -1.0
   * Goal 129. Weak Mutation 80: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> NaN
   * Goal 130. Weak Mutation 81: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - InsertUnaryOp Negation
   * Goal 131. Weak Mutation 82: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> +
   * Goal 132. Weak Mutation 83: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> %
   * Goal 133. Weak Mutation 84: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> -
   * Goal 134. Weak Mutation 86: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp Negation
   * Goal 135. Weak Mutation 87: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp IINC 1
   * Goal 136. Weak Mutation 88: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp IINC -1
   * Goal 137. Weak Mutation 90: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp Negation
   * Goal 138. Weak Mutation 91: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp IINC 1
   * Goal 139. Weak Mutation 92: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp IINC -1
   * Goal 140. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 141. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 142. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 143. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 144. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 145. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 146. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 147. Weak Mutation 104: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:350 - ReplaceComparisonOperator = null -> != null
   * Goal 148. Weak Mutation 105: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:354 - InsertUnaryOp Negation
   * Goal 149. Weak Mutation 108: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> >
   * Goal 150. Weak Mutation 113: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> <=
   * Goal 151. Weak Mutation 119: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp Negation
   * Goal 152. Weak Mutation 120: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC 1
   * Goal 153. Weak Mutation 121: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC -1
   * Goal 154. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 155. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 156. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 157. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   * Goal 158. org.apache.commons.math.stat.Frequency.getPct(I)D:positive
   * Goal 159. org.apache.commons.math.stat.Frequency.getCount(I)J:positive
   * Goal 160. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 161. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 162. org.apache.commons.math.stat.Frequency.getPct(I)D
   * Goal 163. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D
   * Goal 164. org.apache.commons.math.stat.Frequency.getCumPct(I)D
   * Goal 165. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;
   * Goal 166. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V
   * Goal 167. org.apache.commons.math.stat.Frequency.getPct(C)D
   * Goal 168. org.apache.commons.math.stat.Frequency.getCumFreq(C)J
   * Goal 169. org.apache.commons.math.stat.Frequency.getCount(I)J
   * Goal 170. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 171. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 172. org.apache.commons.math.stat.Frequency.getPct(I)D
   * Goal 173. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D
   * Goal 174. org.apache.commons.math.stat.Frequency.getCumPct(I)D
   * Goal 175. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;
   * Goal 176. org.apache.commons.math.stat.Frequency.getPct(C)D
   * Goal 177. org.apache.commons.math.stat.Frequency.getCumFreq(C)J
   * Goal 178. org.apache.commons.math.stat.Frequency.getCount(I)J
   * Goal 179. Branch org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>(Ljava/util/Comparator;)V
   * Goal 180. Branch org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(J)V
   * Goal 181. Branch org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - false in context: org.apache.commons.math.stat.Frequency:getPct(Ljava/lang/Object;)D
   * Goal 182. Branch org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch in context: 
   * Goal 183. Branch org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch in context: org.apache.commons.math.stat.Frequency:valuesIterator()Ljava/util/Iterator;
   * Goal 184. Branch org.apache.commons.math.stat.Frequency.getPct(I)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(I)D
   * Goal 185. Branch org.apache.commons.math.stat.Frequency.getCumPct(I)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(I)D
   * Goal 186. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - false in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 187. Branch org.apache.commons.math.stat.Frequency.getPct(C)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(C)D
   * Goal 188. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - true in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 189. Branch org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(C)J
   * Goal 190. Branch org.apache.commons.math.stat.Frequency.getCount(I)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCount(I)J
   * Goal 191. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;:nonnull
   * Goal 192. org.apache.commons.math.stat.Frequency.getCumPct(I)D:positive
   * Goal 193. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:positive
   * Goal 194. org.apache.commons.math.stat.Frequency.getPct(C)D:zero
   * Goal 195. org.apache.commons.math.stat.Frequency.getCumFreq(C)J:zero
   * Goal 196. addValue(Ljava/lang/Object;)V_java.lang.IllegalArgumentException_EXPLICIT
   */

  public void test01()  throws Throwable  {
      Frequency.clearORefMap();
	Frequency frequency0 = new Frequency((Comparator) null);
      double double0 = frequency0.getPct((Object) "exzbN0");
      frequency0.addValue((long) (-1603));
      double double1 = frequency0.getPct('q');
      double double2 = frequency0.getPct('x');
      long long0 = frequency0.getCount((-1603));
      double double3 = frequency0.getCumPct((-1603));
      long long1 = frequency0.getCumFreq('7');
      double double4 = frequency0.getPct((-1603));
      frequency0.addValue(0L);
      Iterator iterator0 = frequency0.valuesIterator();
      // Undeclared exception!
      try { 
        frequency0.addValue((Object) frequency0);
      } catch(IllegalArgumentException e) {
         //
         // Object must implement Comparable
         //
         assertThrownBy("org.apache.commons.math.stat.Frequency", e);
      }
  }

  //Test case number: 2
  /*
   * 118 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 6. org.apache.commons.math.stat.Frequency.getCount(C)J: Line 270
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 144
   * Goal 8. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 9. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 146
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 11. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 12. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 13. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 14. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 15. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 16. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 17. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 18. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 19. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 20. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 21. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 22. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 23. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 353
   * Goal 24. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 354
   * Goal 25. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 26. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 27. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 28. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 234
   * Goal 29. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 30. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 235
   * Goal 31. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 32. org.apache.commons.math.stat.Frequency.addValue(J)V: Line 174
   * Goal 33. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 431
   * Goal 34. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 239
   * Goal 35. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 240
   * Goal 36. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 183
   * Goal 37. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 184
   * Goal 38. org.apache.commons.math.stat.Frequency.<init>()V: Line 58
   * Goal 39. org.apache.commons.math.stat.Frequency.<init>()V: Line 59
   * Goal 40. org.apache.commons.math.stat.Frequency.getCumPct(I)D: Line 444
   * Goal 41. org.apache.commons.math.stat.Frequency.getCount(C)J: root-Branch
   * Goal 42. org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch
   * Goal 43. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 44. org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch
   * Goal 45. org.apache.commons.math.stat.Frequency.getCumPct(I)D: root-Branch
   * Goal 46. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 47. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 48. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 49. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 50. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 51. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 52. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 53. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 54. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 55. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 56. Weak Mutation 132: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - InsertUnaryOp Negation
   * Goal 57. Weak Mutation 133: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> +
   * Goal 58. Weak Mutation 135: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> -
   * Goal 59. Weak Mutation 137: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp Negation
   * Goal 60. Weak Mutation 138: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp IINC 1
   * Goal 61. Weak Mutation 139: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp IINC -1
   * Goal 62. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 63. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 64. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 65. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 66. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 67. Weak Mutation 41: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceConstant - Value not comparable to existing values. -> 
   * Goal 68. Weak Mutation 42: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceComparisonOperator == -> !=
   * Goal 69. Weak Mutation 46: org.apache.commons.math.stat.Frequency.addValue(J)V:174 - InsertUnaryOp Negation
   * Goal 70. Weak Mutation 47: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp Negation
   * Goal 71. Weak Mutation 48: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC 1
   * Goal 72. Weak Mutation 49: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC -1
   * Goal 73. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 75. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 76. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 77. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 78. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 79. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 80. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 81. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 82. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 83. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 84. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 85. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 86. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 87. Weak Mutation 68: org.apache.commons.math.stat.Frequency.getCount(C)J:270 - InsertUnaryOp Negation
   * Goal 88. Weak Mutation 69: org.apache.commons.math.stat.Frequency.getCount(C)J:270 - InsertUnaryOp IINC 1
   * Goal 89. Weak Mutation 70: org.apache.commons.math.stat.Frequency.getCount(C)J:270 - InsertUnaryOp IINC -1
   * Goal 90. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 91. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 92. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 93. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 94. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 95. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 96. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 97. Weak Mutation 105: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:354 - InsertUnaryOp Negation
   * Goal 98. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 99. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 100. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 101. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   * Goal 102. org.apache.commons.math.stat.Frequency.getCount(C)J:positive
   * Goal 103. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 104. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 105. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 106. org.apache.commons.math.stat.Frequency.getCumPct(I)D
   * Goal 107. org.apache.commons.math.stat.Frequency.getCount(C)J
   * Goal 108. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 109. org.apache.commons.math.stat.Frequency.getCumPct(I)D
   * Goal 110. org.apache.commons.math.stat.Frequency.getCount(C)J
   * Goal 111. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 112. Branch org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(J)V
   * Goal 113. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 114. Branch org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(C)V
   * Goal 115. Branch org.apache.commons.math.stat.Frequency.getCumPct(I)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(I)D
   * Goal 116. Branch org.apache.commons.math.stat.Frequency.getCount(C)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCount(C)J
   * Goal 117. org.apache.commons.math.stat.Frequency.getCumPct(I)D:zero
   * Goal 118. addValue(J)V_java.lang.IllegalArgumentException_EXPLICIT
   */

  

  //Test case number: 3
  /*
   * 79 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 67
   * Goal 2. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 68
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 8. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 9. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 10. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 11. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 12. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 13. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 14. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 15. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 16. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 17. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 18. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 19. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 20. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 21. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 22. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 23. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 24. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 431
   * Goal 25. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 183
   * Goal 26. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 184
   * Goal 27. org.apache.commons.math.stat.Frequency.clear()V: Line 188
   * Goal 28. org.apache.commons.math.stat.Frequency.clear()V: Line 189
   * Goal 29. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 30. org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch
   * Goal 31. org.apache.commons.math.stat.Frequency.clear()V: root-Branch
   * Goal 32. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 33. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 34. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 35. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 36. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 37. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 38. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 39. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 40. getCumPct(Ljava/lang/Object;)D_java.lang.NullPointerException_IMPLICIT
   * Goal 41. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 42. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 43. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 44. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D
   * Goal 45. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 46. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 47. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 48. Branch org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>(Ljava/util/Comparator;)V
   * Goal 49. Branch org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(C)V
   * Goal 50. Branch org.apache.commons.math.stat.Frequency.clear()V: root-Branch in context: org.apache.commons.math.stat.Frequency:clear()V
   * Goal 51. Branch org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true in context: org.apache.commons.math.stat.Frequency:getCumPct(Ljava/lang/Object;)D
   * Goal 52. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 54. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 55. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 56. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 57. Weak Mutation 47: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp Negation
   * Goal 58. Weak Mutation 48: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC 1
   * Goal 59. Weak Mutation 49: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC -1
   * Goal 60. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 61. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 62. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 63. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 64. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 65. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 66. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 67. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 68. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 69. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 70. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 71. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 72. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 73. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 74. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 76. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 77. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 78. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 79. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   */

  

  //Test case number: 4
  /*
   * 60 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 67
   * Goal 2. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 68
   * Goal 3. org.apache.commons.math.stat.Frequency.getCount(J)J: Line 260
   * Goal 4. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 7. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 8. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 9. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 234
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 11. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 235
   * Goal 12. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 13. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 14. org.apache.commons.math.stat.Frequency.addValue(J)V: Line 174
   * Goal 15. org.apache.commons.math.stat.Frequency.addValue(J)V: Line 175
   * Goal 16. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 239
   * Goal 17. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 240
   * Goal 18. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 144
   * Goal 19. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 146
   * Goal 20. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 21. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 22. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 183
   * Goal 23. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 24. org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch
   * Goal 25. org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch
   * Goal 26. org.apache.commons.math.stat.Frequency.getCount(J)J: root-Branch
   * Goal 27. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 28. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 29. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 30. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 31. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 32. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 33. Weak Mutation 67: org.apache.commons.math.stat.Frequency.getCount(J)J:260 - InsertUnaryOp Negation
   * Goal 34. Weak Mutation 41: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceConstant - Value not comparable to existing values. -> 
   * Goal 35. Weak Mutation 42: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 46: org.apache.commons.math.stat.Frequency.addValue(J)V:174 - InsertUnaryOp Negation
   * Goal 37. Weak Mutation 47: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp Negation
   * Goal 38. Weak Mutation 48: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC 1
   * Goal 39. Weak Mutation 49: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC -1
   * Goal 40. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 42. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 44. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 45. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 46. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 47. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 48. org.apache.commons.math.stat.Frequency.getCount(J)J:positive
   * Goal 49. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 50. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 51. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 52. org.apache.commons.math.stat.Frequency.getCount(J)J
   * Goal 53. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 54. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 55. org.apache.commons.math.stat.Frequency.getCount(J)J
   * Goal 56. Branch org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>(Ljava/util/Comparator;)V
   * Goal 57. Branch org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(J)V
   * Goal 58. Branch org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(C)V
   * Goal 59. Branch org.apache.commons.math.stat.Frequency.getCount(J)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCount(J)J
   * Goal 60. addValue(C)V_java.lang.IllegalArgumentException_EXPLICIT
   */

  

  //Test case number: 5
  /*
   * 60 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 67
   * Goal 2. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 68
   * Goal 3. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 4. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 5. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 6. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 7. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 8. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 429
   * Goal 9. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 10. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 11. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 12. org.apache.commons.math.stat.Frequency.getPct(J)D: Line 311
   * Goal 13. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 14. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 15. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 16. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 287
   * Goal 17. org.apache.commons.math.stat.Frequency.getPct(J)D: root-Branch
   * Goal 18. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 19. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 20. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 21. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - false
   * Goal 22. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - false
   * Goal 23. getCount(Ljava/lang/Object;)J_java.lang.NullPointerException_IMPLICIT
   * Goal 24. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 25. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J
   * Goal 26. org.apache.commons.math.stat.Frequency.getPct(J)D
   * Goal 27. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D
   * Goal 28. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 29. org.apache.commons.math.stat.Frequency.getPct(J)D
   * Goal 30. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D
   * Goal 31. Branch org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>(Ljava/util/Comparator;)V
   * Goal 32. Branch org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true in context: org.apache.commons.math.stat.Frequency:getCount(Ljava/lang/Object;)J
   * Goal 33. Branch org.apache.commons.math.stat.Frequency.getPct(J)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(J)D
   * Goal 34. Branch org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - false in context: org.apache.commons.math.stat.Frequency:getCumPct(Ljava/lang/Object;)D
   * Goal 35. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 36. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 37. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 40. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 42. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 43. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 44. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 45. Weak Mutation 74: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> -1
   * Goal 46. Weak Mutation 77: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 0.0
   * Goal 47. Weak Mutation 78: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 1.0
   * Goal 48. Weak Mutation 79: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> -1.0
   * Goal 49. Weak Mutation 80: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> NaN
   * Goal 50. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 51. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 53. Weak Mutation 125: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> -1
   * Goal 54. Weak Mutation 128: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> 0.0
   * Goal 55. Weak Mutation 129: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> 1.0
   * Goal 56. Weak Mutation 130: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> -1.0
   * Goal 57. Weak Mutation 131: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> NaN
   * Goal 58. Weak Mutation 89: org.apache.commons.math.stat.Frequency.getPct(J)D:311 - InsertUnaryOp Negation
   * Goal 59. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:positive
   * Goal 60. org.apache.commons.math.stat.Frequency.getPct(J)D:positive
   */

  

  //Test case number: 6
  /*
   * 147 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: Line 201
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 7. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 8. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 9. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 10. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 11. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 12. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 13. org.apache.commons.math.stat.Frequency.getCumPct(C)D: Line 470
   * Goal 14. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 15. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 16. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 17. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 18. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 19. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 20. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: Line 410
   * Goal 21. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 22. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 23. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 24. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 25. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 350
   * Goal 26. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 287
   * Goal 27. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 351
   * Goal 28. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 353
   * Goal 29. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 354
   * Goal 30. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 355
   * Goal 31. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 357
   * Goal 32. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 358
   * Goal 33. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 361
   * Goal 34. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 362
   * Goal 35. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 36. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 37. org.apache.commons.math.stat.Frequency.getPct(I)D: Line 300
   * Goal 38. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 431
   * Goal 39. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 496
   * Goal 40. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 183
   * Goal 41. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 184
   * Goal 42. org.apache.commons.math.stat.Frequency.<init>()V: Line 58
   * Goal 43. org.apache.commons.math.stat.Frequency.<init>()V: Line 59
   * Goal 44. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 45. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch
   * Goal 46. org.apache.commons.math.stat.Frequency.getPct(I)D: root-Branch
   * Goal 47. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 48. org.apache.commons.math.stat.Frequency.getCumPct(C)D: root-Branch
   * Goal 49. org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch
   * Goal 50. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch
   * Goal 51. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 52. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 53. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 54. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 55. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 56. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - true
   * Goal 57. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 58. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 59. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 60. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - false
   * Goal 61. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 62. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false
   * Goal 63. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - false
   * Goal 64. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false
   * Goal 65. Weak Mutation 132: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - InsertUnaryOp Negation
   * Goal 66. Weak Mutation 133: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> +
   * Goal 67. Weak Mutation 135: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> -
   * Goal 68. Weak Mutation 141: org.apache.commons.math.stat.Frequency.getCumPct(C)D:470 - InsertUnaryOp Negation
   * Goal 69. Weak Mutation 142: org.apache.commons.math.stat.Frequency.getCumPct(C)D:470 - InsertUnaryOp IINC 1
   * Goal 70. Weak Mutation 143: org.apache.commons.math.stat.Frequency.getCumPct(C)D:470 - InsertUnaryOp IINC -1
   * Goal 71. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 73. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 74. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 75. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 76. Weak Mutation 47: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp Negation
   * Goal 77. Weak Mutation 48: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC 1
   * Goal 78. Weak Mutation 49: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC -1
   * Goal 79. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 80. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 81. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 82. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 83. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 84. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 85. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 86. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 87. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 88. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 89. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 90. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 91. Weak Mutation 74: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> -1
   * Goal 92. Weak Mutation 77: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 0.0
   * Goal 93. Weak Mutation 78: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 1.0
   * Goal 94. Weak Mutation 79: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> -1.0
   * Goal 95. Weak Mutation 80: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> NaN
   * Goal 96. Weak Mutation 86: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp Negation
   * Goal 97. Weak Mutation 87: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp IINC 1
   * Goal 98. Weak Mutation 88: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp IINC -1
   * Goal 99. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 100. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 101. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 102. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 103. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 104. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 105. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 106. Weak Mutation 104: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:350 - ReplaceComparisonOperator = null -> != null
   * Goal 107. Weak Mutation 105: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:354 - InsertUnaryOp Negation
   * Goal 108. Weak Mutation 106: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> -1
   * Goal 109. Weak Mutation 108: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> >
   * Goal 110. Weak Mutation 109: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> 1
   * Goal 111. Weak Mutation 110: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> -1
   * Goal 112. Weak Mutation 113: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> <=
   * Goal 113. Weak Mutation 119: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp Negation
   * Goal 114. Weak Mutation 120: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC 1
   * Goal 115. Weak Mutation 121: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC -1
   * Goal 116. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 117. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 118. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 119. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   * Goal 120. org.apache.commons.math.stat.Frequency.getPct(I)D:positive
   * Goal 121. org.apache.commons.math.stat.Frequency.getCumFreq(C)J:positive
   * Goal 122. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 123. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 124. org.apache.commons.math.stat.Frequency.getPct(I)D
   * Goal 125. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;
   * Goal 126. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D
   * Goal 127. org.apache.commons.math.stat.Frequency.getCumPct(C)D
   * Goal 128. org.apache.commons.math.stat.Frequency.getCumFreq(C)J
   * Goal 129. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 130. org.apache.commons.math.stat.Frequency.getPct(I)D
   * Goal 131. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;
   * Goal 132. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 133. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D
   * Goal 134. org.apache.commons.math.stat.Frequency.getCumPct(C)D
   * Goal 135. org.apache.commons.math.stat.Frequency.getCumFreq(C)J
   * Goal 136. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 137. Branch org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch in context: 
   * Goal 138. Branch org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch in context: org.apache.commons.math.stat.Frequency:valuesIterator()Ljava/util/Iterator;
   * Goal 139. Branch org.apache.commons.math.stat.Frequency.getPct(I)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(I)D
   * Goal 140. Branch org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(C)V
   * Goal 141. Branch org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true in context: org.apache.commons.math.stat.Frequency:getCumPct(Ljava/lang/Object;)D
   * Goal 142. Branch org.apache.commons.math.stat.Frequency.getCumPct(C)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(C)D
   * Goal 143. Branch org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(C)J
   * Goal 144. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;:nonnull
   * Goal 145. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:zero
   * Goal 146. org.apache.commons.math.stat.Frequency.getCumPct(C)D:zero
   * Goal 147. org.apache.commons.math.stat.Frequency.getCumFreq(C)J:zero
   */

  

  //Test case number: 7
  /*
   * 209 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 142
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 8. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 9. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: Line 410
   * Goal 10. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 11. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 12. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 289
   * Goal 13. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: Line 165
   * Goal 14. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: Line 166
   * Goal 15. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 16. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 17. org.apache.commons.math.stat.Frequency.addValue(J)V: Line 174
   * Goal 18. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 431
   * Goal 19. org.apache.commons.math.stat.Frequency.addValue(J)V: Line 175
   * Goal 20. org.apache.commons.math.stat.Frequency.clear()V: Line 188
   * Goal 21. org.apache.commons.math.stat.Frequency.clear()V: Line 189
   * Goal 22. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 67
   * Goal 23. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 68
   * Goal 24. org.apache.commons.math.stat.Frequency.getCumPct(J)D: Line 457
   * Goal 25. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 78
   * Goal 26. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 79
   * Goal 27. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 80
   * Goal 28. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 29. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 81
   * Goal 30. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 337
   * Goal 31. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 82
   * Goal 32. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 83
   * Goal 33. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 34. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 84
   * Goal 35. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 36. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 85
   * Goal 37. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 38. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 86
   * Goal 39. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 40. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 41. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 87
   * Goal 42. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 43. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 44. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 88
   * Goal 45. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 46. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 89
   * Goal 47. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 48. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 90
   * Goal 49. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 50. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 91
   * Goal 51. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 92
   * Goal 52. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 93
   * Goal 53. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 54. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 350
   * Goal 55. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 351
   * Goal 56. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 355
   * Goal 57. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 58. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 357
   * Goal 59. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 358
   * Goal 60. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 61. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 62. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 361
   * Goal 63. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 234
   * Goal 64. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 362
   * Goal 65. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 235
   * Goal 66. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 239
   * Goal 67. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 496
   * Goal 68. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 240
   * Goal 69. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 70. org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch
   * Goal 71. org.apache.commons.math.stat.Frequency.clear()V: root-Branch
   * Goal 72. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch
   * Goal 73. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 74. org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch
   * Goal 75. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: root-Branch
   * Goal 76. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true
   * Goal 77. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 78. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - true
   * Goal 79. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 80. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 81. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true
   * Goal 82. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 83. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 84. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - true
   * Goal 85. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 86. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 87. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false
   * Goal 88. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 89. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 90. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 91. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - false
   * Goal 92. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 93. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false
   * Goal 94. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - false
   * Goal 95. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false
   * Goal 96. getPct(Ljava/lang/Object;)D_java.lang.NullPointerException_IMPLICIT
   * Goal 97. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 98. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 99. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D
   * Goal 100. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 101. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 102. org.apache.commons.math.stat.Frequency.getCumPct(J)D
   * Goal 103. org.apache.commons.math.stat.Frequency.getCumFreq(C)J
   * Goal 104. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V
   * Goal 105. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 106. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 107. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 108. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 109. org.apache.commons.math.stat.Frequency.getCumPct(J)D
   * Goal 110. org.apache.commons.math.stat.Frequency.getCumFreq(C)J
   * Goal 111. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V
   * Goal 112. Branch org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>(Ljava/util/Comparator;)V
   * Goal 113. Branch org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(J)V
   * Goal 114. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 115. Branch org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch in context: 
   * Goal 116. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 117. Branch org.apache.commons.math.stat.Frequency.clear()V: root-Branch in context: org.apache.commons.math.stat.Frequency:clear()V
   * Goal 118. Branch org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(J)D
   * Goal 119. Branch org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(C)J
   * Goal 120. Branch org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true in context: org.apache.commons.math.stat.Frequency:getPct(Ljava/lang/Object;)D
   * Goal 121. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Integer;)V
   * Goal 122. Weak Mutation 0: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:80 - ReplaceConstant - Value 	 Freq. 	 Pct. 	 Cum Pct. 
 -> 
   * Goal 123. Weak Mutation 1: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:82 - ReplaceComparisonOperator == -> !=
   * Goal 124. Weak Mutation 2: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 0
   * Goal 125. Weak Mutation 3: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 1
   * Goal 126. Weak Mutation 4: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> -1
   * Goal 127. Weak Mutation 5: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 8
   * Goal 128. Weak Mutation 6: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 10
   * Goal 129. Weak Mutation 7: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 0
   * Goal 130. Weak Mutation 8: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 1
   * Goal 131. Weak Mutation 9: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> -1
   * Goal 132. Weak Mutation 10: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 8
   * Goal 133. Weak Mutation 11: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 10
   * Goal 134. Weak Mutation 12: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 0
   * Goal 135. Weak Mutation 13: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 1
   * Goal 136. Weak Mutation 14: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> -1
   * Goal 137. Weak Mutation 15: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 8
   * Goal 138. Weak Mutation 16: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 10
   * Goal 139. Weak Mutation 17: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 0
   * Goal 140. Weak Mutation 18: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 1
   * Goal 141. Weak Mutation 19: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> -1
   * Goal 142. Weak Mutation 20: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 9
   * Goal 143. Weak Mutation 21: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 11
   * Goal 144. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 145. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 146. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 147. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 148. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 149. Weak Mutation 46: org.apache.commons.math.stat.Frequency.addValue(J)V:174 - InsertUnaryOp Negation
   * Goal 150. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 151. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 152. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 153. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 154. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 155. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 156. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 157. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 158. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 159. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 160. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 161. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 162. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 163. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 164. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 165. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 166. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 167. Weak Mutation 75: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> <
   * Goal 168. Weak Mutation 81: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - InsertUnaryOp Negation
   * Goal 169. Weak Mutation 82: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> +
   * Goal 170. Weak Mutation 83: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> %
   * Goal 171. Weak Mutation 84: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> -
   * Goal 172. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 173. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 174. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 175. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 176. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 177. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 178. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 179. Weak Mutation 104: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:350 - ReplaceComparisonOperator = null -> != null
   * Goal 180. Weak Mutation 108: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> >
   * Goal 181. Weak Mutation 113: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> <=
   * Goal 182. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 183. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 184. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 185. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   * Goal 186. Weak Mutation 132: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - InsertUnaryOp Negation
   * Goal 187. Weak Mutation 133: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> +
   * Goal 188. Weak Mutation 134: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> %
   * Goal 189. Weak Mutation 135: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> -
   * Goal 190. Weak Mutation 34: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceConstant - 1 -> 0
   * Goal 191. Weak Mutation 35: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceConstant - 1 -> -1
   * Goal 192. Weak Mutation 36: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceConstant - 1 -> 2
   * Goal 193. Weak Mutation 37: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceArithmeticOperator + -> %
   * Goal 194. Weak Mutation 38: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceArithmeticOperator + -> -
   * Goal 195. Weak Mutation 39: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceArithmeticOperator + -> *
   * Goal 196. Weak Mutation 40: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceArithmeticOperator + -> /
   * Goal 197. Weak Mutation 106: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> -1
   * Goal 198. Weak Mutation 109: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> 1
   * Goal 199. Weak Mutation 110: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> -1
   * Goal 200. Weak Mutation 140: org.apache.commons.math.stat.Frequency.getCumPct(J)D:457 - InsertUnaryOp Negation
   * Goal 201. Weak Mutation 95: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> -1
   * Goal 202. Weak Mutation 98: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:337 - ReplaceConstant - 0 -> 1
   * Goal 203. Weak Mutation 99: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:337 - ReplaceConstant - 0 -> -1
   * Goal 204. Weak Mutation 119: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp Negation
   * Goal 205. Weak Mutation 120: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC 1
   * Goal 206. Weak Mutation 121: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC -1
   * Goal 207. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:nonnull
   * Goal 208. org.apache.commons.math.stat.Frequency.getCumPct(J)D:zero
   * Goal 209. org.apache.commons.math.stat.Frequency.getCumFreq(C)J:zero
   */

  

  //Test case number: 8
  /*
   * 90 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 144
   * Goal 7. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 8. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 337
   * Goal 9. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 146
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 11. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 12. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 13. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 14. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 15. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 16. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: Line 410
   * Goal 17. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 18. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 19. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 287
   * Goal 20. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: Line 165
   * Goal 21. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 183
   * Goal 22. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 184
   * Goal 23. org.apache.commons.math.stat.Frequency.<init>()V: Line 58
   * Goal 24. org.apache.commons.math.stat.Frequency.<init>()V: Line 59
   * Goal 25. org.apache.commons.math.stat.Frequency.clear()V: Line 188
   * Goal 26. org.apache.commons.math.stat.Frequency.clear()V: Line 189
   * Goal 27. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch
   * Goal 28. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 29. org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch
   * Goal 30. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: root-Branch
   * Goal 31. org.apache.commons.math.stat.Frequency.clear()V: root-Branch
   * Goal 32. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 33. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 34. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 35. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - false
   * Goal 36. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - false
   * Goal 37. addValue(Ljava/lang/Integer;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 38. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 39. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 40. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D
   * Goal 41. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 42. org.apache.commons.math.stat.Frequency.getSumFreq()J
   * Goal 43. org.apache.commons.math.stat.Frequency.getCumFreq(C)J
   * Goal 44. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V
   * Goal 45. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 46. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D
   * Goal 47. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 48. org.apache.commons.math.stat.Frequency.getSumFreq()J
   * Goal 49. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 50. org.apache.commons.math.stat.Frequency.getCumFreq(C)J
   * Goal 51. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 52. Branch org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - false in context: org.apache.commons.math.stat.Frequency:getPct(Ljava/lang/Object;)D
   * Goal 53. Branch org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(C)V
   * Goal 54. Branch org.apache.commons.math.stat.Frequency.clear()V: root-Branch in context: org.apache.commons.math.stat.Frequency:clear()V
   * Goal 55. Branch org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true in context: org.apache.commons.math.stat.Frequency:getSumFreq()J
   * Goal 56. Branch org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(C)J
   * Goal 57. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Integer;)V
   * Goal 58. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 59. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 60. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 61. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 62. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 63. Weak Mutation 41: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceConstant - Value not comparable to existing values. -> 
   * Goal 64. Weak Mutation 42: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceComparisonOperator == -> !=
   * Goal 65. Weak Mutation 47: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp Negation
   * Goal 66. Weak Mutation 48: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC 1
   * Goal 67. Weak Mutation 49: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC -1
   * Goal 68. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 69. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 70. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 71. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 72. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 73. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 75. Weak Mutation 74: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> -1
   * Goal 76. Weak Mutation 77: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 0.0
   * Goal 77. Weak Mutation 78: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 1.0
   * Goal 78. Weak Mutation 79: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> -1.0
   * Goal 79. Weak Mutation 80: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> NaN
   * Goal 80. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 81. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 82. Weak Mutation 95: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> -1
   * Goal 83. Weak Mutation 98: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:337 - ReplaceConstant - 0 -> 1
   * Goal 84. Weak Mutation 99: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:337 - ReplaceConstant - 0 -> -1
   * Goal 85. Weak Mutation 119: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp Negation
   * Goal 86. Weak Mutation 120: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC 1
   * Goal 87. Weak Mutation 121: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC -1
   * Goal 88. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:positive
   * Goal 89. org.apache.commons.math.stat.Frequency.getSumFreq()J:zero
   * Goal 90. org.apache.commons.math.stat.Frequency.getCumFreq(C)J:zero
   */

  

  //Test case number: 9
  /*
   * 52 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(J)V: Line 174
   * Goal 7. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 78
   * Goal 8. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 79
   * Goal 9. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 80
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 144
   * Goal 11. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 81
   * Goal 12. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 82
   * Goal 13. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 146
   * Goal 14. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 15. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 16. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 183
   * Goal 17. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 184
   * Goal 18. org.apache.commons.math.stat.Frequency.<init>()V: Line 58
   * Goal 19. org.apache.commons.math.stat.Frequency.<init>()V: Line 59
   * Goal 20. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 93
   * Goal 21. org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch
   * Goal 22. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 23. org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch
   * Goal 24. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true
   * Goal 25. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 26. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 27. addValue(J)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 28. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 29. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 30. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 31. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 32. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 33. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 34. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 35. Branch org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(J)V
   * Goal 36. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 37. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 38. Branch org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(C)V
   * Goal 39. Weak Mutation 0: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:80 - ReplaceConstant - Value 	 Freq. 	 Pct. 	 Cum Pct. 
 -> 
   * Goal 40. Weak Mutation 1: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:82 - ReplaceComparisonOperator == -> !=
   * Goal 41. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 42. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 43. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 44. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 45. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 46. Weak Mutation 41: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceConstant - Value not comparable to existing values. -> 
   * Goal 47. Weak Mutation 42: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceComparisonOperator == -> !=
   * Goal 48. Weak Mutation 46: org.apache.commons.math.stat.Frequency.addValue(J)V:174 - InsertUnaryOp Negation
   * Goal 49. Weak Mutation 47: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp Negation
   * Goal 50. Weak Mutation 48: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC 1
   * Goal 51. Weak Mutation 49: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC -1
   * Goal 52. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:nonnull
   */

  

  //Test case number: 10
  /*
   * 65 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 6. org.apache.commons.math.stat.Frequency.getCumFreq(J)J: Line 398
   * Goal 7. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 8. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 9. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 10. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 11. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 12. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 340
   * Goal 13. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 14. org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch
   * Goal 15. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 16. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 17. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 18. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 19. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 20. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 21. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 22. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 23. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - true
   * Goal 24. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 25. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false
   * Goal 26. org.apache.commons.math.stat.Frequency.getCumFreq(J)J: root-Branch
   * Goal 27. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 28. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 29. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J
   * Goal 30. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 31. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 32. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J
   * Goal 33. Branch org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(J)V
   * Goal 34. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 35. Branch org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch in context: 
   * Goal 36. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 37. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 39. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 40. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 41. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 42. Weak Mutation 46: org.apache.commons.math.stat.Frequency.addValue(J)V:174 - InsertUnaryOp Negation
   * Goal 43. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 44. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 45. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 46. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 47. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 48. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 49. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 50. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 51. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 52. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 53. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 54. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 55. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 57. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 58. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 59. Weak Mutation 104: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:350 - ReplaceComparisonOperator = null -> != null
   * Goal 60. Weak Mutation 107: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> ==
   * Goal 61. Weak Mutation 112: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> !=
   * Goal 62. Weak Mutation 118: org.apache.commons.math.stat.Frequency.getCumFreq(J)J:398 - InsertUnaryOp Negation
   * Goal 63. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - false
   * Goal 64. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:positive
   * Goal 65. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - false in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   */

  

  //Test case number: 11
  /*
   * 75 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 67
   * Goal 2. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 68
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 8. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 9. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 10. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 11. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 12. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 13. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 14. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 15. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 16. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 17. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 18. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 19. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 20. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 21. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 22. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 110
   * Goal 23. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 115
   * Goal 24. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 116
   * Goal 25. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 120
   * Goal 26. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 27. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - true
   * Goal 28. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 29. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 30. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 31. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 32. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - false
   * Goal 33. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 34. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 35. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 36. Weak Mutation 22: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:110 - ReplaceComparisonOperator != -> ==
   * Goal 37. Weak Mutation 26: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:115 - ReplaceComparisonOperator == -> !=
   * Goal 38. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 39. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 41. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 42. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 43. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 44. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 45. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 46. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 48. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 50. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 52. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 54. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 55. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 56. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 57. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 58. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 59. org.apache.commons.math.stat.Frequency.getSumFreq()J:positive
   * Goal 60. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - true in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 61. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - false in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 62. Branch org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true in context: org.apache.commons.math.stat.Frequency:getSumFreq()J
   * Goal 63. Branch org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false in context: org.apache.commons.math.stat.Frequency:getSumFreq()J
   * Goal 64. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 65. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 66. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 67. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J
   * Goal 68. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V
   * Goal 69. org.apache.commons.math.stat.Frequency.getSumFreq()J
   * Goal 70. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 71. org.apache.commons.math.stat.Frequency.getSumFreq()J
   * Goal 72. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V
   * Goal 73. Branch org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>(Ljava/util/Comparator;)V
   * Goal 74. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 75. getCumFreq(Ljava/lang/Object;)J_java.lang.NullPointerException_IMPLICIT
   */

  

  //Test case number: 12
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 2. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 3. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 4. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - false
   * Goal 5. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 6. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J
   * Goal 7. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 8. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J
   * Goal 9. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 10. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - false in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 11. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 12. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 13. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 14. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 15. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 17. Weak Mutation 95: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> -1
   * Goal 18. Weak Mutation 98: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:337 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 99: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:337 - ReplaceConstant - 0 -> -1
   * Goal 20. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:zero
   */

  

  //Test case number: 13
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 2. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 3. org.apache.commons.math.stat.Frequency.getCumPct(C)D: Line 470
   * Goal 4. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 5. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - false
   * Goal 6. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 7. org.apache.commons.math.stat.Frequency.getCumPct(C)D: root-Branch
   * Goal 8. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 9. org.apache.commons.math.stat.Frequency.getCumPct(C)D
   * Goal 10. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 11. org.apache.commons.math.stat.Frequency.getCumPct(C)D
   * Goal 12. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 13. Branch org.apache.commons.math.stat.Frequency.getCumPct(C)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(C)D
   * Goal 14. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 15. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 16. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 19. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 21. Weak Mutation 125: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> -1
   * Goal 22. Weak Mutation 128: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> 0.0
   * Goal 23. Weak Mutation 129: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> 1.0
   * Goal 24. Weak Mutation 130: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> -1.0
   * Goal 25. Weak Mutation 131: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> NaN
   * Goal 26. Weak Mutation 141: org.apache.commons.math.stat.Frequency.getCumPct(C)D:470 - InsertUnaryOp Negation
   * Goal 27. Weak Mutation 142: org.apache.commons.math.stat.Frequency.getCumPct(C)D:470 - InsertUnaryOp IINC 1
   * Goal 28. Weak Mutation 143: org.apache.commons.math.stat.Frequency.getCumPct(C)D:470 - InsertUnaryOp IINC -1
   * Goal 29. org.apache.commons.math.stat.Frequency.getCumPct(C)D:positive
   */

  

  //Test case number: 14
  /*
   * 113 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 6. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 8. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 9. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 11. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 12. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 13. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 14. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 15. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 16. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 17. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 18. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 19. org.apache.commons.math.stat.Frequency.addValue(I)V: Line 156
   * Goal 20. org.apache.commons.math.stat.Frequency.addValue(I)V: Line 157
   * Goal 21. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 22. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 353
   * Goal 23. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 354
   * Goal 24. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 25. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 26. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 429
   * Goal 27. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 110
   * Goal 28. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 431
   * Goal 29. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 112
   * Goal 30. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 115
   * Goal 31. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 118
   * Goal 32. org.apache.commons.math.stat.Frequency.<init>()V: Line 58
   * Goal 33. org.apache.commons.math.stat.Frequency.<init>()V: Line 59
   * Goal 34. org.apache.commons.math.stat.Frequency.getCumPct(I)D: Line 444
   * Goal 35. org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch
   * Goal 36. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 37. org.apache.commons.math.stat.Frequency.getCumPct(I)D: root-Branch
   * Goal 38. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 39. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - true
   * Goal 40. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 41. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 42. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 43. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 44. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - false
   * Goal 45. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - false
   * Goal 46. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 47. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 48. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 49. Weak Mutation 128: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> 0.0
   * Goal 50. Weak Mutation 129: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> 1.0
   * Goal 51. Weak Mutation 130: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> -1.0
   * Goal 52. Weak Mutation 131: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> NaN
   * Goal 53. Weak Mutation 132: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - InsertUnaryOp Negation
   * Goal 54. Weak Mutation 133: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> +
   * Goal 55. Weak Mutation 135: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> -
   * Goal 56. Weak Mutation 137: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp Negation
   * Goal 57. Weak Mutation 138: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp IINC 1
   * Goal 58. Weak Mutation 139: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp IINC -1
   * Goal 59. Weak Mutation 22: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:110 - ReplaceComparisonOperator != -> ==
   * Goal 60. Weak Mutation 23: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> 0
   * Goal 61. Weak Mutation 24: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> 1
   * Goal 62. Weak Mutation 25: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> -2
   * Goal 63. Weak Mutation 26: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:115 - ReplaceComparisonOperator == -> !=
   * Goal 64. Weak Mutation 27: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:118 - ReplaceConstant - Object must implement Comparable -> 
   * Goal 65. Weak Mutation 28: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:118 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 67. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 68. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 69. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 70. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 71. Weak Mutation 43: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp Negation
   * Goal 72. Weak Mutation 44: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC 1
   * Goal 73. Weak Mutation 45: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC -1
   * Goal 74. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 76. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 77. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 78. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 79. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 80. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 81. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 82. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 83. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 84. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 85. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 86. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 87. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 88. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 89. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 90. Weak Mutation 105: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:354 - InsertUnaryOp Negation
   * Goal 91. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 92. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 93. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 94. Weak Mutation 125: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> -1
   * Goal 95. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   * Goal 96. org.apache.commons.math.stat.Frequency.getCumPct(I)D:positive
   * Goal 97. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:zero
   * Goal 98. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 99. org.apache.commons.math.stat.Frequency.getCumPct(I)D
   * Goal 100. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V
   * Goal 101. org.apache.commons.math.stat.Frequency.addValue(I)V
   * Goal 102. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D
   * Goal 103. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 104. org.apache.commons.math.stat.Frequency.getCumPct(I)D
   * Goal 105. org.apache.commons.math.stat.Frequency.addValue(I)V
   * Goal 106. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D
   * Goal 107. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 108. Branch org.apache.commons.math.stat.Frequency.getCumPct(I)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(I)D
   * Goal 109. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - false in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 110. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - true in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 111. Branch org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(I)V
   * Goal 112. Branch org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true in context: org.apache.commons.math.stat.Frequency:getCumPct(Ljava/lang/Object;)D
   * Goal 113. addValue(Ljava/lang/Object;)V_java.lang.IllegalArgumentException_EXPLICIT
   */

  public void test14()  throws Throwable  {
      Frequency.clearORefMap();
	Frequency frequency0 = new Frequency();
      double double0 = frequency0.getCumPct(2531);
      frequency0.addValue(2531);
      double double1 = frequency0.getCumPct((Object) frequency0);
      // Undeclared exception!
      try { 
        frequency0.addValue((Object) null);
      } catch(IllegalArgumentException e) {
         //
         // Object must implement Comparable
         //
         assertThrownBy("org.apache.commons.math.stat.Frequency", e);
      }
  }

  //Test case number: 15
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 4. org.apache.commons.math.stat.Frequency.<init>()V: Line 58
   * Goal 5. org.apache.commons.math.stat.Frequency.<init>()V: Line 59
   * Goal 6. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 8. addValue(Ljava/lang/Comparable;)V_java.lang.NullPointerException_IMPLICIT
   * Goal 9. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 10. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 11. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 12. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 13. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V
   * Goal 14. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Comparable;)V
   */

  

  //Test case number: 16
  /*
   * 41 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 67
   * Goal 2. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 68
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 8. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 144
   * Goal 9. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 146
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 11. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 12. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 183
   * Goal 13. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 184
   * Goal 14. org.apache.commons.math.stat.Frequency.addValue(I)V: Line 156
   * Goal 15. org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch
   * Goal 16. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 17. org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch
   * Goal 18. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 19. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 20. addValue(I)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 21. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 22. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 23. org.apache.commons.math.stat.Frequency.addValue(I)V
   * Goal 24. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 25. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 26. Branch org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>(Ljava/util/Comparator;)V
   * Goal 27. Branch org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(C)V
   * Goal 28. Branch org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(I)V
   * Goal 29. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 30. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 31. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 32. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 33. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 34. Weak Mutation 41: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceConstant - Value not comparable to existing values. -> 
   * Goal 35. Weak Mutation 42: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceComparisonOperator == -> !=
   * Goal 36. Weak Mutation 47: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp Negation
   * Goal 37. Weak Mutation 48: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC 1
   * Goal 38. Weak Mutation 49: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC -1
   * Goal 39. Weak Mutation 43: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp Negation
   * Goal 40. Weak Mutation 44: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC 1
   * Goal 41. Weak Mutation 45: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC -1
   */

  

  //Test case number: 17
  /*
   * 41 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 67
   * Goal 2. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 68
   * Goal 3. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 4. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 5. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 6. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 234
   * Goal 7. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 239
   * Goal 8. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 240
   * Goal 9. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 10. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 11. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 12. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 13. org.apache.commons.math.stat.Frequency.getCount(I)J: Line 250
   * Goal 14. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 15. org.apache.commons.math.stat.Frequency.getCount(I)J: root-Branch
   * Goal 16. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 17. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 18. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - true
   * Goal 19. Weak Mutation 64: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp Negation
   * Goal 20. Weak Mutation 65: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp IINC 1
   * Goal 21. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 66: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp IINC -1
   * Goal 23. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 24. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 26. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 29. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 30. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 31. org.apache.commons.math.stat.Frequency.getSumFreq()J:zero
   * Goal 32. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 33. org.apache.commons.math.stat.Frequency.getSumFreq()J
   * Goal 34. org.apache.commons.math.stat.Frequency.getCount(I)J
   * Goal 35. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 36. org.apache.commons.math.stat.Frequency.getSumFreq()J
   * Goal 37. org.apache.commons.math.stat.Frequency.getCount(I)J
   * Goal 38. Branch org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>(Ljava/util/Comparator;)V
   * Goal 39. Branch org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true in context: org.apache.commons.math.stat.Frequency:getSumFreq()J
   * Goal 40. Branch org.apache.commons.math.stat.Frequency.getCount(I)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCount(I)J
   * Goal 41. org.apache.commons.math.stat.Frequency.getCount(I)J:zero
   */

  

  //Test case number: 18
  /*
   * 116 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 8. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 9. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 10. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 289
   * Goal 11. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: Line 165
   * Goal 12. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 13. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 14. org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch
   * Goal 15. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true
   * Goal 16. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 17. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 18. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 19. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true
   * Goal 20. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false
   * Goal 21. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 22. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 23. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 24. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 25. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 26. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 27. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 28. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false
   * Goal 29. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 30. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false
   * Goal 31. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: root-Branch
   * Goal 32. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 33. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 34. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 35. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V
   * Goal 36. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 37. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 38. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 39. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 40. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 41. Branch org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch in context: 
   * Goal 42. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 43. Branch org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(C)V
   * Goal 44. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Integer;)V
   * Goal 45. Weak Mutation 0: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:80 - ReplaceConstant - Value 	 Freq. 	 Pct. 	 Cum Pct. 
 -> 
   * Goal 46. Weak Mutation 1: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:82 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 2: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 0
   * Goal 48. Weak Mutation 3: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 1
   * Goal 49. Weak Mutation 4: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> -1
   * Goal 50. Weak Mutation 5: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 8
   * Goal 51. Weak Mutation 6: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 10
   * Goal 52. Weak Mutation 7: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 0
   * Goal 53. Weak Mutation 8: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 1
   * Goal 54. Weak Mutation 9: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> -1
   * Goal 55. Weak Mutation 10: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 8
   * Goal 56. Weak Mutation 11: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 10
   * Goal 57. Weak Mutation 12: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 0
   * Goal 58. Weak Mutation 13: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 1
   * Goal 59. Weak Mutation 14: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> -1
   * Goal 60. Weak Mutation 15: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 8
   * Goal 61. Weak Mutation 16: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 10
   * Goal 62. Weak Mutation 17: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 0
   * Goal 63. Weak Mutation 18: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 1
   * Goal 64. Weak Mutation 19: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> -1
   * Goal 65. Weak Mutation 20: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 9
   * Goal 66. Weak Mutation 21: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 11
   * Goal 67. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 68. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 69. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 70. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 71. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 72. Weak Mutation 47: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp Negation
   * Goal 73. Weak Mutation 48: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC 1
   * Goal 74. Weak Mutation 49: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC -1
   * Goal 75. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 76. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 77. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 78. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 79. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 80. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 81. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 82. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 83. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 84. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 85. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 86. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 87. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 88. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 89. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 90. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 91. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 92. Weak Mutation 75: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> <
   * Goal 93. Weak Mutation 81: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - InsertUnaryOp Negation
   * Goal 94. Weak Mutation 82: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> +
   * Goal 95. Weak Mutation 83: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> %
   * Goal 96. Weak Mutation 84: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> -
   * Goal 97. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 98. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 99. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 100. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 101. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 102. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 103. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 104. Weak Mutation 104: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:350 - ReplaceComparisonOperator = null -> != null
   * Goal 105. Weak Mutation 108: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> >
   * Goal 106. Weak Mutation 113: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> <=
   * Goal 107. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 108. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 109. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 110. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   * Goal 111. Weak Mutation 132: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - InsertUnaryOp Negation
   * Goal 112. Weak Mutation 133: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> +
   * Goal 113. Weak Mutation 134: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> %
   * Goal 114. Weak Mutation 135: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> -
   * Goal 115. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:nonnull
   * Goal 116. addValue(Ljava/lang/Integer;)V_java.lang.NullPointerException_IMPLICIT
   */

  

  //Test case number: 19
  /*
   * 180 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.getCumFreq(I)J: Line 386
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 135
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 8. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 144
   * Goal 9. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 146
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 11. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 12. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 13. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 14. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 289
   * Goal 15. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 16. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 17. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 431
   * Goal 18. org.apache.commons.math.stat.Frequency.<init>()V: Line 58
   * Goal 19. org.apache.commons.math.stat.Frequency.<init>()V: Line 59
   * Goal 20. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 78
   * Goal 21. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 79
   * Goal 22. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 80
   * Goal 23. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 24. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 81
   * Goal 25. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 82
   * Goal 26. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 83
   * Goal 27. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 28. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 84
   * Goal 29. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 30. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 85
   * Goal 31. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 32. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 86
   * Goal 33. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 34. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 35. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 87
   * Goal 36. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 37. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 38. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 88
   * Goal 39. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 40. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 89
   * Goal 41. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 42. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 90
   * Goal 43. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 44. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 91
   * Goal 45. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 92
   * Goal 46. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 93
   * Goal 47. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 48. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 350
   * Goal 49. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 351
   * Goal 50. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 355
   * Goal 51. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 52. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 357
   * Goal 53. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 54. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 55. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 361
   * Goal 56. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 234
   * Goal 57. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 362
   * Goal 58. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 235
   * Goal 59. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 237
   * Goal 60. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 239
   * Goal 61. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 496
   * Goal 62. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 240
   * Goal 63. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 64. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 65. org.apache.commons.math.stat.Frequency.getCumFreq(I)J: root-Branch
   * Goal 66. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true
   * Goal 67. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 68. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 69. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 70. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true
   * Goal 71. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 72. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 73. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - true
   * Goal 74. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 75. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 76. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false
   * Goal 77. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - false
   * Goal 78. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 79. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 80. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 81. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 82. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false
   * Goal 83. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false
   * Goal 84. addValue(Ljava/lang/Comparable;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 85. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 86. org.apache.commons.math.stat.Frequency.getCumFreq(I)J
   * Goal 87. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J
   * Goal 88. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 89. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V
   * Goal 90. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 91. org.apache.commons.math.stat.Frequency.getCumFreq(I)J
   * Goal 92. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J
   * Goal 93. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 94. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V
   * Goal 95. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 96. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 97. Branch org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch in context: 
   * Goal 98. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 99. Branch org.apache.commons.math.stat.Frequency.getCumFreq(I)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(I)J
   * Goal 100. Branch org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true in context: org.apache.commons.math.stat.Frequency:getCount(Ljava/lang/Object;)J
   * Goal 101. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Comparable;)V
   * Goal 102. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Comparable;)V
   * Goal 103. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - false in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Comparable;)V
   * Goal 104. Weak Mutation 0: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:80 - ReplaceConstant - Value 	 Freq. 	 Pct. 	 Cum Pct. 
 -> 
   * Goal 105. Weak Mutation 1: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:82 - ReplaceComparisonOperator == -> !=
   * Goal 106. Weak Mutation 2: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 0
   * Goal 107. Weak Mutation 3: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 1
   * Goal 108. Weak Mutation 4: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> -1
   * Goal 109. Weak Mutation 5: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 8
   * Goal 110. Weak Mutation 6: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 10
   * Goal 111. Weak Mutation 7: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 0
   * Goal 112. Weak Mutation 8: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 1
   * Goal 113. Weak Mutation 9: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> -1
   * Goal 114. Weak Mutation 10: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 8
   * Goal 115. Weak Mutation 11: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 10
   * Goal 116. Weak Mutation 12: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 0
   * Goal 117. Weak Mutation 13: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 1
   * Goal 118. Weak Mutation 14: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> -1
   * Goal 119. Weak Mutation 15: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 8
   * Goal 120. Weak Mutation 16: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 10
   * Goal 121. Weak Mutation 17: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 0
   * Goal 122. Weak Mutation 18: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 1
   * Goal 123. Weak Mutation 19: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> -1
   * Goal 124. Weak Mutation 20: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 9
   * Goal 125. Weak Mutation 21: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 11
   * Goal 126. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 127. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 128. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 129. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 130. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 131. Weak Mutation 41: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceConstant - Value not comparable to existing values. -> 
   * Goal 132. Weak Mutation 42: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceComparisonOperator == -> !=
   * Goal 133. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 134. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 135. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 136. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 137. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 138. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 139. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 140. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 141. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 142. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 143. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 144. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 145. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 146. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 147. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 148. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 149. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 150. Weak Mutation 75: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> <
   * Goal 151. Weak Mutation 81: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - InsertUnaryOp Negation
   * Goal 152. Weak Mutation 82: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> +
   * Goal 153. Weak Mutation 83: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> %
   * Goal 154. Weak Mutation 84: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> -
   * Goal 155. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 156. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 157. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 158. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 159. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 160. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 161. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 162. Weak Mutation 104: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:350 - ReplaceComparisonOperator = null -> != null
   * Goal 163. Weak Mutation 107: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> ==
   * Goal 164. Weak Mutation 108: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> >
   * Goal 165. Weak Mutation 112: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> !=
   * Goal 166. Weak Mutation 113: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> <=
   * Goal 167. Weak Mutation 115: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp Negation
   * Goal 168. Weak Mutation 116: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp IINC 1
   * Goal 169. Weak Mutation 117: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp IINC -1
   * Goal 170. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 171. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 172. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 173. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   * Goal 174. Weak Mutation 132: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - InsertUnaryOp Negation
   * Goal 175. Weak Mutation 133: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> +
   * Goal 176. Weak Mutation 134: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> %
   * Goal 177. Weak Mutation 135: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> -
   * Goal 178. org.apache.commons.math.stat.Frequency.getCumFreq(I)J:positive
   * Goal 179. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:zero
   * Goal 180. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:nonnull
   */

  

  //Test case number: 20
  /*
   * 129 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.getCumFreq(I)J: Line 386
   * Goal 2. org.apache.commons.math.stat.Frequency.getPct(C)D: Line 322
   * Goal 3. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 67
   * Goal 4. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 68
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 7. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: Line 201
   * Goal 8. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 9. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 11. org.apache.commons.math.stat.Frequency.getCumFreq(J)J: Line 398
   * Goal 12. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 13. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 14. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 15. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 16. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 17. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 18. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 19. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 20. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 21. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 22. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 23. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 24. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 25. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 26. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 27. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 28. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 350
   * Goal 29. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 289
   * Goal 30. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 355
   * Goal 31. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 32. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: Line 165
   * Goal 33. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 357
   * Goal 34. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: Line 166
   * Goal 35. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 358
   * Goal 36. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 37. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 38. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 237
   * Goal 39. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 110
   * Goal 40. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 496
   * Goal 41. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 240
   * Goal 42. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 112
   * Goal 43. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 115
   * Goal 44. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 118
   * Goal 45. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 46. org.apache.commons.math.stat.Frequency.getCumFreq(I)J: root-Branch
   * Goal 47. org.apache.commons.math.stat.Frequency.getCumFreq(J)J: root-Branch
   * Goal 48. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 49. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch
   * Goal 50. org.apache.commons.math.stat.Frequency.getPct(C)D: root-Branch
   * Goal 51. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: root-Branch
   * Goal 52. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - true
   * Goal 53. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 54. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 55. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 56. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true
   * Goal 57. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 58. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 59. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - true
   * Goal 60. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - false
   * Goal 61. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 62. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 63. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 64. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - false
   * Goal 65. Weak Mutation 22: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:110 - ReplaceComparisonOperator != -> ==
   * Goal 66. Weak Mutation 23: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> 0
   * Goal 67. Weak Mutation 24: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> 1
   * Goal 68. Weak Mutation 25: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> -2
   * Goal 69. Weak Mutation 26: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:115 - ReplaceComparisonOperator == -> !=
   * Goal 70. Weak Mutation 27: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:118 - ReplaceConstant - Object must implement Comparable -> 
   * Goal 71. Weak Mutation 28: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:118 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 73. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 74. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 75. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 76. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 77. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 78. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 79. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 80. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 81. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 82. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 83. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 84. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 85. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 86. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 87. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 88. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 89. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 90. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 91. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 92. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 93. Weak Mutation 75: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> <
   * Goal 94. Weak Mutation 81: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - InsertUnaryOp Negation
   * Goal 95. Weak Mutation 82: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> +
   * Goal 96. Weak Mutation 84: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> -
   * Goal 97. Weak Mutation 90: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp Negation
   * Goal 98. Weak Mutation 91: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp IINC 1
   * Goal 99. Weak Mutation 92: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp IINC -1
   * Goal 100. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 101. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 102. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 103. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 104. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 105. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 106. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 107. Weak Mutation 104: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:350 - ReplaceComparisonOperator = null -> != null
   * Goal 108. Weak Mutation 106: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> -1
   * Goal 109. Weak Mutation 109: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> 1
   * Goal 110. Weak Mutation 110: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> -1
   * Goal 111. Weak Mutation 115: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp Negation
   * Goal 112. Weak Mutation 116: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp IINC 1
   * Goal 113. Weak Mutation 117: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp IINC -1
   * Goal 114. Weak Mutation 118: org.apache.commons.math.stat.Frequency.getCumFreq(J)J:398 - InsertUnaryOp Negation
   * Goal 115. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;:nonnull
   * Goal 116. org.apache.commons.math.stat.Frequency.getCumFreq(J)J:zero
   * Goal 117. org.apache.commons.math.stat.Frequency.getCumFreq(I)J:zero
   * Goal 118. org.apache.commons.math.stat.Frequency.getPct(C)D:zero
   * Goal 119. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:zero
   * Goal 120. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - false in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 121. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - true in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 122. Branch org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true in context: org.apache.commons.math.stat.Frequency:getCount(Ljava/lang/Object;)J
   * Goal 123. Branch org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>(Ljava/util/Comparator;)V
   * Goal 124. Branch org.apache.commons.math.stat.Frequency.getCumFreq(I)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(I)J
   * Goal 125. Branch org.apache.commons.math.stat.Frequency.getCumFreq(J)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(J)J
   * Goal 126. Branch org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch in context: 
   * Goal 127. Branch org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch in context: org.apache.commons.math.stat.Frequency:valuesIterator()Ljava/util/Iterator;
   * Goal 128. Branch org.apache.commons.math.stat.Frequency.getPct(C)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(C)D
   * Goal 129. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Integer;)V
   */

  public void test20()  throws Throwable  {
      Frequency.clearORefMap();
	Frequency frequency0 = new Frequency((Comparator) null);
      Integer integer0 = new Integer(1255);
      frequency0.addValue(integer0);
      Iterator iterator0 = frequency0.valuesIterator();
      long long0 = frequency0.getCount((Object) iterator0);
      long long1 = frequency0.getCumFreq((-251L));
      char char0 = 'c';
      double double0 = frequency0.getPct('c');
      long long2 = frequency0.getCumFreq((-1));
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        frequency0.addValue(object0);
      } catch(IllegalArgumentException e) {
         //
         // Object must implement Comparable
         //
         assertThrownBy("org.apache.commons.math.stat.Frequency", e);
      }
  }

  //Test case number: 21
  /*
   * 78 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: Line 201
   * Goal 4. org.apache.commons.math.stat.Frequency.getCumPct(J)D: Line 457
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 6. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 8. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 9. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 10. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 429
   * Goal 11. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 12. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 13. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 14. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 15. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 16. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 17. org.apache.commons.math.stat.Frequency.<init>()V: Line 58
   * Goal 18. org.apache.commons.math.stat.Frequency.<init>()V: Line 59
   * Goal 19. org.apache.commons.math.stat.Frequency.addValue(I)V: Line 156
   * Goal 20. org.apache.commons.math.stat.Frequency.clear()V: Line 188
   * Goal 21. org.apache.commons.math.stat.Frequency.getCumPct(I)D: Line 444
   * Goal 22. org.apache.commons.math.stat.Frequency.addValue(I)V: Line 157
   * Goal 23. org.apache.commons.math.stat.Frequency.clear()V: Line 189
   * Goal 24. org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch
   * Goal 25. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 26. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch
   * Goal 27. org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch
   * Goal 28. org.apache.commons.math.stat.Frequency.getCumPct(I)D: root-Branch
   * Goal 29. org.apache.commons.math.stat.Frequency.clear()V: root-Branch
   * Goal 30. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 31. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 32. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - false
   * Goal 33. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 34. Weak Mutation 128: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> 0.0
   * Goal 35. Weak Mutation 129: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> 1.0
   * Goal 36. Weak Mutation 130: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> -1.0
   * Goal 37. Weak Mutation 131: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> NaN
   * Goal 38. Weak Mutation 137: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp Negation
   * Goal 39. Weak Mutation 138: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp IINC 1
   * Goal 40. Weak Mutation 139: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp IINC -1
   * Goal 41. Weak Mutation 140: org.apache.commons.math.stat.Frequency.getCumPct(J)D:457 - InsertUnaryOp Negation
   * Goal 42. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 43. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 44. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 45. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 46. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 47. Weak Mutation 43: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp Negation
   * Goal 48. Weak Mutation 44: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC 1
   * Goal 49. Weak Mutation 45: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC -1
   * Goal 50. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 52. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 53. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 54. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 55. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 56. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 57. Weak Mutation 125: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> -1
   * Goal 58. org.apache.commons.math.stat.Frequency.getCumPct(J)D:positive
   * Goal 59. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;:nonnull
   * Goal 60. org.apache.commons.math.stat.Frequency.getCumPct(I)D:positive
   * Goal 61. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 62. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 63. org.apache.commons.math.stat.Frequency.getCumPct(I)D
   * Goal 64. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;
   * Goal 65. org.apache.commons.math.stat.Frequency.getCumPct(J)D
   * Goal 66. org.apache.commons.math.stat.Frequency.addValue(I)V
   * Goal 67. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 68. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 69. org.apache.commons.math.stat.Frequency.getCumPct(I)D
   * Goal 70. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;
   * Goal 71. org.apache.commons.math.stat.Frequency.getCumPct(J)D
   * Goal 72. org.apache.commons.math.stat.Frequency.addValue(I)V
   * Goal 73. Branch org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(I)V
   * Goal 74. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 75. Branch org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch in context: org.apache.commons.math.stat.Frequency:valuesIterator()Ljava/util/Iterator;
   * Goal 76. Branch org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(J)D
   * Goal 77. Branch org.apache.commons.math.stat.Frequency.getCumPct(I)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(I)D
   * Goal 78. Branch org.apache.commons.math.stat.Frequency.clear()V: root-Branch in context: org.apache.commons.math.stat.Frequency:clear()V
   */

  

  //Test case number: 22
  /*
   * 242 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.getCount(J)J: Line 260
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 7. org.apache.commons.math.stat.Frequency.getCumFreq(J)J: Line 398
   * Goal 8. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 9. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(I)V: Line 156
   * Goal 11. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 12. org.apache.commons.math.stat.Frequency.addValue(I)V: Line 157
   * Goal 13. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 14. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 287
   * Goal 15. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 289
   * Goal 16. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 17. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 18. org.apache.commons.math.stat.Frequency.getPct(I)D: Line 300
   * Goal 19. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 431
   * Goal 20. org.apache.commons.math.stat.Frequency.getPct(J)D: Line 311
   * Goal 21. org.apache.commons.math.stat.Frequency.<init>()V: Line 58
   * Goal 22. org.apache.commons.math.stat.Frequency.<init>()V: Line 59
   * Goal 23. org.apache.commons.math.stat.Frequency.clear()V: Line 188
   * Goal 24. org.apache.commons.math.stat.Frequency.clear()V: Line 189
   * Goal 25. org.apache.commons.math.stat.Frequency.getPct(C)D: Line 322
   * Goal 26. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 78
   * Goal 27. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 79
   * Goal 28. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 80
   * Goal 29. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 30. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 81
   * Goal 31. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 337
   * Goal 32. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 82
   * Goal 33. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 83
   * Goal 34. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 35. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 84
   * Goal 36. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 37. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 85
   * Goal 38. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 39. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 86
   * Goal 40. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 41. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 42. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 87
   * Goal 43. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 44. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 45. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 88
   * Goal 46. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 47. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 89
   * Goal 48. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 49. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 90
   * Goal 50. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 51. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 91
   * Goal 52. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 92
   * Goal 53. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 93
   * Goal 54. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 55. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 350
   * Goal 56. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 351
   * Goal 57. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 355
   * Goal 58. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 59. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 357
   * Goal 60. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 358
   * Goal 61. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 62. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 63. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 361
   * Goal 64. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 234
   * Goal 65. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 362
   * Goal 66. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 235
   * Goal 67. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 239
   * Goal 68. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 496
   * Goal 69. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 240
   * Goal 70. org.apache.commons.math.stat.Frequency.getCount(I)J: Line 250
   * Goal 71. org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch
   * Goal 72. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 73. org.apache.commons.math.stat.Frequency.getCumFreq(J)J: root-Branch
   * Goal 74. org.apache.commons.math.stat.Frequency.clear()V: root-Branch
   * Goal 75. org.apache.commons.math.stat.Frequency.getPct(J)D: root-Branch
   * Goal 76. org.apache.commons.math.stat.Frequency.getPct(I)D: root-Branch
   * Goal 77. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 78. org.apache.commons.math.stat.Frequency.getCount(I)J: root-Branch
   * Goal 79. org.apache.commons.math.stat.Frequency.getPct(C)D: root-Branch
   * Goal 80. org.apache.commons.math.stat.Frequency.getCount(J)J: root-Branch
   * Goal 81. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true
   * Goal 82. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 83. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 84. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 85. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - true
   * Goal 86. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true
   * Goal 87. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 88. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 89. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - true
   * Goal 90. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 91. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 92. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false
   * Goal 93. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 94. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 95. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 96. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - false
   * Goal 97. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - false
   * Goal 98. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 99. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false
   * Goal 100. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - false
   * Goal 101. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false
   * Goal 102. Weak Mutation 0: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:80 - ReplaceConstant - Value 	 Freq. 	 Pct. 	 Cum Pct. 
 -> 
   * Goal 103. Weak Mutation 1: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:82 - ReplaceComparisonOperator == -> !=
   * Goal 104. Weak Mutation 2: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 0
   * Goal 105. Weak Mutation 3: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 1
   * Goal 106. Weak Mutation 4: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> -1
   * Goal 107. Weak Mutation 5: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 8
   * Goal 108. Weak Mutation 6: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 10
   * Goal 109. Weak Mutation 7: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 0
   * Goal 110. Weak Mutation 8: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 1
   * Goal 111. Weak Mutation 9: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> -1
   * Goal 112. Weak Mutation 10: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 8
   * Goal 113. Weak Mutation 11: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 10
   * Goal 114. Weak Mutation 12: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 0
   * Goal 115. Weak Mutation 13: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 1
   * Goal 116. Weak Mutation 14: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> -1
   * Goal 117. Weak Mutation 15: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 8
   * Goal 118. Weak Mutation 16: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 10
   * Goal 119. Weak Mutation 17: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 0
   * Goal 120. Weak Mutation 18: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 1
   * Goal 121. Weak Mutation 19: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> -1
   * Goal 122. Weak Mutation 20: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 9
   * Goal 123. Weak Mutation 21: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 11
   * Goal 124. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 125. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 126. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 127. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 128. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 129. Weak Mutation 43: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp Negation
   * Goal 130. Weak Mutation 44: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC 1
   * Goal 131. Weak Mutation 45: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC -1
   * Goal 132. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 133. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 134. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 135. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 136. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 137. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 138. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 139. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 140. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 141. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 142. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 143. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 144. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 145. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 146. Weak Mutation 64: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp Negation
   * Goal 147. Weak Mutation 65: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp IINC 1
   * Goal 148. Weak Mutation 66: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp IINC -1
   * Goal 149. Weak Mutation 67: org.apache.commons.math.stat.Frequency.getCount(J)J:260 - InsertUnaryOp Negation
   * Goal 150. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 151. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 152. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 153. Weak Mutation 74: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> -1
   * Goal 154. Weak Mutation 75: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> <
   * Goal 155. Weak Mutation 77: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 0.0
   * Goal 156. Weak Mutation 78: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 1.0
   * Goal 157. Weak Mutation 79: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> -1.0
   * Goal 158. Weak Mutation 80: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> NaN
   * Goal 159. Weak Mutation 81: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - InsertUnaryOp Negation
   * Goal 160. Weak Mutation 82: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> +
   * Goal 161. Weak Mutation 83: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> %
   * Goal 162. Weak Mutation 84: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> -
   * Goal 163. Weak Mutation 86: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp Negation
   * Goal 164. Weak Mutation 87: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp IINC 1
   * Goal 165. Weak Mutation 88: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp IINC -1
   * Goal 166. Weak Mutation 89: org.apache.commons.math.stat.Frequency.getPct(J)D:311 - InsertUnaryOp Negation
   * Goal 167. Weak Mutation 90: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp Negation
   * Goal 168. Weak Mutation 91: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp IINC 1
   * Goal 169. Weak Mutation 92: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp IINC -1
   * Goal 170. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 171. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 172. Weak Mutation 95: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> -1
   * Goal 173. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 174. Weak Mutation 98: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:337 - ReplaceConstant - 0 -> 1
   * Goal 175. Weak Mutation 99: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:337 - ReplaceConstant - 0 -> -1
   * Goal 176. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 177. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 178. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 179. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 180. Weak Mutation 104: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:350 - ReplaceComparisonOperator = null -> != null
   * Goal 181. Weak Mutation 106: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> -1
   * Goal 182. Weak Mutation 108: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> >
   * Goal 183. Weak Mutation 109: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> 1
   * Goal 184. Weak Mutation 110: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> -1
   * Goal 185. Weak Mutation 113: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> <=
   * Goal 186. Weak Mutation 118: org.apache.commons.math.stat.Frequency.getCumFreq(J)J:398 - InsertUnaryOp Negation
   * Goal 187. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 188. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 189. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 190. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   * Goal 191. Weak Mutation 132: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - InsertUnaryOp Negation
   * Goal 192. Weak Mutation 133: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> +
   * Goal 193. Weak Mutation 134: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> %
   * Goal 194. Weak Mutation 135: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> -
   * Goal 195. org.apache.commons.math.stat.Frequency.getPct(C)D:positive
   * Goal 196. org.apache.commons.math.stat.Frequency.getPct(I)D:positive
   * Goal 197. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:positive
   * Goal 198. org.apache.commons.math.stat.Frequency.getCount(J)J:zero
   * Goal 199. org.apache.commons.math.stat.Frequency.getCumFreq(J)J:zero
   * Goal 200. org.apache.commons.math.stat.Frequency.getPct(J)D:positive
   * Goal 201. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:zero
   * Goal 202. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:nonnull
   * Goal 203. org.apache.commons.math.stat.Frequency.getCount(I)J:zero
   * Goal 204. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 205. org.apache.commons.math.stat.Frequency.getPct(J)D
   * Goal 206. org.apache.commons.math.stat.Frequency.getPct(C)D
   * Goal 207. org.apache.commons.math.stat.Frequency.getCumFreq(J)J
   * Goal 208. org.apache.commons.math.stat.Frequency.getCount(I)J
   * Goal 209. org.apache.commons.math.stat.Frequency.addValue(I)V
   * Goal 210. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 211. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D
   * Goal 212. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J
   * Goal 213. org.apache.commons.math.stat.Frequency.getCount(J)J
   * Goal 214. org.apache.commons.math.stat.Frequency.getPct(I)D
   * Goal 215. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 216. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 217. org.apache.commons.math.stat.Frequency.getPct(J)D
   * Goal 218. org.apache.commons.math.stat.Frequency.getPct(C)D
   * Goal 219. org.apache.commons.math.stat.Frequency.getCumFreq(J)J
   * Goal 220. org.apache.commons.math.stat.Frequency.getCount(I)J
   * Goal 221. org.apache.commons.math.stat.Frequency.addValue(I)V
   * Goal 222. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 223. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D
   * Goal 224. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J
   * Goal 225. org.apache.commons.math.stat.Frequency.getCount(J)J
   * Goal 226. org.apache.commons.math.stat.Frequency.getPct(I)D
   * Goal 227. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 228. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 229. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 230. Branch org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true in context: org.apache.commons.math.stat.Frequency:getCount(Ljava/lang/Object;)J
   * Goal 231. Branch org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - true in context: org.apache.commons.math.stat.Frequency:getCount(Ljava/lang/Object;)J
   * Goal 232. Branch org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - false in context: org.apache.commons.math.stat.Frequency:getPct(Ljava/lang/Object;)D
   * Goal 233. Branch org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(I)V
   * Goal 234. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 235. Branch org.apache.commons.math.stat.Frequency.getCumFreq(J)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(J)J
   * Goal 236. Branch org.apache.commons.math.stat.Frequency.clear()V: root-Branch in context: org.apache.commons.math.stat.Frequency:clear()V
   * Goal 237. Branch org.apache.commons.math.stat.Frequency.getPct(J)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(J)D
   * Goal 238. Branch org.apache.commons.math.stat.Frequency.getPct(I)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(I)D
   * Goal 239. Branch org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch in context: 
   * Goal 240. Branch org.apache.commons.math.stat.Frequency.getCount(I)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCount(I)J
   * Goal 241. Branch org.apache.commons.math.stat.Frequency.getPct(C)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(C)D
   * Goal 242. Branch org.apache.commons.math.stat.Frequency.getCount(J)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCount(J)J
   */

  

  //Test case number: 23
  /*
   * 46 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch
   * Goal 2. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 3. org.apache.commons.math.stat.Frequency.getCumFreq(J)J: root-Branch
   * Goal 4. org.apache.commons.math.stat.Frequency.clear()V: root-Branch
   * Goal 5. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch
   * Goal 6. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 7. org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch
   * Goal 8. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch
   * Goal 9. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - true
   * Goal 11. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - true
   * Goal 12. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 13. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 14. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 15. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 16. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 17. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - true
   * Goal 18. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 19. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - true
   * Goal 20. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I120 Branch 17 IFLE L368 - true
   * Goal 21. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 22. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - false
   * Goal 23. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - false
   * Goal 24. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 25. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 26. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 27. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 28. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false
   * Goal 29. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I108 Branch 16 IFEQ L366 - false
   * Goal 30. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I120 Branch 17 IFLE L368 - false
   * Goal 31. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - false
   * Goal 32. org.apache.commons.math.stat.Frequency.clear()V: Line 188
   * Goal 33. org.apache.commons.math.stat.Frequency.clear()V: Line 189
   * Goal 34. Branch org.apache.commons.math.stat.Frequency.clear()V: root-Branch in context: org.apache.commons.math.stat.Frequency:clear()V
   * Goal 35. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 112
   * Goal 36. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 118
   * Goal 37. Weak Mutation 23: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> 0
   * Goal 38. Weak Mutation 24: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> 1
   * Goal 39. Weak Mutation 25: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:112 - ReplaceConstant - -1 -> -2
   * Goal 40. Weak Mutation 27: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:118 - ReplaceConstant - Object must implement Comparable -> 
   * Goal 41. Weak Mutation 28: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:118 - ReplaceComparisonOperator == -> !=
   * Goal 42. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - false in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 43. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - true in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 44. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 369
   * Goal 45. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 373
   * Goal 46. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 353
   */

  public void test23()  throws Throwable  {
      Frequency.clearORefMap();
	Frequency frequency0 = new Frequency();
      String string0 = frequency0.toString();
      double double0 = frequency0.getCumPct((-1720L));
      Long long0 = new Long((-1720L));
      long long1 = Long.min((-1720L), (-1720L));
      Long long2 = Long.getLong("Value \t Freq. \t Pct. \t Cum Pct. \n");
      Long long3 = Long.getLong(".Tt-.");
      long long4 = Long.min((-2904L), 81L);
      frequency0.addValue((Object) long0);
      frequency0.addValue((int) '\\');
      long long5 = frequency0.getCumFreq('\\');
      long long6 = frequency0.getCumFreq((-1720L));
      double double1 = frequency0.getCumPct(0L);
      double double2 = frequency0.getCumPct(0L);
      frequency0.clear();
      Iterator iterator0 = frequency0.valuesIterator();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        frequency0.addValue(object0);
      } catch(IllegalArgumentException e) {
         //
         // Object must implement Comparable
         //
         assertThrownBy("org.apache.commons.math.stat.Frequency", e);
      }
  }

  //Test case number: 24
  /*
   * 50 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 2. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 3. org.apache.commons.math.stat.Frequency.getCumFreq(J)J: root-Branch
   * Goal 4. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 5. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch
   * Goal 6. org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch
   * Goal 7. org.apache.commons.math.stat.Frequency.getCount(I)J: root-Branch
   * Goal 8. org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch
   * Goal 9. org.apache.commons.math.stat.Frequency.getCumPct(I)D: root-Branch
   * Goal 10. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true
   * Goal 11. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - true
   * Goal 12. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 13. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 14. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 15. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true
   * Goal 16. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 17. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 18. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - true
   * Goal 19. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 20. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 21. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false
   * Goal 22. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - false
   * Goal 23. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 24. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 25. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 26. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 27. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false
   * Goal 28. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false
   * Goal 29. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - false
   * Goal 30. org.apache.commons.math.stat.Frequency.getCumPct(I)D: Line 444
   * Goal 31. Weak Mutation 137: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp Negation
   * Goal 32. Weak Mutation 138: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp IINC 1
   * Goal 33. Weak Mutation 139: org.apache.commons.math.stat.Frequency.getCumPct(I)D:444 - InsertUnaryOp IINC -1
   * Goal 34. org.apache.commons.math.stat.Frequency.getCumPct(I)D
   * Goal 35. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 36. org.apache.commons.math.stat.Frequency.getCumPct(I)D
   * Goal 37. org.apache.commons.math.stat.Frequency.clear()V
   * Goal 38. Branch org.apache.commons.math.stat.Frequency.getCumPct(I)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(I)D
   * Goal 39. Branch org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true in context: org.apache.commons.math.stat.Frequency:getCount(Ljava/lang/Object;)J
   * Goal 40. org.apache.commons.math.stat.Frequency.getCumFreq(J)J:zero
   * Goal 41. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:positive
   * Goal 42. org.apache.commons.math.stat.Frequency.getCumPct(I)D:zero
   * Goal 43. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 44. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 45. Branch org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false in context: org.apache.commons.math.stat.Frequency:getCount(Ljava/lang/Object;)J
   * Goal 46. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - true in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 47. Branch org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - false in context: org.apache.commons.math.stat.Frequency:getCumPct(Ljava/lang/Object;)D
   * Goal 48. addValue(C)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 49. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 237
   * Goal 50. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 353
   */

  

  //Test case number: 25
  /*
   * 160 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.getCumFreq(I)J: Line 386
   * Goal 2. org.apache.commons.math.stat.Frequency.getCount(J)J: Line 260
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 8. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 144
   * Goal 9. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 146
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 11. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 12. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: Line 410
   * Goal 13. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 14. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 15. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 287
   * Goal 16. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 17. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 18. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 429
   * Goal 19. org.apache.commons.math.stat.Frequency.getPct(J)D: Line 311
   * Goal 20. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 183
   * Goal 21. org.apache.commons.math.stat.Frequency.getPct(C)D: Line 322
   * Goal 22. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 67
   * Goal 23. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 68
   * Goal 24. org.apache.commons.math.stat.Frequency.getCumPct(J)D: Line 457
   * Goal 25. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 26. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 337
   * Goal 27. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 28. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 29. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 30. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 31. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 32. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 33. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 34. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 35. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 36. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 37. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 38. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 353
   * Goal 39. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 354
   * Goal 40. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 41. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 42. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 43. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 234
   * Goal 44. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 110
   * Goal 45. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 239
   * Goal 46. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 240
   * Goal 47. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 115
   * Goal 48. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 116
   * Goal 49. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 120
   * Goal 50. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 51. org.apache.commons.math.stat.Frequency.getCumFreq(I)J: root-Branch
   * Goal 52. org.apache.commons.math.stat.Frequency.getPct(J)D: root-Branch
   * Goal 53. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch
   * Goal 54. org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch
   * Goal 55. org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch
   * Goal 56. org.apache.commons.math.stat.Frequency.getPct(C)D: root-Branch
   * Goal 57. org.apache.commons.math.stat.Frequency.getCount(J)J: root-Branch
   * Goal 58. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - true
   * Goal 59. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 60. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 61. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 62. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - true
   * Goal 63. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 64. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 65. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - false
   * Goal 66. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - false
   * Goal 67. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 68. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 69. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - false
   * Goal 70. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - false
   * Goal 71. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 72. Weak Mutation 128: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> 0.0
   * Goal 73. Weak Mutation 129: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> 1.0
   * Goal 74. Weak Mutation 130: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> -1.0
   * Goal 75. Weak Mutation 131: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:429 - ReplaceConstant - NaN -> NaN
   * Goal 76. Weak Mutation 140: org.apache.commons.math.stat.Frequency.getCumPct(J)D:457 - InsertUnaryOp Negation
   * Goal 77. Weak Mutation 22: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:110 - ReplaceComparisonOperator != -> ==
   * Goal 78. Weak Mutation 26: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:115 - ReplaceComparisonOperator == -> !=
   * Goal 79. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 80. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 81. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 82. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 83. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 84. Weak Mutation 41: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceConstant - Value not comparable to existing values. -> 
   * Goal 85. Weak Mutation 42: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceComparisonOperator == -> !=
   * Goal 86. Weak Mutation 47: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp Negation
   * Goal 87. Weak Mutation 48: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC 1
   * Goal 88. Weak Mutation 49: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC -1
   * Goal 89. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 90. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 91. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 92. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 93. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 94. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 95. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 96. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 97. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 98. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 99. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 100. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 101. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 102. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 103. Weak Mutation 67: org.apache.commons.math.stat.Frequency.getCount(J)J:260 - InsertUnaryOp Negation
   * Goal 104. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 105. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 106. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 107. Weak Mutation 74: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> -1
   * Goal 108. Weak Mutation 77: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 0.0
   * Goal 109. Weak Mutation 78: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 1.0
   * Goal 110. Weak Mutation 79: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> -1.0
   * Goal 111. Weak Mutation 80: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> NaN
   * Goal 112. Weak Mutation 89: org.apache.commons.math.stat.Frequency.getPct(J)D:311 - InsertUnaryOp Negation
   * Goal 113. Weak Mutation 90: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp Negation
   * Goal 114. Weak Mutation 91: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp IINC 1
   * Goal 115. Weak Mutation 92: org.apache.commons.math.stat.Frequency.getPct(C)D:322 - InsertUnaryOp IINC -1
   * Goal 116. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 117. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 118. Weak Mutation 95: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> -1
   * Goal 119. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 120. Weak Mutation 98: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:337 - ReplaceConstant - 0 -> 1
   * Goal 121. Weak Mutation 99: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:337 - ReplaceConstant - 0 -> -1
   * Goal 122. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 123. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 124. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 125. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 126. Weak Mutation 105: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:354 - InsertUnaryOp Negation
   * Goal 127. Weak Mutation 115: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp Negation
   * Goal 128. Weak Mutation 116: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp IINC 1
   * Goal 129. Weak Mutation 117: org.apache.commons.math.stat.Frequency.getCumFreq(I)J:386 - InsertUnaryOp IINC -1
   * Goal 130. Weak Mutation 119: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp Negation
   * Goal 131. Weak Mutation 120: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC 1
   * Goal 132. Weak Mutation 121: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC -1
   * Goal 133. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 134. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 135. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 136. Weak Mutation 125: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> -1
   * Goal 137. org.apache.commons.math.stat.Frequency.getCumPct(J)D:positive
   * Goal 138. org.apache.commons.math.stat.Frequency.getPct(C)D:positive
   * Goal 139. org.apache.commons.math.stat.Frequency.getCumFreq(C)J:zero
   * Goal 140. org.apache.commons.math.stat.Frequency.getPct(J)D:positive
   * Goal 141. org.apache.commons.math.stat.Frequency.getCount(J)J:zero
   * Goal 142. org.apache.commons.math.stat.Frequency.getCumFreq(I)J:zero
   * Goal 143. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:positive
   * Goal 144. Branch org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - false in context: org.apache.commons.math.stat.Frequency:getCumPct(Ljava/lang/Object;)D
   * Goal 145. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - true in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 146. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - false in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 147. Branch org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>(Ljava/util/Comparator;)V
   * Goal 148. Branch org.apache.commons.math.stat.Frequency.getCumFreq(I)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(I)J
   * Goal 149. Branch org.apache.commons.math.stat.Frequency.getPct(J)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(J)D
   * Goal 150. Branch org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(C)J
   * Goal 151. Branch org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(J)D
   * Goal 152. Branch org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(C)V
   * Goal 153. Branch org.apache.commons.math.stat.Frequency.getPct(C)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(C)D
   * Goal 154. Branch org.apache.commons.math.stat.Frequency.getCount(J)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCount(J)J
   * Goal 155. org.apache.commons.math.stat.Frequency.getPct(C)D
   * Goal 156. org.apache.commons.math.stat.Frequency.getPct(C)D
   * Goal 157. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V
   * Goal 158. org.apache.commons.math.stat.Frequency.getCount(J)J
   * Goal 159. org.apache.commons.math.stat.Frequency.getCount(J)J
   * Goal 160. addValue(C)V_java.lang.IllegalArgumentException_EXPLICIT
   */

  

  //Test case number: 26
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch
   * Goal 2. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: root-Branch
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - true
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 7. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 67
   * Goal 8. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: Line 68
   * Goal 9. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 10. org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V
   * Goal 11. Branch org.apache.commons.math.stat.Frequency.<init>(Ljava/util/Comparator;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>(Ljava/util/Comparator;)V
   * Goal 12. org.apache.commons.math.stat.Frequency.addValue(C)V
   */

  

  //Test case number: 27
  /*
   * 251 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 6. org.apache.commons.math.stat.Frequency.getCumFreq(J)J: Line 398
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 144
   * Goal 8. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 146
   * Goal 9. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 11. org.apache.commons.math.stat.Frequency.addValue(I)V: Line 156
   * Goal 12. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 13. org.apache.commons.math.stat.Frequency.addValue(I)V: Line 157
   * Goal 14. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 15. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 289
   * Goal 16. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 17. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 18. org.apache.commons.math.stat.Frequency.getPct(I)D: Line 300
   * Goal 19. org.apache.commons.math.stat.Frequency.addValue(J)V: Line 174
   * Goal 20. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 431
   * Goal 21. org.apache.commons.math.stat.Frequency.addValue(J)V: Line 175
   * Goal 22. org.apache.commons.math.stat.Frequency.getPct(J)D: Line 311
   * Goal 23. org.apache.commons.math.stat.Frequency.addValue(C)V: Line 183
   * Goal 24. org.apache.commons.math.stat.Frequency.<init>()V: Line 58
   * Goal 25. org.apache.commons.math.stat.Frequency.<init>()V: Line 59
   * Goal 26. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: Line 201
   * Goal 27. org.apache.commons.math.stat.Frequency.getCumPct(J)D: Line 457
   * Goal 28. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 78
   * Goal 29. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 79
   * Goal 30. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 80
   * Goal 31. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 32. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 81
   * Goal 33. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 82
   * Goal 34. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 83
   * Goal 35. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 36. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 84
   * Goal 37. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 38. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 340
   * Goal 39. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 85
   * Goal 40. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 41. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 86
   * Goal 42. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 43. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 44. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 87
   * Goal 45. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 46. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 47. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 88
   * Goal 48. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 49. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 89
   * Goal 50. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 51. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 90
   * Goal 52. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 53. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 91
   * Goal 54. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 92
   * Goal 55. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 93
   * Goal 56. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 57. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 350
   * Goal 58. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 351
   * Goal 59. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 353
   * Goal 60. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 354
   * Goal 61. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 355
   * Goal 62. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 63. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 357
   * Goal 64. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 358
   * Goal 65. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 66. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 67. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 361
   * Goal 68. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 234
   * Goal 69. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 362
   * Goal 70. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 235
   * Goal 71. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 237
   * Goal 72. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 365
   * Goal 73. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 366
   * Goal 74. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 239
   * Goal 75. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 367
   * Goal 76. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 496
   * Goal 77. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 240
   * Goal 78. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 368
   * Goal 79. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 371
   * Goal 80. org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch
   * Goal 81. org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch
   * Goal 82. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 83. org.apache.commons.math.stat.Frequency.getCumFreq(J)J: root-Branch
   * Goal 84. org.apache.commons.math.stat.Frequency.getPct(J)D: root-Branch
   * Goal 85. org.apache.commons.math.stat.Frequency.getPct(I)D: root-Branch
   * Goal 86. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 87. org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch
   * Goal 88. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch
   * Goal 89. org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch
   * Goal 90. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true
   * Goal 91. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 92. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 93. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 94. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true
   * Goal 95. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 96. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 97. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - true
   * Goal 98. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 99. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - true
   * Goal 100. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I120 Branch 17 IFLE L368 - true
   * Goal 101. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 102. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false
   * Goal 103. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 104. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 105. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 106. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - false
   * Goal 107. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 108. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false
   * Goal 109. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - false
   * Goal 110. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false
   * Goal 111. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I108 Branch 16 IFEQ L366 - false
   * Goal 112. Weak Mutation 0: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:80 - ReplaceConstant - Value 	 Freq. 	 Pct. 	 Cum Pct. 
 -> 
   * Goal 113. Weak Mutation 1: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:82 - ReplaceComparisonOperator == -> !=
   * Goal 114. Weak Mutation 2: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 0
   * Goal 115. Weak Mutation 3: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 1
   * Goal 116. Weak Mutation 4: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> -1
   * Goal 117. Weak Mutation 5: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 8
   * Goal 118. Weak Mutation 6: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 10
   * Goal 119. Weak Mutation 7: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 0
   * Goal 120. Weak Mutation 8: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 1
   * Goal 121. Weak Mutation 9: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> -1
   * Goal 122. Weak Mutation 10: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 8
   * Goal 123. Weak Mutation 11: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 10
   * Goal 124. Weak Mutation 12: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 0
   * Goal 125. Weak Mutation 13: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 1
   * Goal 126. Weak Mutation 14: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> -1
   * Goal 127. Weak Mutation 15: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 8
   * Goal 128. Weak Mutation 16: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 10
   * Goal 129. Weak Mutation 17: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 0
   * Goal 130. Weak Mutation 18: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 1
   * Goal 131. Weak Mutation 19: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> -1
   * Goal 132. Weak Mutation 20: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 9
   * Goal 133. Weak Mutation 21: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 11
   * Goal 134. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 135. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 136. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 137. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 138. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 139. Weak Mutation 41: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceConstant - Value not comparable to existing values. -> 
   * Goal 140. Weak Mutation 42: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceComparisonOperator == -> !=
   * Goal 141. Weak Mutation 43: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp Negation
   * Goal 142. Weak Mutation 44: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC 1
   * Goal 143. Weak Mutation 45: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC -1
   * Goal 144. Weak Mutation 46: org.apache.commons.math.stat.Frequency.addValue(J)V:174 - InsertUnaryOp Negation
   * Goal 145. Weak Mutation 47: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp Negation
   * Goal 146. Weak Mutation 48: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC 1
   * Goal 147. Weak Mutation 49: org.apache.commons.math.stat.Frequency.addValue(C)V:183 - InsertUnaryOp IINC -1
   * Goal 148. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 149. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 150. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 151. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 152. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 153. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 154. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 155. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 156. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 157. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 158. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 159. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 160. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 161. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 162. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 163. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 164. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 165. Weak Mutation 75: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> <
   * Goal 166. Weak Mutation 81: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - InsertUnaryOp Negation
   * Goal 167. Weak Mutation 82: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> +
   * Goal 168. Weak Mutation 83: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> %
   * Goal 169. Weak Mutation 84: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> -
   * Goal 170. Weak Mutation 85: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> *
   * Goal 171. Weak Mutation 86: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp Negation
   * Goal 172. Weak Mutation 87: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp IINC 1
   * Goal 173. Weak Mutation 88: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp IINC -1
   * Goal 174. Weak Mutation 89: org.apache.commons.math.stat.Frequency.getPct(J)D:311 - InsertUnaryOp Negation
   * Goal 175. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 176. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 177. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 178. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 179. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 180. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 181. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 182. Weak Mutation 104: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:350 - ReplaceComparisonOperator = null -> != null
   * Goal 183. Weak Mutation 105: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:354 - InsertUnaryOp Negation
   * Goal 184. Weak Mutation 106: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> -1
   * Goal 185. Weak Mutation 107: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> ==
   * Goal 186. Weak Mutation 108: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> >
   * Goal 187. Weak Mutation 109: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> 1
   * Goal 188. Weak Mutation 110: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> -1
   * Goal 189. Weak Mutation 111: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> -2
   * Goal 190. Weak Mutation 112: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> !=
   * Goal 191. Weak Mutation 113: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> <=
   * Goal 192. Weak Mutation 114: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:366 - ReplaceComparisonOperator == -> !=
   * Goal 193. Weak Mutation 118: org.apache.commons.math.stat.Frequency.getCumFreq(J)J:398 - InsertUnaryOp Negation
   * Goal 194. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 195. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 196. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 197. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   * Goal 198. Weak Mutation 132: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - InsertUnaryOp Negation
   * Goal 199. Weak Mutation 133: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> +
   * Goal 200. Weak Mutation 134: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> %
   * Goal 201. Weak Mutation 135: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> -
   * Goal 202. Weak Mutation 136: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> *
   * Goal 203. Weak Mutation 140: org.apache.commons.math.stat.Frequency.getCumPct(J)D:457 - InsertUnaryOp Negation
   * Goal 204. org.apache.commons.math.stat.Frequency.getPct(I)D:positive
   * Goal 205. org.apache.commons.math.stat.Frequency.getCumPct(J)D:positive
   * Goal 206. org.apache.commons.math.stat.Frequency.getCumFreq(J)J:positive
   * Goal 207. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;:nonnull
   * Goal 208. org.apache.commons.math.stat.Frequency.getPct(J)D:positive
   * Goal 209. org.apache.commons.math.stat.Frequency.getCumPct(J)D:zero
   * Goal 210. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:zero
   * Goal 211. org.apache.commons.math.stat.Frequency.getSumFreq()J:positive
   * Goal 212. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:nonnull
   * Goal 213. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:positive
   * Goal 214. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:zero
   * Goal 215. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 216. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 217. Branch org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true in context: org.apache.commons.math.stat.Frequency:getSumFreq()J
   * Goal 218. Branch org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false in context: org.apache.commons.math.stat.Frequency:getSumFreq()J
   * Goal 219. Branch org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true in context: org.apache.commons.math.stat.Frequency:getPct(Ljava/lang/Object;)D
   * Goal 220. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 221. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 222. Branch org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false in context: org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Object;)J
   * Goal 223. Branch org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true in context: org.apache.commons.math.stat.Frequency:getCumPct(Ljava/lang/Object;)D
   * Goal 224. Branch org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(I)V
   * Goal 225. Branch org.apache.commons.math.stat.Frequency.addValue(J)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(J)V
   * Goal 226. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 227. Branch org.apache.commons.math.stat.Frequency.getCumFreq(J)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(J)J
   * Goal 228. Branch org.apache.commons.math.stat.Frequency.getPct(J)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(J)D
   * Goal 229. Branch org.apache.commons.math.stat.Frequency.getPct(I)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(I)D
   * Goal 230. Branch org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch in context: 
   * Goal 231. Branch org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(J)D
   * Goal 232. Branch org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch in context: org.apache.commons.math.stat.Frequency:valuesIterator()Ljava/util/Iterator;
   * Goal 233. Branch org.apache.commons.math.stat.Frequency.addValue(C)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(C)V
   * Goal 234. org.apache.commons.math.stat.Frequency.addValue(C)V
   * Goal 235. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 236. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D
   * Goal 237. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;
   * Goal 238. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J
   * Goal 239. org.apache.commons.math.stat.Frequency.getCumFreq(I)J
   * Goal 240. org.apache.commons.math.stat.Frequency.addValue(J)V
   * Goal 241. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D
   * Goal 242. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;
   * Goal 243. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J
   * Goal 244. org.apache.commons.math.stat.Frequency.getCumFreq(I)J
   * Goal 245. org.apache.commons.math.stat.Frequency.getSumFreq()J
   * Goal 246. org.apache.commons.math.stat.Frequency.getSumFreq()J
   * Goal 247. addValue(C)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 248. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D
   * Goal 249. org.apache.commons.math.stat.Frequency.getCumFreq(J)J
   * Goal 250. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D
   * Goal 251. org.apache.commons.math.stat.Frequency.getCumFreq(J)J
   */

  

  //Test case number: 28
  /*
   * 300 covered goals:
   * Goal 1. org.apache.commons.math.stat.Frequency.getCount(J)J: Line 260
   * Goal 2. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 133
   * Goal 3. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 134
   * Goal 4. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 135
   * Goal 5. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 138
   * Goal 6. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 139
   * Goal 7. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 140
   * Goal 8. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 142
   * Goal 9. org.apache.commons.math.stat.Frequency.getCount(C)J: Line 270
   * Goal 10. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 144
   * Goal 11. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 146
   * Goal 12. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 147
   * Goal 13. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: Line 148
   * Goal 14. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: Line 410
   * Goal 15. org.apache.commons.math.stat.Frequency.addValue(I)V: Line 156
   * Goal 16. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 285
   * Goal 17. org.apache.commons.math.stat.Frequency.addValue(I)V: Line 157
   * Goal 18. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 286
   * Goal 19. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 287
   * Goal 20. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: Line 289
   * Goal 21. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: Line 165
   * Goal 22. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: Line 166
   * Goal 23. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 427
   * Goal 24. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 428
   * Goal 25. org.apache.commons.math.stat.Frequency.getPct(I)D: Line 300
   * Goal 26. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: Line 431
   * Goal 27. org.apache.commons.math.stat.Frequency.getPct(J)D: Line 311
   * Goal 28. org.apache.commons.math.stat.Frequency.<init>()V: Line 58
   * Goal 29. org.apache.commons.math.stat.Frequency.<init>()V: Line 59
   * Goal 30. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: Line 201
   * Goal 31. org.apache.commons.math.stat.Frequency.getCumPct(J)D: Line 457
   * Goal 32. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 78
   * Goal 33. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 79
   * Goal 34. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 80
   * Goal 35. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 336
   * Goal 36. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 81
   * Goal 37. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 82
   * Goal 38. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 83
   * Goal 39. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 339
   * Goal 40. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 84
   * Goal 41. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 212
   * Goal 42. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 85
   * Goal 43. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 213
   * Goal 44. org.apache.commons.math.stat.Frequency.getCumPct(C)D: Line 470
   * Goal 45. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 86
   * Goal 46. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 214
   * Goal 47. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 342
   * Goal 48. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 87
   * Goal 49. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 215
   * Goal 50. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 343
   * Goal 51. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 88
   * Goal 52. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 344
   * Goal 53. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 89
   * Goal 54. org.apache.commons.math.stat.Frequency.getSumFreq()J: Line 217
   * Goal 55. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 90
   * Goal 56. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 346
   * Goal 57. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 91
   * Goal 58. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 92
   * Goal 59. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: Line 93
   * Goal 60. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 349
   * Goal 61. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 350
   * Goal 62. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 351
   * Goal 63. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 353
   * Goal 64. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 354
   * Goal 65. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 355
   * Goal 66. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 228
   * Goal 67. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 229
   * Goal 68. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 357
   * Goal 69. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 358
   * Goal 70. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 231
   * Goal 71. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 233
   * Goal 72. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 361
   * Goal 73. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 234
   * Goal 74. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 362
   * Goal 75. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 235
   * Goal 76. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 237
   * Goal 77. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 365
   * Goal 78. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 110
   * Goal 79. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 366
   * Goal 80. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 239
   * Goal 81. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 367
   * Goal 82. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: Line 496
   * Goal 83. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: Line 240
   * Goal 84. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 368
   * Goal 85. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 115
   * Goal 86. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: Line 371
   * Goal 87. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: Line 116
   * Goal 88. org.apache.commons.math.stat.Frequency.getCount(I)J: Line 250
   * Goal 89. org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch
   * Goal 90. org.apache.commons.math.stat.Frequency.<init>()V: root-Branch
   * Goal 91. org.apache.commons.math.stat.Frequency.getPct(J)D: root-Branch
   * Goal 92. org.apache.commons.math.stat.Frequency.getCount(C)J: root-Branch
   * Goal 93. org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch
   * Goal 94. org.apache.commons.math.stat.Frequency.getPct(I)D: root-Branch
   * Goal 95. org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch
   * Goal 96. org.apache.commons.math.stat.Frequency.getCumPct(C)D: root-Branch
   * Goal 97. org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch
   * Goal 98. org.apache.commons.math.stat.Frequency.getCount(I)J: root-Branch
   * Goal 99. org.apache.commons.math.stat.Frequency.valuesIterator()Ljava/util/Iterator;: root-Branch
   * Goal 100. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: root-Branch
   * Goal 101. org.apache.commons.math.stat.Frequency.getCount(J)J: root-Branch
   * Goal 102. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true
   * Goal 103. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - true
   * Goal 104. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - true
   * Goal 105. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - true
   * Goal 106. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - true
   * Goal 107. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - true
   * Goal 108. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - true
   * Goal 109. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - true
   * Goal 110. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I6 Branch 10 IFNE L336 - true
   * Goal 111. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I15 Branch 11 IFEQ L339 - true
   * Goal 112. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - true
   * Goal 113. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - true
   * Goal 114. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - true
   * Goal 115. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I120 Branch 17 IFLE L368 - true
   * Goal 116. org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D: I10 Branch 18 IFNE L428 - true
   * Goal 117. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false
   * Goal 118. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - false
   * Goal 119. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - false
   * Goal 120. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - false
   * Goal 121. org.apache.commons.math.stat.Frequency.getSumFreq()J: I15 Branch 6 IFEQ L214 - false
   * Goal 122. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - false
   * Goal 123. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I28 Branch 8 IFNULL L234 - false
   * Goal 124. org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D: I10 Branch 9 IFNE L286 - false
   * Goal 125. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I33 Branch 12 IFNONNULL L343 - false
   * Goal 126. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I56 Branch 13 IFNULL L350 - false
   * Goal 127. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I80 Branch 14 IFGE L357 - false
   * Goal 128. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I93 Branch 15 IFLT L361 - false
   * Goal 129. org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J: I108 Branch 16 IFEQ L366 - false
   * Goal 130. Weak Mutation 0: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:80 - ReplaceConstant - Value 	 Freq. 	 Pct. 	 Cum Pct. 
 -> 
   * Goal 131. Weak Mutation 1: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:82 - ReplaceComparisonOperator == -> !=
   * Goal 132. Weak Mutation 2: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 0
   * Goal 133. Weak Mutation 3: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 1
   * Goal 134. Weak Mutation 4: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> -1
   * Goal 135. Weak Mutation 5: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 8
   * Goal 136. Weak Mutation 6: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:85 - ReplaceConstant - 9 -> 10
   * Goal 137. Weak Mutation 7: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 0
   * Goal 138. Weak Mutation 8: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 1
   * Goal 139. Weak Mutation 9: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> -1
   * Goal 140. Weak Mutation 10: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 8
   * Goal 141. Weak Mutation 11: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:87 - ReplaceConstant - 9 -> 10
   * Goal 142. Weak Mutation 12: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 0
   * Goal 143. Weak Mutation 13: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 1
   * Goal 144. Weak Mutation 14: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> -1
   * Goal 145. Weak Mutation 15: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 8
   * Goal 146. Weak Mutation 16: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:89 - ReplaceConstant - 9 -> 10
   * Goal 147. Weak Mutation 17: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 0
   * Goal 148. Weak Mutation 18: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 1
   * Goal 149. Weak Mutation 19: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> -1
   * Goal 150. Weak Mutation 20: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 9
   * Goal 151. Weak Mutation 21: org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:91 - ReplaceConstant - 10 -> 11
   * Goal 152. Weak Mutation 22: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:110 - ReplaceComparisonOperator != -> ==
   * Goal 153. Weak Mutation 26: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V:115 - ReplaceComparisonOperator == -> !=
   * Goal 154. Weak Mutation 29: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:134 - ReplaceComparisonOperator == -> !=
   * Goal 155. Weak Mutation 30: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:139 - ReplaceComparisonOperator != null -> = null
   * Goal 156. Weak Mutation 31: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 0
   * Goal 157. Weak Mutation 32: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> -1
   * Goal 158. Weak Mutation 33: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:140 - ReplaceConstant - 1 -> 2
   * Goal 159. Weak Mutation 34: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceConstant - 1 -> 0
   * Goal 160. Weak Mutation 35: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceConstant - 1 -> -1
   * Goal 161. Weak Mutation 36: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceConstant - 1 -> 2
   * Goal 162. Weak Mutation 37: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceArithmeticOperator + -> %
   * Goal 163. Weak Mutation 38: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceArithmeticOperator + -> -
   * Goal 164. Weak Mutation 39: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceArithmeticOperator + -> *
   * Goal 165. Weak Mutation 40: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:142 - ReplaceArithmeticOperator + -> /
   * Goal 166. Weak Mutation 41: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceConstant - Value not comparable to existing values. -> 
   * Goal 167. Weak Mutation 42: org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V:146 - ReplaceComparisonOperator == -> !=
   * Goal 168. Weak Mutation 43: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp Negation
   * Goal 169. Weak Mutation 44: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC 1
   * Goal 170. Weak Mutation 45: org.apache.commons.math.stat.Frequency.addValue(I)V:156 - InsertUnaryOp IINC -1
   * Goal 171. Weak Mutation 50: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> 1
   * Goal 172. Weak Mutation 51: org.apache.commons.math.stat.Frequency.getSumFreq()J:212 - ReplaceConstant - 0 -> -1
   * Goal 173. Weak Mutation 52: org.apache.commons.math.stat.Frequency.getSumFreq()J:214 - ReplaceComparisonOperator == -> !=
   * Goal 174. Weak Mutation 53: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - InsertUnaryOp Negation
   * Goal 175. Weak Mutation 54: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> %
   * Goal 176. Weak Mutation 55: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> -
   * Goal 177. Weak Mutation 56: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> *
   * Goal 178. Weak Mutation 57: org.apache.commons.math.stat.Frequency.getSumFreq()J:215 - ReplaceArithmeticOperator + -> /
   * Goal 179. Weak Mutation 58: org.apache.commons.math.stat.Frequency.getSumFreq()J:217 - InsertUnaryOp Negation
   * Goal 180. Weak Mutation 59: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:228 - ReplaceComparisonOperator == -> !=
   * Goal 181. Weak Mutation 60: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> 1
   * Goal 182. Weak Mutation 61: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:231 - ReplaceConstant - 0 -> -1
   * Goal 183. Weak Mutation 62: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:234 - ReplaceComparisonOperator = null -> != null
   * Goal 184. Weak Mutation 63: org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:240 - InsertUnaryOp Negation
   * Goal 185. Weak Mutation 64: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp Negation
   * Goal 186. Weak Mutation 65: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp IINC 1
   * Goal 187. Weak Mutation 66: org.apache.commons.math.stat.Frequency.getCount(I)J:250 - InsertUnaryOp IINC -1
   * Goal 188. Weak Mutation 67: org.apache.commons.math.stat.Frequency.getCount(J)J:260 - InsertUnaryOp Negation
   * Goal 189. Weak Mutation 68: org.apache.commons.math.stat.Frequency.getCount(C)J:270 - InsertUnaryOp Negation
   * Goal 190. Weak Mutation 69: org.apache.commons.math.stat.Frequency.getCount(C)J:270 - InsertUnaryOp IINC 1
   * Goal 191. Weak Mutation 70: org.apache.commons.math.stat.Frequency.getCount(C)J:270 - InsertUnaryOp IINC -1
   * Goal 192. Weak Mutation 71: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - InsertUnaryOp Negation
   * Goal 193. Weak Mutation 72: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> 1
   * Goal 194. Weak Mutation 73: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceConstant - 0 -> -1
   * Goal 195. Weak Mutation 74: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> -1
   * Goal 196. Weak Mutation 75: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:286 - ReplaceComparisonOperator != -> <
   * Goal 197. Weak Mutation 77: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 0.0
   * Goal 198. Weak Mutation 78: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> 1.0
   * Goal 199. Weak Mutation 79: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> -1.0
   * Goal 200. Weak Mutation 80: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:287 - ReplaceConstant - NaN -> NaN
   * Goal 201. Weak Mutation 81: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - InsertUnaryOp Negation
   * Goal 202. Weak Mutation 82: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> +
   * Goal 203. Weak Mutation 83: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> %
   * Goal 204. Weak Mutation 84: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> -
   * Goal 205. Weak Mutation 85: org.apache.commons.math.stat.Frequency.getPct(Ljava/lang/Object;)D:289 - ReplaceArithmeticOperator / -> *
   * Goal 206. Weak Mutation 86: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp Negation
   * Goal 207. Weak Mutation 87: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp IINC 1
   * Goal 208. Weak Mutation 88: org.apache.commons.math.stat.Frequency.getPct(I)D:300 - InsertUnaryOp IINC -1
   * Goal 209. Weak Mutation 89: org.apache.commons.math.stat.Frequency.getPct(J)D:311 - InsertUnaryOp Negation
   * Goal 210. Weak Mutation 93: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> 1
   * Goal 211. Weak Mutation 94: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceConstant - 0 -> -1
   * Goal 212. Weak Mutation 96: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:336 - ReplaceComparisonOperator != -> <
   * Goal 213. Weak Mutation 100: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:339 - ReplaceComparisonOperator == -> !=
   * Goal 214. Weak Mutation 101: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:343 - ReplaceComparisonOperator != null -> = null
   * Goal 215. Weak Mutation 102: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> 1
   * Goal 216. Weak Mutation 103: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:346 - ReplaceConstant - 0 -> -1
   * Goal 217. Weak Mutation 104: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:350 - ReplaceComparisonOperator = null -> != null
   * Goal 218. Weak Mutation 105: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:354 - InsertUnaryOp Negation
   * Goal 219. Weak Mutation 106: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> -1
   * Goal 220. Weak Mutation 107: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> ==
   * Goal 221. Weak Mutation 108: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:357 - ReplaceComparisonOperator >= -> >
   * Goal 222. Weak Mutation 109: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> 1
   * Goal 223. Weak Mutation 110: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:358 - ReplaceConstant - 0 -> -1
   * Goal 224. Weak Mutation 111: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> -2
   * Goal 225. Weak Mutation 112: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> !=
   * Goal 226. Weak Mutation 113: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:361 - ReplaceComparisonOperator < -> <=
   * Goal 227. Weak Mutation 114: org.apache.commons.math.stat.Frequency.getCumFreq(Ljava/lang/Object;)J:366 - ReplaceComparisonOperator == -> !=
   * Goal 228. Weak Mutation 119: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp Negation
   * Goal 229. Weak Mutation 120: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC 1
   * Goal 230. Weak Mutation 121: org.apache.commons.math.stat.Frequency.getCumFreq(C)J:410 - InsertUnaryOp IINC -1
   * Goal 231. Weak Mutation 122: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - InsertUnaryOp Negation
   * Goal 232. Weak Mutation 123: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> 1
   * Goal 233. Weak Mutation 124: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceConstant - 0 -> -1
   * Goal 234. Weak Mutation 126: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:428 - ReplaceComparisonOperator != -> <
   * Goal 235. Weak Mutation 132: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - InsertUnaryOp Negation
   * Goal 236. Weak Mutation 133: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> +
   * Goal 237. Weak Mutation 134: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> %
   * Goal 238. Weak Mutation 135: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> -
   * Goal 239. Weak Mutation 136: org.apache.commons.math.stat.Frequency.getCumPct(Ljava/lang/Object;)D:431 - ReplaceArithmeticOperator / -> *
   * Goal 240. Weak Mutation 140: org.apache.commons.math.stat.Frequency.getCumPct(J)D:457 - InsertUnaryOp Negation
   * Goal 241. Weak Mutation 141: org.apache.commons.math.stat.Frequency.getCumPct(C)D:470 - InsertUnaryOp Negation
   * Goal 242. Weak Mutation 142: org.apache.commons.math.stat.Frequency.getCumPct(C)D:470 - InsertUnaryOp IINC 1
   * Goal 243. Weak Mutation 143: org.apache.commons.math.stat.Frequency.getCumPct(C)D:470 - InsertUnaryOp IINC -1
   * Goal 244. org.apache.commons.math.stat.Frequency.getPct(I)D:zero
   * Goal 245. org.apache.commons.math.stat.Frequency.getPct(J)D:zero
   * Goal 246. org.apache.commons.math.stat.Frequency.getCumPct(J)D:positive
   * Goal 247. org.apache.commons.math.stat.Frequency.getCumFreq(C)J:zero
   * Goal 248. org.apache.commons.math.stat.Frequency.getCumPct(C)D:zero
   * Goal 249. org.apache.commons.math.stat.Frequency.getPct(J)D:positive
   * Goal 250. org.apache.commons.math.stat.Frequency.getCumPct(J)D:zero
   * Goal 251. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J:positive
   * Goal 252. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;:nonnull
   * Goal 253. org.apache.commons.math.stat.Frequency.getCount(I)J:zero
   * Goal 254. org.apache.commons.math.stat.Frequency.getCount(C)J:zero
   * Goal 255. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - true in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 256. Branch org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;: I27 Branch 1 IFEQ L82 - false in context: org.apache.commons.math.stat.Frequency:toString()Ljava/lang/String;
   * Goal 257. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I4 Branch 2 IFNE L110 - true in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 258. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V: I13 Branch 3 IFEQ L115 - false in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V
   * Goal 259. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I8 Branch 4 IFEQ L134 - false in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Comparable;)V
   * Goal 260. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V: I27 Branch 5 IFNONNULL L139 - true in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Comparable;)V
   * Goal 261. Branch org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J: I4 Branch 7 IFEQ L228 - false in context: org.apache.commons.math.stat.Frequency:getCount(Ljava/lang/Object;)J
   * Goal 262. Branch org.apache.commons.math.stat.Frequency.addValue(I)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(I)V
   * Goal 263. Branch org.apache.commons.math.stat.Frequency.<init>()V: root-Branch in context: org.apache.commons.math.stat.Frequency:<init>()V
   * Goal 264. Branch org.apache.commons.math.stat.Frequency.getPct(J)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(J)D
   * Goal 265. Branch org.apache.commons.math.stat.Frequency.getCount(C)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCount(C)J
   * Goal 266. Branch org.apache.commons.math.stat.Frequency.getCumFreq(C)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumFreq(C)J
   * Goal 267. Branch org.apache.commons.math.stat.Frequency.getPct(I)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getPct(I)D
   * Goal 268. Branch org.apache.commons.math.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I: root-Branch in context: 
   * Goal 269. Branch org.apache.commons.math.stat.Frequency.getCumPct(C)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(C)D
   * Goal 270. Branch org.apache.commons.math.stat.Frequency.getCumPct(J)D: root-Branch in context: org.apache.commons.math.stat.Frequency:getCumPct(J)D
   * Goal 271. Branch org.apache.commons.math.stat.Frequency.getCount(I)J: root-Branch in context: org.apache.commons.math.stat.Frequency:getCount(I)J
   * Goal 272. Branch org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V: root-Branch in context: org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Integer;)V
   * Goal 273. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 274. org.apache.commons.math.stat.Frequency.getPct(I)D
   * Goal 275. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J
   * Goal 276. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 277. org.apache.commons.math.stat.Frequency.<init>()V
   * Goal 278. org.apache.commons.math.stat.Frequency.getPct(I)D
   * Goal 279. org.apache.commons.math.stat.Frequency.getCount(Ljava/lang/Object;)J
   * Goal 280. org.apache.commons.math.stat.Frequency.toString()Ljava/lang/String;
   * Goal 281. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Object;)V
   * Goal 282. org.apache.commons.math.stat.Frequency.getCount(C)J
   * Goal 283. org.apache.commons.math.stat.Frequency.getCount(C)J
   * Goal 284. org.apache.commons.math.stat.Frequency.addValue(I)V
   * Goal 285. org.apache.commons.math.stat.Frequency.addValue(I)V
   * Goal 286. org.apache.commons.math.stat.Frequency.getCumPct(J)D
   * Goal 287. org.apache.commons.math.stat.Frequency.getCumPct(J)D
   * Goal 288. addValue(Ljava/lang/Object;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 289. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V
   * Goal 290. org.apache.commons.math.stat.Frequency.getPct(J)D
   * Goal 291. org.apache.commons.math.stat.Frequency.getCumPct(C)D
   * Goal 292. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Comparable;)V
   * Goal 293. org.apache.commons.math.stat.Frequency.getPct(J)D
   * Goal 294. org.apache.commons.math.stat.Frequency.getCumPct(C)D
   * Goal 295. org.apache.commons.math.stat.Frequency.getCumFreq(C)J
   * Goal 296. org.apache.commons.math.stat.Frequency.getCumFreq(C)J
   * Goal 297. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V
   * Goal 298. org.apache.commons.math.stat.Frequency.addValue(Ljava/lang/Integer;)V
   * Goal 299. org.apache.commons.math.stat.Frequency.getCount(I)J
   * Goal 300. org.apache.commons.math.stat.Frequency.getCount(I)J
   */

  public static void main(String[] args) {
	TestClass tm = new TestClass();
	try {
		java.lang.System.out.println("Test Method: test01");
		tm.test01();
	} catch (Throwable t) {
	}
	java.lang.System.out.println("<ssssss>");
	try {
		java.lang.System.out.println("Test Method: test14");
		tm.test14();
	} catch (Throwable t) {
	}
	java.lang.System.out.println("<ssssss>");
	try {
		java.lang.System.out.println("Test Method: test20");
		tm.test20();
	} catch (Throwable t) {
	}
	java.lang.System.out.println("<ssssss>");
	try {
		java.lang.System.out.println("Test Method: test23");
		tm.test23();
	} catch (Throwable t) {
	}
}
}
