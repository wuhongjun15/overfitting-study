/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 10:24:14 GMT 2020
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BufferCapabilities;
import java.awt.Choice;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Insets;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.SystemColor;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.IllegalPathStateException;
import java.awt.geom.Line2D;
import java.awt.geom.Path2D;
import java.awt.geom.PathIterator;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.IndexColorModel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.RescaleOp;
import java.text.AttributedCharacterIterator;
import java.text.DecimalFormat;
import java.text.MessageFormat;
import java.util.ArrayDeque;
import java.util.Hashtable;
import java.util.IdentityHashMap;
import java.util.LinkedHashMap;
import java.util.TreeMap;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JList;
import javax.swing.JProgressBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.border.SoftBevelBorder;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultCaret;
import javax.swing.text.Position;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.javax.swing.MockDefaultListSelectionModel;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.ShapeUtilities;
import org.jfree.chart.util.Size2D;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShapeUtilities_ESTest extends ShapeUtilities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiamond(1.0F);
      Polygon polygon0 = new Polygon();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1215;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      polygon0.ypoints = intArray0;
      boolean boolean0 = polygon0.contains((double) 1.0F, (double) 1.0F);
      boolean boolean1 = ShapeUtilities.equal(polygon0, polygon0);
      System.setCurrentTimeMillis(0);
      boolean boolean2 = ShapeUtilities.equal((Shape) polygon0, (Shape) polygon0);
      Shape shape1 = ShapeUtilities.createRegularCross((-2020.77F), (-2020.77F));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createRegularCross(0.0F, 0.0F);
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0F, 0.0F, 0.0F, 1677.0);
      boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Float0, (Line2D) line2D_Double0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Shape shape0 = null;
      Shape shape1 = ShapeUtilities.clone((Shape) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(defaultCaret0, 4.073585882431965, 0, 0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(defaultCaret0, 0, 0, 0);
      boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) arc2D_Float0);
      Shape shape2 = ShapeUtilities.createTranslatedShape((Shape) arc2D_Double0, (double) 0, (-2.147483648E9));
      Choice choice0 = null;
      try {
        choice0 = new Choice();
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      boolean boolean0 = ShapeUtilities.equal(polygon0, (Polygon) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Float0);
      arc2D_Float0.extent = (-884.6522F);
      Shape shape0 = ShapeUtilities.createDiagonalCross(0.0F, 3961.07F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      float float0 = 6251.375F;
      int int0 = 0;
      Arc2D.Float arc2D_Float1 = new Arc2D.Float(rectangle2D0, (-1.0F), 6251.375F, 0);
      rectangle2D0.add((double) 3961.07F, (double) 0.0F);
      arc2D_Float1.width = (-1.0F);
      boolean boolean1 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Float1);
      Shape shape1 = ShapeUtilities.rotateShape(arc2D_Float1, 1602.014724227589, (-1.0F), 0.0F);
      boolean boolean2 = ShapeUtilities.contains(rectangle2D0, rectangle2D_Float0);
      GeneralPath generalPath0 = new GeneralPath(shape1);
      // Undeclared exception!
      try { 
        generalPath0.closePath();
      } catch(IllegalPathStateException e) {
         //
         // missing initial moveto in path definition
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      boolean boolean0 = ShapeUtilities.equal(polygon0, polygon0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.setFrame((-1.7976931348623157E308), (-1.7976931348623157E308), 442.265, 1883.9565838);
      polygon0.translate((-1), (-208));
      boolean boolean1 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      ellipse2D_Double0.setFrameFromCenter((double) 0, (double) 0, (double) 0, (double) 0);
      GeneralPath generalPath0 = new GeneralPath(polygon0);
      boolean boolean2 = ShapeUtilities.equal((Shape) generalPath0, (Shape) generalPath0);
      Shape shape0 = ShapeUtilities.createRegularCross(0.0F, 0.0F);
      boolean boolean3 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      polygon0.addPoint(6595, 6595);
      DefaultComboBoxModel<DecimalFormat> defaultComboBoxModel0 = new DefaultComboBoxModel<DecimalFormat>();
      JList<DecimalFormat> jList0 = new JList<DecimalFormat>(defaultComboBoxModel0);
      Line2D.Double line2D_Double0 = new Line2D.Double(0.5, 0.0, 1, 0.5);
      polygon0.addPoint(0, 0);
      line2D_Double0.y2 = 0.0;
      GeneralPath generalPath1 = (GeneralPath)ShapeUtilities.createLineRegion(line2D_Double0, 0.0F);
      boolean boolean4 = ShapeUtilities.equal(generalPath0, generalPath1);
      boolean boolean5 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      boolean boolean6 = ShapeUtilities.equal((Shape) generalPath1, (Shape) generalPath0);
      int[] intArray0 = new int[2];
      intArray0[1] = 23;
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      TreeModel treeModel0 = fixedHeightLayoutCache0.getModel();
      JTree jTree0 = new JTree((TreeModel) null);
      Rectangle rectangle0 = jTree0.getRowBounds(0);
      // Undeclared exception!
      try { 
        ShapeUtilities.intersects((Rectangle2D) null, (Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      boolean boolean0 = ShapeUtilities.equal(polygon0, polygon0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.setFrame((-1.7976931348623157E308), (-1.7976931348623157E308), 442.265, (-1.7976931348623157E308));
      boolean boolean1 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      GeneralPath generalPath0 = new GeneralPath(polygon0);
      boolean boolean2 = ShapeUtilities.equal((Shape) generalPath0, (Shape) generalPath0);
      Shape shape0 = ShapeUtilities.createRegularCross(0.0F, 0.0F);
      boolean boolean3 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      polygon0.addPoint(6595, 6595);
      DefaultComboBoxModel<DecimalFormat> defaultComboBoxModel0 = new DefaultComboBoxModel<DecimalFormat>();
      JList<DecimalFormat> jList0 = new JList<DecimalFormat>(defaultComboBoxModel0);
      Line2D.Double line2D_Double0 = new Line2D.Double(0.5, (-1.7976931348623157E308), 1, 0.5);
      polygon0.addPoint(0, 0);
      line2D_Double0.y2 = (-1.7976931348623157E308);
      Shape shape1 = ShapeUtilities.createLineRegion(line2D_Double0, 0.0F);
      boolean boolean4 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) line2D_Double0);
      boolean boolean5 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      boolean boolean6 = ShapeUtilities.equal(shape1, (Shape) generalPath0);
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      TreeModel treeModel0 = fixedHeightLayoutCache0.getModel();
      JTree jTree0 = new JTree((TreeModel) null);
      Rectangle rectangle0 = jTree0.getRowBounds(0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.y2 = (-2261.0);
      Shape shape0 = ShapeUtilities.createLineRegion(line2D_Double0, (-2058.12F));
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      ellipse2D_Float0.x = (-2058.12F);
      ellipse2D_Float0.setFrame(943.0F, (-2058.12F), (-2058.12F), (-2058.12F));
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Float0, (Ellipse2D) ellipse2D_Float0);
      boolean boolean1 = ShapeUtilities.equal((Shape) line2D_Double0, shape0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(Double.NEGATIVE_INFINITY, (-1.0), (-1.0), Double.NEGATIVE_INFINITY);
      line2D_Double0.x1 = 160.94000244140625;
      Shape shape0 = ShapeUtilities.createLineRegion(line2D_Double0, 0.0F);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) shape0;
      objectArray0[1] = (Object) shape0;
      objectArray0[2] = (Object) shape0;
      objectArray0[3] = (Object) line2D_Double0;
      JTree jTree0 = new JTree(objectArray0);
      Rectangle rectangle0 = jTree0.getRowBounds(4162);
      Arc2D.Double arc2D_Double0 = null;
      try {
        arc2D_Double0 = new Arc2D.Double((Rectangle2D) null, (-1.0), 4162, (-486));
      } catch(IllegalArgumentException e) {
         //
         // invalid type for Arc: -486
         //
         verifyException("java.awt.geom.Arc2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) null);
      int int0 = 1544;
      GeneralPath generalPath0 = null;
      try {
        generalPath0 = new GeneralPath(1544, 1544);
      } catch(IllegalArgumentException e) {
         //
         // winding rule must be WIND_EVEN_ODD or WIND_NON_ZERO
         //
         verifyException("java.awt.geom.Path2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      float float0 = 0.0F;
      Shape shape0 = ShapeUtilities.createDiagonalCross(80.47F, 0.0F);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(80.47F, 1148.7984678391, 80.47F, (-271.36672));
      ellipse2D_Double0.width = (double) 80.47F;
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      boolean boolean0 = ShapeUtilities.intersects(rectangle2D0, rectangle2D0);
      Shape shape1 = ShapeUtilities.clone(shape0);
      Arc2D.Float arc2D_Float0 = null;
      try {
        arc2D_Float0 = new Arc2D.Float(193);
      } catch(IllegalArgumentException e) {
         //
         // invalid type for Arc: 193
         //
         verifyException("java.awt.geom.Arc2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDownTriangle((-1.0F));
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1677.0F, (-1.0F), 1677.0F, (-1573.0F));
      Point2D point2D0 = ShapeUtilities.getPointInRectangle(657.4297968142542, 3135.0, rectangle2D_Float0);
      System.setCurrentTimeMillis(2210L);
      boolean boolean0 = ShapeUtilities.intersects(rectangle2D_Float0, rectangle2D_Float0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      boolean boolean0 = ShapeUtilities.equal(polygon0, polygon0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.setFrame((-1.7976931348623157E308), (-1.7976931348623157E308), 442.265, 1883.9565838);
      boolean boolean1 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      ellipse2D_Double0.setFrameFromCenter((double) 0, (double) 0, (double) 0, (double) 0);
      GeneralPath generalPath0 = new GeneralPath(polygon0);
      boolean boolean2 = ShapeUtilities.equal((Shape) generalPath0, (Shape) generalPath0);
      Shape shape0 = ShapeUtilities.createRegularCross(0.0F, 0.0F);
      boolean boolean3 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      DefaultComboBoxModel<DecimalFormat> defaultComboBoxModel0 = new DefaultComboBoxModel<DecimalFormat>();
      JList<DecimalFormat> jList0 = new JList<DecimalFormat>(defaultComboBoxModel0);
      Line2D.Double line2D_Double0 = new Line2D.Double(0.5, 0.0, 0, 0.5);
      polygon0.addPoint(0, 0);
      line2D_Double0.y2 = 0.0;
      Shape shape1 = ShapeUtilities.createLineRegion(line2D_Double0, 0.0F);
      boolean boolean4 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) line2D_Double0);
      boolean boolean5 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      boolean boolean6 = ShapeUtilities.equal(shape1, (Shape) generalPath0);
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      Polygon polygon1 = null;
      try {
        polygon1 = new Polygon(polygon0.xpoints, intArray0, 1015);
      } catch(IndexOutOfBoundsException e) {
         //
         // npoints > xpoints.length || npoints > ypoints.length
         //
         verifyException("java.awt.Polygon", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Float0);
      arc2D_Float0.extent = (-884.6522F);
      Shape shape0 = ShapeUtilities.createDiagonalCross(0.0F, 3961.07F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      float float0 = 6251.375F;
      Arc2D.Float arc2D_Float1 = new Arc2D.Float(rectangle2D0, 0.0F, 6251.375F, 0);
      arc2D_Float1.width = 0.0F;
      boolean boolean1 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Float1);
      double double0 = 1602.014724227589;
      float float1 = (-1.0F);
      Shape shape1 = ShapeUtilities.rotateShape(arc2D_Float1, 1602.014724227589, (-1.0F), 0.0F);
      boolean boolean2 = ShapeUtilities.contains(rectangle2D0, rectangle2D_Float0);
      GeneralPath generalPath0 = new GeneralPath(shape1);
      generalPath0.closePath();
      boolean boolean3 = ShapeUtilities.equal(generalPath0, generalPath0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 0, 0);
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 0
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0, 0.0, 1.5, 2.0);
      Object object0 = line2D_Double0.clone();
      Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 0.0F, 1.0F, 0.0F);
      line2D_Double0.setLine((Line2D) line2D_Float0);
      Shape shape0 = ShapeUtilities.createLineRegion(line2D_Double0, 1252.1006F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-2663.5776F), 0.0F, (-2068.88F), (-2663.5776F));
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Float0, (Ellipse2D) ellipse2D_Float0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-2663.5776F), (-2068.88F), (-1967.037817), (-2663.5776F));
      rectangle2D_Double0.y = (double) 0.0F;
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0, 0.0F, (-1296.3), (-2600.06342));
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = rectangle2D_Double0.createIntersection(rectangle2D0);
      boolean boolean1 = ellipse2D_Float0.contains(rectangle2D1);
      ellipse2D_Float0.height = (-967.598F);
      Shape shape0 = ShapeUtilities.createTranslatedShape((Shape) ellipse2D_Float0, (double) 0.0F, (-349.616859));
      float float0 = 562.0F;
      Shape shape1 = ShapeUtilities.createDiagonalCross((-2663.5776F), 562.0F);
      boolean boolean2 = ShapeUtilities.intersects(rectangle2D_Double0, rectangle2D1);
      boolean boolean3 = ShapeUtilities.equal(shape1, (Shape) rectangle2D_Double0);
      Arc2D.Double arc2D_Double0 = null;
      try {
        arc2D_Double0 = new Arc2D.Double(2344);
      } catch(IllegalArgumentException e) {
         //
         // invalid type for Arc: 2344
         //
         verifyException("java.awt.geom.Arc2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Line2D.Double line2D_Double1 = new Line2D.Double();
      line2D_Double0.setLine((Line2D) line2D_Double1);
      boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) line2D_Double0);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      boolean boolean1 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Float0, (Ellipse2D) null);
      SystemColor systemColor0 = SystemColor.scrollbar;
      Color color0 = Color.getColor("org.jfree.chart.util.ShapeUtilities", 0);
      SoftBevelBorder softBevelBorder0 = new SoftBevelBorder(1, systemColor0, systemColor0, systemColor0, color0);
      JProgressBar jProgressBar0 = new JProgressBar();
      Rectangle rectangle0 = softBevelBorder0.getInteriorRectangle((Component) jProgressBar0, 0, 1, (-2971), 1);
      boolean boolean2 = ShapeUtilities.intersects(rectangle0, rectangle0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      boolean boolean0 = polygon0.contains(6, 6);
      boolean boolean1 = ShapeUtilities.equal(polygon0, polygon0);
      boolean boolean2 = ShapeUtilities.equal((Line2D) null, (Line2D) null);
      GeneralPath generalPath0 = new GeneralPath(0, 0);
      boolean boolean3 = ShapeUtilities.equal(generalPath0, generalPath0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createUpTriangle(0.0F);
      GeneralPath generalPath0 = new GeneralPath(shape0);
      generalPath0.closePath();
      generalPath0.quadTo(2.0, (double) 0.0F, 2.0, 1.5);
      boolean boolean0 = ShapeUtilities.equal(generalPath0, generalPath0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-3175);
      intArray0[1] = 2287;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-1210);
      intArray0[5] = 0;
      intArray0[6] = 1535;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 0);
      boolean boolean1 = ShapeUtilities.equal(polygon0, polygon0);
      boolean boolean2 = ShapeUtilities.equal(shape0, (Shape) polygon0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Shape shape0 = null;
      double double0 = 2.0;
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape((Shape) null, 2.0, 2.0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'shape' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      float float0 = (-3381.4194F);
      float float1 = (-3124.077F);
      Shape shape0 = ShapeUtilities.createDiagonalCross((-3381.4194F), (-3124.077F));
      GeneralPath generalPath0 = null;
      boolean boolean0 = ShapeUtilities.equal((GeneralPath) null, (GeneralPath) null);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      double double0 = 0.0;
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape((Shape) null, rectangleAnchor0, 0.0, (double) (-3124.077F));
      } catch(IllegalArgumentException e) {
         //
         // Null 'shape' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.width = (-1.0);
      Object object0 = ellipse2D_Double0.clone();
      ellipse2D_Double0.y = 0.0;
      Rectangle rectangle0 = new Rectangle(1, (-2780), 1, (-1740));
      rectangle0.add((-1.0), 246.08666412);
      ellipse2D_Double0.setFrame((Rectangle2D) rectangle0);
      ellipse2D_Double0.y = 0.0;
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      Shape shape0 = ShapeUtilities.createDiamond(1235.4115F);
      ellipse2D_Double0.y = (-768.043145077473);
      Shape shape1 = ShapeUtilities.rotateShape(ellipse2D_Double0, 3117.0990665184017, 1235.4115F, 0.0F);
      boolean boolean1 = ShapeUtilities.equal((Shape) ellipse2D_Double0, (Shape) ellipse2D_Double0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShapeUtilities.intersects((Rectangle2D) null, (Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      float float0 = (-1478.3512F);
      Shape shape0 = ShapeUtilities.createRegularCross((-1.0F), (-1478.3512F));
      double double0 = 1590.025;
      float float1 = 2926.809F;
      float float2 = 0.0F;
      // Undeclared exception!
      try { 
        ShapeUtilities.drawRotatedShape((Graphics2D) null, shape0, 1590.025, 2926.809F, 0.0F);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      line2D_Double0.x1 = 2262.04845816;
      Line2D.Float line2D_Float0 = new Line2D.Float();
      line2D_Float0.y1 = (-913.963F);
      boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) line2D_Float0);
      GeneralPath generalPath0 = new GeneralPath(0);
      boolean boolean1 = ShapeUtilities.equal(generalPath0, (GeneralPath) null);
      Polygon polygon0 = new Polygon();
      boolean boolean2 = ShapeUtilities.equal(polygon0, polygon0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Line2D.Double line2D_Double1 = new Line2D.Double(0.0, 0.5, 0.0, 0.0);
      boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) line2D_Double1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GeneralPath generalPath0 = new GeneralPath();
      boolean boolean0 = ShapeUtilities.equal((GeneralPath) null, generalPath0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Shape shape0 = ShapeUtilities.clone((Shape) null);
      Shape shape1 = ShapeUtilities.createDiagonalCross((-2698.811F), 1135.7799F);
      Shape shape2 = ShapeUtilities.rotateShape((Shape) null, 1135.7799F, 2041.2441F, 0.0F);
      Shape shape3 = ShapeUtilities.rotateShape((Shape) null, (-2698.811F), 1.0F, 0.0F);
      Shape shape4 = ShapeUtilities.createDiamond(0.0F);
      Shape shape5 = ShapeUtilities.createDiagonalCross((-790.263F), (-2470.0F));
      int[] intArray0 = new int[5];
      intArray0[0] = (-1099);
      intArray0[1] = (-1);
      intArray0[2] = 1842;
      intArray0[3] = 1795;
      intArray0[4] = (-799);
      Polygon polygon0 = null;
      try {
        polygon0 = new Polygon(intArray0, intArray0, (-315));
      } catch(NegativeArraySizeException e) {
         //
         // npoints < 0
         //
         verifyException("java.awt.Polygon", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Float0);
      arc2D_Float0.extent = (-884.6522F);
      Shape shape0 = ShapeUtilities.createDiagonalCross(0.0F, 3961.07F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      float float0 = 6251.375F;
      Arc2D.Float arc2D_Float1 = new Arc2D.Float(rectangle2D0, (-1.0F), 6251.375F, 0);
      arc2D_Float1.width = (-1.0F);
      boolean boolean1 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Float1);
      Shape shape1 = ShapeUtilities.rotateShape(arc2D_Float1, 1602.014724227589, (-1.0F), 0.0F);
      boolean boolean2 = ShapeUtilities.contains(rectangle2D0, rectangle2D_Float0);
      GeneralPath generalPath0 = new GeneralPath(shape1);
      // Undeclared exception!
      try { 
        generalPath0.closePath();
      } catch(IllegalPathStateException e) {
         //
         // missing initial moveto in path definition
         //
         verifyException("java.awt.geom.Path2D$Float", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.width = 1.7976931348623157E308;
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      Shape shape0 = ShapeUtilities.clone(rectangle2D0);
      Point2D point2D0 = ShapeUtilities.getPointInRectangle(160.08, 160.08, rectangle2D0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float();
      Object object0 = arc2D_Float0.clone();
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(0.0, 0.0F, 0.0, 0.0F, 1.7976931348623157E308, 0.0, 0);
      Object object1 = arc2D_Double0.clone();
      boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Double0);
      int[] intArray0 = new int[0];
      Polygon polygon0 = null;
      try {
        polygon0 = new Polygon(intArray0, intArray0, 1);
      } catch(IndexOutOfBoundsException e) {
         //
         // npoints > xpoints.length || npoints > ypoints.length
         //
         verifyException("java.awt.Polygon", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Polygon) null, (Polygon) null);
      Vector<BufferCapabilities> vector0 = new Vector<BufferCapabilities>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 74);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      MockDefaultListSelectionModel mockDefaultListSelectionModel0 = new MockDefaultListSelectionModel();
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0, mockDefaultListSelectionModel0);
      JTableHeader jTableHeader0 = jTable0.getTableHeader();
      JTable jTable1 = jTableHeader0.getTable();
      Rectangle rectangle0 = jTable1.getBounds();
      boolean boolean1 = ShapeUtilities.intersects(rectangle0, rectangle0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      line2D_Float0.setLine(2.0F, 2.0F, (-1212.7F), 0.0F);
      boolean boolean0 = ShapeUtilities.equal((Line2D) line2D_Float0, (Line2D) line2D_Float0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      Shape shape0 = ShapeUtilities.createTranslatedShape((Shape) line2D_Float0, rectangleAnchor0, (-2779.284130597029), 1.0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      line2D_Float0.x2 = 2009.0967F;
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      boolean boolean0 = ShapeUtilities.equal((Shape) rectangle2D0, (Shape) line2D_Float0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      Size2D size2D0 = new Size2D(0.0, 0.0);
      Rectangle2D rectangle2D1 = RectangleAnchor.createRectangle(size2D0, 0.0, 2.0, rectangleAnchor0);
      Shape shape0 = ShapeUtilities.createTranslatedShape((Shape) line2D_Float0, rectangleAnchor0, 0.0, (double) 0.0F);
      Shape shape1 = ShapeUtilities.clone(line2D_Float0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Position.Bias position_Bias0 = defaultCaret0.getDotBias();
      defaultCaret0.setBounds(6, (-94), 6, 1546);
      int int0 = defaultCaret0.getDot();
      Point2D point2D0 = ShapeUtilities.getPointInRectangle(1.5, 1.0, defaultCaret0);
      Shape shape0 = ShapeUtilities.createDownTriangle(1003.03F);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      boolean boolean0 = ellipse2D_Double0.contains(point2D0);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-94), 1546, (-94), 0.0F);
      boolean boolean1 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Float0);
      boolean boolean2 = ShapeUtilities.contains(defaultCaret0, defaultCaret0);
      boolean boolean3 = ShapeUtilities.intersects(defaultCaret0, defaultCaret0);
      Ellipse2D.Double ellipse2D_Double1 = new Ellipse2D.Double((-94.0F), (-94.0F), 1546, 1.0);
      boolean boolean4 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double1, (Ellipse2D) ellipse2D_Double1);
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape((Shape) ellipse2D_Double0, (RectangleAnchor) null, (-1909.0388983250523), 2.0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'anchor' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle rectangle0 = ellipse2D_Double0.getBounds();
      boolean boolean0 = ShapeUtilities.contains(rectangle0, rectangle0);
      rectangle0.add(1, 0);
      boolean boolean1 = rectangle0.contains(0.0, 0.0, 0.0, 0.5);
      Line2D.Double line2D_Double0 = new Line2D.Double(3350.9457301964, 0.0, 0.0, 1.0);
      line2D_Double0.x1 = (double) 0;
      ellipse2D_Double0.setFrameFromDiagonal((double) 0, 0.0, 2081.7098555529146, 0.5);
      boolean boolean2 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) line2D_Double0);
      Shape shape0 = ShapeUtilities.createDiagonalCross(0, 0.0F);
      Point2D point2D0 = ShapeUtilities.getPointInRectangle(0, 2.0, rectangle0);
      boolean boolean3 = ShapeUtilities.contains(rectangle0, rectangle0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      IdentityHashMap<RenderingHints, AttributedCharacterIterator.Attribute> identityHashMap0 = new IdentityHashMap<RenderingHints, AttributedCharacterIterator.Attribute>();
      Hashtable<RenderingHints, AttributedCharacterIterator.Attribute> hashtable0 = new Hashtable<RenderingHints, AttributedCharacterIterator.Attribute>(identityHashMap0);
      JTree jTree0 = new JTree(hashtable0);
      TreePath treePath0 = jTree0.getEditingPath();
      Rectangle rectangle0 = metalTreeUI0.getPathBounds(jTree0, (TreePath) null);
      // Undeclared exception!
      try { 
        ShapeUtilities.contains((Rectangle2D) null, (Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      float float0 = (-2925.5686F);
      Shape shape0 = ShapeUtilities.createUpTriangle((-2925.5686F));
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape(shape0, (RectangleAnchor) null, 2.0, (double) (-2925.5686F));
      } catch(IllegalArgumentException e) {
         //
         // Null 'anchor' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 0.0F, 1.0F, 0.0F);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Shape shape0 = ShapeUtilities.createTranslatedShape((Shape) rectangle2D0, rectangleAnchor0, (-2.147483648E9), 0.0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      Point point0 = new Point();
      arc2D_Double0.setArcByTangent(point0, point0, point0, (-2503.6426));
      boolean boolean0 = ShapeUtilities.equal((Shape) arc2D_Double0, (Shape) arc2D_Double0);
      Shape shape0 = ShapeUtilities.createDownTriangle((-1070.5684F));
      Shape shape1 = ShapeUtilities.createRegularCross((-1243.3484F), 200.2F);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GeneralPath generalPath0 = null;
      boolean boolean0 = ShapeUtilities.equal((GeneralPath) null, (GeneralPath) null);
      int int0 = 0;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 0, 12);
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (0) must be > 0
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GeneralPath generalPath0 = new GeneralPath(0);
      boolean boolean0 = ShapeUtilities.equal(generalPath0, generalPath0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Line2D line2D0 = null;
      float float0 = (-1168.0F);
      // Undeclared exception!
      try { 
        ShapeUtilities.createLineRegion((Line2D) null, (-1168.0F));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        ShapeUtilities.getPointInRectangle(0.0, 0.0, (Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(1.0, 1.0, 1.0, 1.0);
      Shape shape0 = ShapeUtilities.createLineRegion(line2D_Double0, 0.0F);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Arc2D) null, (Arc2D) null);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiagonalCross((-2651.73F), (-1.0F));
      Shape shape1 = ShapeUtilities.createTranslatedShape(shape0, (double) (-1.0F), (double) (-1.0F));
      Shape shape2 = ShapeUtilities.createDiagonalCross((-2651.73F), 0.0F);
      // Undeclared exception!
      try { 
        ShapeUtilities.getPointInRectangle(0.0F, (-735.332455), (Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape((Shape) null, (-682.1650337810711), (-682.1650337810711));
      } catch(IllegalArgumentException e) {
         //
         // Null 'shape' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createRegularCross((-1415.0F), (-815.535F));
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createRegularCross(2886.473F, 889.3082F);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Hashtable<String, Insets> hashtable0 = new Hashtable<String, Insets>();
      JList<ArrayDeque<MessageFormat>> jList0 = new JList<ArrayDeque<MessageFormat>>();
      int int0 = (-1621);
      int int1 = (-3110);
      String string0 = null;
      JScrollPane jScrollPane0 = null;
      try {
        jScrollPane0 = new JScrollPane(jList0, (-1621), (-3110));
      } catch(IllegalArgumentException e) {
         //
         // invalid verticalScrollBarPolicy
         //
         verifyException("javax.swing.JScrollPane", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0, 0.0, 1.5, 2.0);
      Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 0.0F, 0.0F, 0.0F);
      line2D_Double0.setLine((Line2D) line2D_Float0);
      Shape shape0 = ShapeUtilities.createLineRegion(line2D_Double0, 1252.1006F);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      GeneralPath generalPath0 = new GeneralPath();
      GeneralPath generalPath1 = new GeneralPath(generalPath0);
      generalPath0.moveTo(3445.6465F, 1050.18F);
      boolean boolean0 = Path2D.intersects((PathIterator) null, 0.0, 0.0, (-1.0), 508.0);
      Rectangle rectangle0 = generalPath1.getBounds();
      boolean boolean1 = ShapeUtilities.equal(generalPath0, generalPath1);
      boolean boolean2 = ShapeUtilities.contains(rectangle0, rectangle0);
      boolean boolean3 = ShapeUtilities.equal((Shape) generalPath0, (Shape) generalPath0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((-1.0), (-1.0), (-1.0), (-1.0), 1.5, 1.5, 0);
      boolean boolean4 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) arc2D_Double0);
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 0;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, (RenderingHints) null);
      LookupOp lookupOp0 = null;
      try {
        lookupOp0 = new LookupOp((LookupTable) null, (RenderingHints) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.LookupOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      double double0 = (-92.695160309899);
      double double1 = 1591.0807908;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-92.695160309899), 1591.0807908, 1591.0807908, 1591.0807908);
      rectangle2D_Double0.y = 1591.0807908;
      double double2 = 347.33145726352166;
      rectangle2D_Double0.setFrameFromDiagonal(1.0, (-92.695160309899), 1.0, 1.0);
      double double3 = 2.0;
      JList<Object> jList0 = null;
      try {
        jList0 = new JList<Object>((ListModel<Object>) null);
      } catch(IllegalArgumentException e) {
         //
         // dataModel must be non null
         //
         verifyException("javax.swing.JList", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiagonalCross((-1.0F), (-189.07187F));
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createUpTriangle(0.0F);
      Shape shape1 = ShapeUtilities.createRegularCross(0.0F, 0.0F);
      Shape shape2 = ShapeUtilities.createUpTriangle(0.0F);
      GeneralPath generalPath0 = new GeneralPath();
      Shape shape3 = ShapeUtilities.createTranslatedShape((Shape) generalPath0, 3248.9107, 522.843532784);
      Shape shape4 = ShapeUtilities.createRegularCross(0.0F, 0.0F);
      boolean boolean0 = ShapeUtilities.equal(shape1, shape3);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Point2D point2D0 = RectangleAnchor.coordinates((Rectangle2D) null, (RectangleAnchor) null);
      Shape shape5 = ShapeUtilities.createTranslatedShape(shape0, rectangleAnchor0, (double) 0.0F, (-1.0));
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(timeTableXYDataset0);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      ListSelectionModel listSelectionModel0 = defaultTableColumnModel0.getSelectionModel();
      JTable jTable0 = new JTable(xYDatasetTableModel0, defaultTableColumnModel0, listSelectionModel0);
      Rectangle rectangle0 = jTable0.getBounds();
      boolean boolean1 = ShapeUtilities.intersects(rectangle0, rectangle0);
      GeneralPath generalPath1 = new GeneralPath(0);
      boolean boolean2 = ShapeUtilities.equal(generalPath1, generalPath1);
      byte[][] byteArray0 = new byte[1][2];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)120;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte) (-25);
      byteArray1[3] = (byte)0;
      byteArray0[0] = byteArray1;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(0, byteArray0);
      TreeMap<RenderingHints.Key, Dimension> treeMap0 = new TreeMap<RenderingHints.Key, Dimension>();
      RenderingHints renderingHints0 = new RenderingHints(treeMap0);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      int[] intArray0 = new int[0];
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-2196), 1660, intArray0, 0, true, 0, (byte)0);
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0, 1808.26614896, 1808.26614896, 1808.26614896);
      Line2D.Double line2D_Double1 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double1.getBounds();
      line2D_Double1.x2 = 0.0;
      line2D_Double1.x1 = 251.12861133712;
      line2D_Double0.setLine((Line2D) line2D_Double1);
      line2D_Double0.y1 = 288.22;
      line2D_Double0.y1 = 0.0;
      line2D_Double0.x2 = 0.0;
      Shape shape0 = ShapeUtilities.createLineRegion(line2D_Double0, 0.0F);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double();
      arc2D_Double0.setArc(0.0, 0.5, (-1.7976931348623157E308), 0.0, (double) 0.0F, (double) 0, 0);
      arc2D_Double0.width = 1.0;
      boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) arc2D_Double0);
      boolean boolean1 = ShapeUtilities.equal(shape0, shape0);
      Shape shape1 = ShapeUtilities.clone(line2D_Double0);
      Shape shape2 = ShapeUtilities.clone(arc2D_Double0);
      LinkedHashMap<RenderingHints.Key, Rectangle> linkedHashMap0 = new LinkedHashMap<RenderingHints.Key, Rectangle>();
      RenderingHints renderingHints0 = new RenderingHints(linkedHashMap0);
      LookupOp lookupOp0 = null;
      try {
        lookupOp0 = new LookupOp((LookupTable) null, renderingHints0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.LookupOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiamond(424.5453F);
      Shape shape1 = ShapeUtilities.clone(shape0);
      Polygon polygon0 = new Polygon();
      boolean boolean0 = ShapeUtilities.equal(polygon0, polygon0);
      boolean boolean1 = polygon0.intersects(1378.94091171532, (double) 424.5453F, 2857.41, (-1154.9799149));
      Object[][] objectArray0 = new Object[4][3];
      Object[] objectArray1 = new Object[0];
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[9];
      objectArray2[0] = (Object) shape1;
      objectArray2[1] = (Object) shape1;
      objectArray2[2] = (Object) shape0;
      objectArray2[3] = (Object) shape1;
      objectArray2[4] = (Object) shape0;
      objectArray2[5] = (Object) polygon0;
      objectArray2[6] = (Object) shape1;
      objectArray2[7] = (Object) shape0;
      objectArray2[8] = (Object) polygon0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[7];
      objectArray3[0] = (Object) polygon0;
      Object object0 = new Object();
      objectArray3[1] = object0;
      objectArray3[2] = (Object) polygon0;
      objectArray3[3] = (Object) shape0;
      objectArray3[4] = (Object) shape0;
      objectArray3[5] = (Object) shape0;
      objectArray3[6] = (Object) polygon0;
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[8];
      objectArray4[0] = (Object) shape0;
      objectArray4[1] = (Object) shape0;
      Object object1 = new Object();
      objectArray4[2] = object1;
      objectArray4[3] = (Object) polygon0;
      objectArray4[4] = (Object) shape1;
      objectArray4[5] = object0;
      objectArray4[6] = (Object) shape1;
      objectArray4[7] = (Object) polygon0;
      objectArray0[3] = objectArray4;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray4);
      JTable jTable0 = new JTable(defaultTableModel0);
      Rectangle rectangle0 = jTable0.getVisibleRect();
      boolean boolean2 = polygon0.intersects((Rectangle2D) rectangle0);
      boolean boolean3 = polygon0.contains(3121, 0);
      Shape shape2 = ShapeUtilities.createDiagonalCross(0, 1.0F);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(773.0245F, 773.0245F, 0.0F, 3846.0F);
      rectangle2D_Float0.setFrame(0.0, 1.7976931348623157E308, (double) 0.0F, 442.77173);
      rectangle2D_Float0.setFrameFromCenter(0.0, 1.7976931348623157E308, (double) 0.0F, 0.0);
      Point2D point2D0 = ShapeUtilities.getPointInRectangle(0.0, 442.77173, rectangle2D_Float0);
      Shape shape0 = ShapeUtilities.rotateShape(rectangle2D_Float0, 0.0F, 3340.28F, 0.0F);
      Shape shape1 = ShapeUtilities.createDownTriangle(0.0F);
  }
}
