/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 06:56:21 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.color.ICC_Profile;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.Kernel;
import java.awt.image.RescaleOp;
import java.net.URL;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.SimpleTimeZone;
import javax.swing.ImageIcon;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.AreaRendererEndType;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.text.TextAnchor;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.GradientPaintTransformer;
import org.jfree.chart.util.Layer;
import org.jfree.data.KeyToGroupMap;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Month;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesDataItem;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = waterfallBarRenderer0.getSeriesToolTipGenerator(3581);
      boolean boolean0 = false;
      waterfallBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      waterfallBarRenderer0.setMinimumBarLength(689.08);
      Paint paint0 = null;
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setPositiveBarPaint((Paint) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument
         //
         verifyException("org.jfree.chart.renderer.category.WaterfallBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = 0;
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      Object object0 = intervalCategoryToolTipGenerator0.clone();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      categoryCrosshairState0.updateCrosshairY((double) minMaxCategoryRenderer0.ZERO);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.updateCrosshairValues(categoryCrosshairState0, "({0}, {1}) = {2}", "({0}, {1}) = {3} - {4}", 0, 0, 0, (-3306.463571776), plotOrientation0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      ItemLabelPosition itemLabelPosition0 = stackedBarRenderer0.getPositiveItemLabelPosition((-1), 0, false);
      stackedBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition0);
      boolean boolean0 = stackedBarRenderer0.getShadowsVisible();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      stackedBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = 0;
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("org.jfree.data.statistics.DefaultStatisticalCategoryDataset", 8.0, 0);
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      categoryTextAnnotation0.removeChangeListener(xYLine3DRenderer0);
      TextAnchor textAnchor0 = XYTextAnnotation.DEFAULT_TEXT_ANCHOR;
      categoryTextAnnotation0.setRotationAnchor(textAnchor0);
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      Stroke stroke0 = lineRenderer3D0.lookupSeriesStroke(0);
      int int1 = lineRenderer3D0.hashCode();
      DateFormat dateFormat0 = MockDateFormat.getDateInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("1QI", dateFormat0);
      boolean boolean0 = standardCategoryItemLabelGenerator0.equals(textAnchor0);
      Object object0 = standardCategoryItemLabelGenerator0.clone();
      lineRenderer3D0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      int int2 = (-1891);
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesLinesVisible((-1891), true);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double double0 = boxAndWhiskerRenderer0.getItemMargin();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = boxAndWhiskerRenderer0.getLegendItemToolTipGenerator();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", "", "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(standardCategoryURLGenerator0, true);
      JFreeChart jFreeChart0 = rendererChangeEvent0.getChart();
      boolean boolean0 = true;
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true, false, true, true, true);
      chartRenderingInfo0.setRenderingSource(chartPanel0);
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getPlotArea();
      Number[][] numberArray0 = new Number[0][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      int int0 = (-878);
      int int1 = 829;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultIntervalCategoryDataset0, (-878), 829, true);
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int0 = 0;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Font font0 = defaultPolarItemRenderer0.getBaseItemLabelFont();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-2485.7), (double) 0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      int int1 = font0.getMissingGlyphCode();
      Object object0 = layeredBarRenderer0.clone();
      FontRenderContext fontRenderContext0 = null;
      try {
        fontRenderContext0 = new FontRenderContext(affineTransform0, levelRenderer0, object0);
      } catch(IllegalArgumentException e) {
         //
         // AA hint:org.jfree.chart.renderer.category.LevelRenderer@62df96cc
         //
         verifyException("java.awt.font.FontRenderContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle rectangle0 = new Rectangle((-5150), (-5150), (-1780), 3264);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity((EntityCollection) null, rectangle0, jDBCCategoryDataset0, 92, 3264, false, (-5150), 2221.5609);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 92, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-795.7), (-795.7));
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(8.0, 8.0, 12.0, (double) barRenderer3D0.ZERO, barRenderer3D0.DEFAULT_WALL_PAINT, barRenderer3D0.DEFAULT_STROKE);
      categoryLineAnnotation0.setNotify(false);
      boolean boolean0 = barRenderer3D0.removeAnnotation(categoryLineAnnotation0);
      BarPainter barPainter0 = barRenderer3D0.getBarPainter();
      boolean boolean1 = BarRenderer.getDefaultShadowsVisible();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setItemMargin(5000000.0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = boxAndWhiskerRenderer0.getBaseItemLabelGenerator();
      CategoryItemLabelGenerator categoryItemLabelGenerator1 = boxAndWhiskerRenderer0.getItemLabelGenerator(0, 0, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      boolean boolean2 = minMaxCategoryRenderer0.isDrawLines();
      Graphics2D graphics2D0 = null;
      Rectangle2D rectangle2D0 = null;
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float();
      boolean boolean3 = plotRenderingInfo0.equals((Object) null);
      CategoryPlot categoryPlot0 = combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D_Float0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      categoryAxis0.setLabelAngle((double) barRenderer3D0.ZERO);
      combinedDomainCategoryPlot0.setNoDataMessage("ZgE<[6!^");
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(170);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 170, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0, 2.0E7);
      int int0 = (-173);
      boolean boolean0 = false;
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer3D0.getItemLabelGenerator((-173), (-173), false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = null;
      try {
        categoryPointerAnnotation0 = new CategoryPointerAnnotation((String) null, 12.0, 0.0, 0.2);
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = ganttRenderer0.getLegendItemLabelGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setXOffset((double) ganttRenderer0.ZERO);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(4.0, 0.0);
      int int0 = 2043;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(barRenderer3D0.DEFAULT_OUTLINE_PAINT, barRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, barRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, barRenderer3D0.DEFAULT_PAINT);
      CategoryToolTipGenerator categoryToolTipGenerator0 = waterfallBarRenderer0.getSeriesToolTipGenerator(2043);
      barRenderer3D0.setSeriesToolTipGenerator(2043, (CategoryToolTipGenerator) null, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Stroke stroke0 = minMaxCategoryRenderer0.getGroupStroke();
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) 2043;
      floatArray0[1] = (float) 2043;
      floatArray0[2] = (float) 2043;
      floatArray0[3] = (float) 2043;
      floatArray0[4] = (float) 2043;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(2043, 2043, floatArray0);
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 5 and should be 4173849
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      boolean boolean0 = false;
      barRenderer3D0.setAutoPopulateSeriesShape(false);
      double double0 = barRenderer3D0.getYOffset();
      int int0 = barRenderer3D0.hashCode();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      lineAndShapeRenderer0.setSeriesToolTipGenerator(365, (CategoryToolTipGenerator) null, true);
      double double1 = lineAndShapeRenderer0.getItemMargin();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double double2 = barRenderer3D0.getItemMargin();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      CategoryDataset categoryDataset0 = null;
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.addEntity(entityCollection0, boxAndWhiskerRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, 0, 0, false);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = categoryStepRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 10);
      AffineTransform affineTransform0 = new AffineTransform();
      int int0 = 34;
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 34);
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: 34
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.removeAnnotations();
      double double0 = 21.8;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = 825;
      int int1 = 1999;
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 825, 1999);
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, slidingGanttCategoryDataset0);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      String string0 = "Vdm";
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, 3, waterfallBarRenderer0.ZERO);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("Vdm", waterfallBarRenderer0.DEFAULT_VALUE_LABEL_FONT, waferMapPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Point point0 = new Point(0, (-435));
      Rectangle rectangle0 = new Rectangle(point0);
      double[][] doubleArray0 = new double[8][5];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 3;
      doubleArray1[1] = (double) 0.5F;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = 3.0;
      doubleArray1[4] = 0.2;
      doubleArray1[5] = 3.0;
      doubleArray1[6] = (double) (-435);
      doubleArray1[7] = (double) (-435);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) levelRenderer0.ZERO;
      doubleArray2[1] = (double) 1.0F;
      doubleArray2[2] = (double) waterfallBarRenderer0.ZERO;
      doubleArray2[3] = 0.2;
      doubleArray2[4] = (double) 1.0F;
      doubleArray2[5] = (-2027.2238764);
      doubleArray2[6] = (double) 0;
      doubleArray2[7] = (double) (-435);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = 3.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = (double) 1.0F;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[6];
      doubleArray6[0] = (double) 0;
      double double0 = (-1.0);
      doubleArray6[1] = (-1.0);
      doubleArray6[2] = (double) 1.0F;
      doubleArray6[3] = (double) 3;
      doubleArray6[4] = (double) 0;
      doubleArray6[5] = (double) (-435);
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[2];
      doubleArray7[0] = 2259.8843701887;
      doubleArray7[1] = (double) 0;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[6];
      doubleArray8[0] = (double) (-435);
      doubleArray8[1] = (double) 3;
      doubleArray8[2] = (double) 0;
      doubleArray8[3] = 0.1;
      doubleArray8[4] = 1072.3509695340756;
      doubleArray8[5] = (double) (-435);
      doubleArray0[7] = doubleArray8;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, rectangle0, (CategoryPlot) null, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      boolean boolean0 = stackedBarRenderer3D0.equals(intervalCategoryItemLabelGenerator0);
      String string0 = "Y<}=ci}@PZ[\"^r";
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("{2}", "{2}", "Y<}=ci}@PZ[\"^r");
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      stackedBarRenderer3D0.removeAnnotations();
      double double0 = stackedBarRenderer3D0.getMinimumBarLength();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      lineAndShapeRenderer0.setBaseShapesVisible(false);
      lineAndShapeRenderer0.setDrawOutlines(false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      URL uRL0 = MockURL.getFileExample();
      ImageIcon imageIcon0 = null;
      try {
        imageIcon0 = new ImageIcon(uRL0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      boolean boolean0 = true;
      lineAndShapeRenderer0.setUseFillPaint(true);
      lineAndShapeRenderer0.setUseFillPaint(true);
      int int0 = (-2193);
      CategoryToolTipGenerator categoryToolTipGenerator0 = lineAndShapeRenderer0.getBaseToolTipGenerator();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesToolTipGenerator((-2193), (CategoryToolTipGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      Font font0 = extendedCategoryAxis0.getLabelFont();
      stackedAreaRenderer0.setBaseLegendTextFont(font0);
      stackedAreaRenderer0.setSeriesToolTipGenerator(65, (CategoryToolTipGenerator) null);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      Boolean boolean0 = statisticalLineAndShapeRenderer0.getSeriesShapesFilled(65);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = lineRenderer3D0.findRangeBounds(defaultMultiValueCategoryDataset0);
      lineRenderer3D0.setYOffset(0.0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'paint' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultMultiValueCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      int int0 = 875;
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1.0F;
      floatArray0[1] = 1.0F;
      floatArray0[2] = (-1759.8651F);
      floatArray0[3] = 2.0F;
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) (-497);
      floatArray0[6] = 1.0F;
      floatArray0[7] = (float) 0;
      floatArray0[8] = (float) 0;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(200, (-497), floatArray0);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Stroke stroke0 = statisticalBarRenderer0.getErrorIndicatorStroke();
      statisticalBarRenderer0.setErrorIndicatorStroke(stroke0);
      statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
      statisticalBarRenderer0.setBase(1030.0);
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) null, true);
      double[] doubleArray0 = statisticalBarRenderer0.calculateBarL0L1(0.0, 0.0, (-630.16));
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-1284.7), 370.2018);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      spiderWebPlot0.setNotify(false);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      barRenderer3D0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = 666.651913397;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(666.651913397, 0.0);
      int int0 = 1173;
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getSeriesURLGenerator(1173);
      boolean boolean0 = true;
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      int int1 = (-460);
      // Undeclared exception!
      try { 
        defaultKeyedValues2DDataset0.getValue(1173, (-460));
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1173, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-393.6289654911), (-393.6289654911));
      stackedBarRenderer3D0.setDataBoundsIncludesVisibleSeriesOnly(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getURLGenerator(867, 867, true);
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null);
      GradientPaintTransformer gradientPaintTransformer0 = stackedBarRenderer3D0.getGradientPaintTransformer();
      stackedBarRenderer3D0.setGradientPaintTransformer(gradientPaintTransformer0);
      Paint paint0 = stackedBarRenderer3D0.getWallPaint();
      DrawingSupplier drawingSupplier0 = stackedBarRenderer3D0.getDrawingSupplier();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double double0 = lineRenderer3D0.getXOffset();
      Paint paint1 = stackedBarRenderer3D0.getWallPaint();
      Shape shape0 = lineRenderer3D0.lookupSeriesShape(4860);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin(613.0);
      double double1 = lineRenderer3D0.getItemMargin();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      int int0 = (-1548);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      // Undeclared exception!
      try { 
        stackedBarRenderer0.setSeriesItemLabelGenerator((-1548), categoryItemLabelGenerator0, false);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = (-1007);
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("S-", numberFormat0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.setSeriesItemLabelGenerator((-1007), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setUseOutlinePaint(false);
      int int0 = (-238);
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalLineAndShapeRenderer0.getToolTipGenerator((-238), 12, false);
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-869.5949470321037));
      Boolean boolean0 = candlestickRenderer0.getSeriesVisible(12);
      boolean boolean1 = Boolean.logicalAnd(true, false);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setSeriesShapesFilled((-238), (Boolean) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getSeriesURLGenerator((-1));
      statisticalBarRenderer0.setSeriesURLGenerator(36, (CategoryURLGenerator) null);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
      try { 
        defaultKeyedValues2DDataset0.removeColumn(36);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 36, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Shape shape0 = defaultCategoryItemRenderer0.getLegendShape((-1714));
      int int0 = defaultCategoryItemRenderer0.getRowCount();
      defaultCategoryItemRenderer0.setUseFillPaint(false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("9%^C+4", "9%^C+4", 0, 0);
      boolean boolean0 = defaultCategoryItemRenderer0.removeAnnotation(categoryPointerAnnotation0);
      BarRenderer.setDefaultShadowsVisible(false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      SystemColor systemColor0 = SystemColor.activeCaption;
      waterfallBarRenderer0.setLastBarPaint(systemColor0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      int int0 = (-476);
      // Undeclared exception!
      try { 
        scatterRenderer0.addEntity((EntityCollection) null, waterfallBarRenderer0.DEFAULT_SHAPE, defaultBoxAndWhiskerCategoryDataset0, (-476), (-476), true);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StandardBarPainter standardBarPainter0 = new StandardBarPainter();
      BarRenderer.setDefaultBarPainter(standardBarPainter0);
      CategoryAxis categoryAxis0 = new CategoryAxis("z");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("z");
      TimeSeries timeSeries0 = new TimeSeries(true, "z", "");
      MockDate mockDate0 = new MockDate((-247), 84, (-247), 33, (-1497), 10);
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(10, "");
      Month month0 = new Month(mockDate0, simpleTimeZone0);
      TimeSeriesDataItem timeSeriesDataItem0 = timeSeries0.addOrUpdate((RegularTimePeriod) month0, 2692.5391292125);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryAxis0.DEFAULT_AXIS_LINE_STROKE);
      groupedStackedBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, categoryMarker0, (Rectangle2D) null);
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
      groupedStackedBarRenderer0.setSeriesToGroupMap(keyToGroupMap0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      lineAndShapeRenderer0.setUseFillPaint(false);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("ABW~K?5s", areaRenderer0.ZERO, (double) areaRenderer0.ZERO, 0.0);
      categoryPointerAnnotation0.setArrowLength(1.0E-7);
      Layer layer0 = Layer.FOREGROUND;
      areaRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      AreaRendererEndType areaRendererEndType0 = areaRenderer0.getEndType();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.setRenderAsPercentages(true);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = 680;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getSeriesURLGenerator(680);
      lineRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      CategoryURLGenerator categoryURLGenerator1 = lineRenderer3D0.getBaseURLGenerator();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setPlot((CategoryPlot) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Object object0 = scatterRenderer0.clone();
      scatterRenderer0.setAutoPopulateSeriesShape(false);
      double double0 = scatterRenderer0.getItemMargin();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getToolTipGenerator(0, 0, true);
      intervalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Locale locale0 = Locale.CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("Null 'hotspot' argument.", numberFormat0);
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-3364.6627906), (-1.0));
      CategoryURLGenerator categoryURLGenerator0 = barRenderer3D0.getURLGenerator(0, 0, false);
      // Undeclared exception!
      try { 
        barRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      layeredBarRenderer0.setPlot(combinedRangeCategoryPlot0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = boxAndWhiskerRenderer0.getFillBox();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = boxAndWhiskerRenderer0.getLegendItemURLGenerator();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 23, 15, (-1617), (-2463), 0, 0, true, true, true, true, true, true, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      boolean boolean0 = stackedAreaRenderer0.equals(defaultKeyedValues2DDataset0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Number[][] numberArray0 = new Number[6][1];
      Number[] numberArray1 = new Number[6];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      numberArray1[0] = (Number) integer0;
      numberArray1[1] = (Number) ganttRenderer0.ZERO;
      numberArray1[2] = (Number) 0.2;
      numberArray1[3] = (Number) 3.0;
      numberArray1[4] = (Number) 3.0;
      numberArray1[5] = (Number) ganttRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[3];
      numberArray2[0] = (Number) integer0;
      numberArray2[1] = (Number) integer0;
      numberArray2[2] = (Number) ganttRenderer0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[1];
      numberArray3[0] = (Number) ganttRenderer0.ZERO;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[9];
      numberArray4[0] = (Number) 0.2;
      numberArray4[1] = (Number) 3.0;
      numberArray4[2] = (Number) ganttRenderer0.ZERO;
      numberArray4[3] = (Number) integer0;
      numberArray4[4] = (Number) 0.2;
      numberArray4[5] = (Number) 0.2;
      numberArray4[6] = (Number) integer0;
      numberArray4[7] = (Number) 3.0;
      numberArray4[8] = (Number) ganttRenderer0.ZERO;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[3];
      numberArray5[0] = (Number) 0.2;
      numberArray5[1] = (Number) ganttRenderer0.ZERO;
      numberArray5[2] = (Number) 0.2;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[3];
      numberArray6[0] = (Number) 0.2;
      numberArray6[1] = (Number) integer0;
      numberArray6[2] = (Number) 3.0;
      numberArray0[5] = numberArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        ganttRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      boolean boolean0 = BarRenderer.getDefaultShadowsVisible();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0E11, 1.0E11, true);
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getBaseURLGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      boolean boolean1 = statisticalLineAndShapeRenderer0.getBaseShapesFilled();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setGroupStroke(stackedBarRenderer3D0.DEFAULT_OUTLINE_STROKE);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Shape shape0 = boxAndWhiskerRenderer0.getLegendShape(0);
      boolean boolean0 = boxAndWhiskerRenderer0.isMeanVisible();
      int int0 = boxAndWhiskerRenderer0.hashCode();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseShapesVisible(false);
      lineRenderer3D0.setWallPaint(boxAndWhiskerRenderer0.DEFAULT_PAINT);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0, false);
      CategoryPlot categoryPlot0 = stackedBarRenderer3D0.getPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      CategoryDataset categoryDataset0 = null;
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.getDomainAxis((CategoryPlot) null, (CategoryDataset) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemURLGenerator();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("YRaK/t{ibo", "YRaK/t{ibo", 5.0E-9);
      boolean boolean0 = boxAndWhiskerRenderer0.removeAnnotation(categoryTextAnnotation0);
      boxAndWhiskerRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      boxAndWhiskerRenderer0.setFillBox(true);
      statisticalBarRenderer0.setBase((double) boxAndWhiskerRenderer0.ZERO);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null, true);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null);
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesShapesFilled((-3563), true);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      LegendItemCollection legendItemCollection0 = stackedBarRenderer3D0.getLegendItems();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Shape shape0 = scatterRenderer0.lookupSeriesShape(300);
      int int0 = 1;
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultStatisticalCategoryDataset0, 65535, 1);
      Range range0 = scatterRenderer0.findRangeBounds(slidingCategoryDataset0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      int int1 = 0;
      // Undeclared exception!
      try { 
        slidingCategoryDataset0.getRowKey(1);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Shape shape0 = minMaxCategoryRenderer0.lookupLegendShape(0);
      boolean boolean0 = minMaxCategoryRenderer0.isDrawLines();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(minMaxCategoryRenderer0.DEFAULT_PAINT);
      statisticalLineAndShapeRenderer0.setUseSeriesOffset(true);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Range range0 = groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) null);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LegendItem legendItem0 = scatterRenderer0.getLegendItem(1024, 1024);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0, false);
      Boolean boolean0 = defaultCategoryItemRenderer0.getSeriesLinesVisible(18);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean1 = scatterRenderer0.getDrawOutlines();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) taskSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      boolean boolean0 = true;
      statisticalBarRenderer0.clearSeriesStrokes(true);
      int int0 = 0;
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = null;
      try {
        intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator(", height=", (NumberFormat) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      boolean boolean0 = stackedAreaRenderer0.equals(intervalCategoryToolTipGenerator0);
      String string0 = "ei=(u)I01<u9A";
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("ei=(u)I01<u9A", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-2932), 1927, 10, 5, 10, 0, false, true, false, false, false, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      RingPlot ringPlot0 = new RingPlot();
      boolean boolean0 = false;
      JFreeChart jFreeChart0 = new JFreeChart("M|3^]ZS$t?B7N", ganttRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, false);
      int int0 = 1600;
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(1600, (-3172), chartRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Width (1600) and height (-3172) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Paint paint0 = waterfallBarRenderer0.getNegativeBarPaint();
      String string0 = "";
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("H(Cc/k#u rjG):`:+", "H(Cc/k#u rjG):`:+", "H(Cc/k#u rjG):`:+", "");
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      boolean boolean0 = true;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      ICC_Profile[] iCC_ProfileArray0 = null;
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart("", (Plot) null);
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setFillBox(false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer0.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      categoryItemRendererState0.setBarWidth((double) boxAndWhiskerRenderer0.ZERO);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = (-838);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addEntity(entityCollection0, stackedBarRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, (-838), (-838), true);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      float[] floatArray0 = new float[9];
      floatArray0[0] = 0.0F;
      floatArray0[1] = (-2306.19F);
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = 0.3F;
      floatArray0[5] = 3.0F;
      floatArray0[6] = (-1748.43F);
      floatArray0[7] = (-1411.2753F);
      floatArray0[8] = 0.0F;
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart(thermometerPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 3, 2);
      String string0 = "";
      boolean boolean0 = false;
      JFreeChart jFreeChart1 = new JFreeChart("", jFreeChart0.DEFAULT_TITLE_FONT, thermometerPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage1 = jFreeChart1.createBufferedImage(16, 2, 2674.5, 4426.283041, chartRenderingInfo0);
      // Undeclared exception!
      try { 
        rescaleOp0.filter(bufferedImage0, bufferedImage1);
      } catch(IllegalArgumentException e) {
         //
         // Number of scaling constants does not equal the number of of color or color/alpha  components
         //
         verifyException("java.awt.image.RescaleOp", e);
      }
  }
}
