/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 06:59:54 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.awt.image.ShortLookupTable;
import java.io.File;
import java.math.BigInteger;
import java.net.URL;
import java.sql.Connection;
import java.text.DateFormatSymbols;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLayeredPane;
import javax.swing.JScrollPane;
import javax.swing.border.AbstractBorder;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GradientBarPainter;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.xy.XYDataItem;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      boolean boolean0 = categoryStepRenderer0.getStagger();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LegendItem legendItem0 = lineRenderer3D0.getLegendItem(1, 0);
      lineRenderer3D0.setBaseShapesVisible(false);
      int int0 = lineRenderer3D0.hashCode();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = categoryStepRenderer0.getLegendItemToolTipGenerator();
      categoryStepRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      lineRenderer3D0.setSeriesLinesVisible(43, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.setDefaultEntityRadius(43);
      statisticalLineAndShapeRenderer0.setUseSeriesOffset(true);
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(categoryStepRenderer0.DEFAULT_PAINT);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setIncompletePaint(categoryStepRenderer0.DEFAULT_VALUE_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setAutoPopulateSeriesFillPaint(false);
      stackedBarRenderer3D0.setDataBoundsIncludesVisibleSeriesOnly(false);
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      stackedBarRenderer3D0.setBarPainter(gradientBarPainter0);
      Paint paint0 = stackedBarRenderer3D0.lookupSeriesFillPaint(0);
      BarPainter barPainter0 = stackedBarRenderer3D0.getBarPainter();
      DrawingSupplier drawingSupplier0 = stackedBarRenderer3D0.getDrawingSupplier();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      Boolean boolean0 = defaultXYItemRenderer0.getSeriesShapesVisible(0);
      defaultCategoryItemRenderer0.setSeriesShapesVisible(0, (Boolean) null);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, 0, 15, 0, 10, 0, true, true, false, false, false, true, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(jDBCCategoryDataset0, 2041, 26);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, slidingCategoryDataset0, 768, 26, false);
      } catch(IllegalArgumentException e) {
         //
         // Null 'hotspot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      SystemColor systemColor0 = SystemColor.activeCaptionText;
      boxAndWhiskerRenderer0.setArtifactPaint(systemColor0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(boxAndWhiskerRenderer0.ZERO, 0.0, boxAndWhiskerRenderer0.ZERO, 0.0, boxAndWhiskerRenderer0.DEFAULT_PAINT, boxAndWhiskerRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      boolean boolean0 = categoryStepRenderer0.getStagger();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("", "", "");
      boxAndWhiskerRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      WaferMapPlot waferMapPlot0 = new WaferMapPlot();
      JFreeChart jFreeChart0 = new JFreeChart(waferMapPlot0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 5);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.WaferMapPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "yB+IYHw,t6%M}";
      stringArray0[1] = "w6boYM-IZOW";
      stringArray0[2] = "Null 'paint' argument.";
      stringArray0[3] = "tH";
      stringArray0[4] = "";
      stringArray0[5] = "G(gpR0)4*H3w";
      stringArray0[6] = "";
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultIntervalCategoryDataset0, 1479, 0, false, 1479, 20.0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = lineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0, false);
      Stroke stroke0 = lineAndShapeRenderer0.lookupSeriesOutlineStroke((-286));
      boolean boolean0 = false;
      lineAndShapeRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      lineAndShapeRenderer0.setSeriesShapesVisible(333, false);
      lineAndShapeRenderer0.setUseSeriesOffset(true);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = lineAndShapeRenderer0.getSeriesItemLabelGenerator(333);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesItemLabelGenerator((-286), (CategoryItemLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      int int0 = 0;
      LegendItemCollection legendItemCollection0 = stackedAreaRenderer0.getLegendItems();
      int int1 = defaultBoxAndWhiskerCategoryDataset0.getColumnCount();
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getStackValues(defaultBoxAndWhiskerCategoryDataset0, 501, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      scatterRenderer0.setUseFillPaint(true);
      boolean boolean0 = scatterRenderer0.hasListener(metalComboBoxEditor0);
      boolean boolean1 = scatterRenderer0.getBaseShapesFilled();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
      CategoryMarker categoryMarker0 = new CategoryMarker(true, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, stroke0, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, 0.5F);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addRangeMarker(Integer.MAX_VALUE, (Marker) categoryMarker0, layer0, true);
      CategoryAxis categoryAxis0 = statisticalBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      Paint paint0 = statisticalBarRenderer0.getErrorIndicatorPaint();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      File file0 = MockFile.createTempFile("Not implemented.", "Not implemented.");
      MockFile mockFile0 = new MockFile(file0, "Not implemented.");
      URL uRL0 = mockFile0.toURL();
      ImageIcon imageIcon0 = null;
      try {
        imageIcon0 = new ImageIcon(uRL0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDrawSharedDomainAxis(false);
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Frame frame0 = null;
      try {
        frame0 = new Frame();
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Boolean boolean0 = defaultPolarItemRenderer0.getSeriesItemLabelsVisible(30);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(30, (Boolean) null);
      Color color0 = (Color)FastScatterPlot.DEFAULT_GRIDLINE_PAINT;
      statisticalLineAndShapeRenderer0.setErrorIndicatorPaint(color0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      List list0 = jDBCCategoryDataset0.getRowKeys();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) jDBCCategoryDataset0, false);
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      RingPlot ringPlot0 = new RingPlot(defaultKeyedValuesDataset0);
      Paint paint0 = ringPlot0.getShadowPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, statisticalLineAndShapeRenderer0.DEFAULT_PAINT, ringPlot0.DEFAULT_OUTLINE_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT);
      Paint paint1 = waterfallBarRenderer0.getNegativeBarPaint();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getBaseURLGenerator();
      waterfallBarRenderer0.setSeriesURLGenerator(10, (CategoryURLGenerator) null);
      statisticalBarRenderer0.setErrorIndicatorPaint(statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      LegendItem legendItem0 = statisticalLineAndShapeRenderer0.getLegendItem(10, (-49));
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean1 = boxAndWhiskerRenderer0.getFillBox();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator();
      // Undeclared exception!
      try { 
        defaultShadowGenerator0.createDropShadow((BufferedImage) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.DefaultShadowGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Object object0 = barRenderer3D0.clone();
      barRenderer3D0.setBase((-2898.0793927572));
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      short[][] shortArray0 = new short[1][7];
      short[] shortArray1 = new short[8];
      shortArray1[0] = (short)134;
      short short0 = (short) (-2630);
      shortArray1[1] = (short) (-2630);
      shortArray1[2] = (short)660;
      shortArray1[3] = (short) (-819);
      shortArray1[4] = (short)1927;
      shortArray1[5] = (short)250;
      shortArray1[6] = (short)0;
      shortArray1[7] = (short)1711;
      shortArray0[0] = shortArray1;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(1, shortArray0);
      String string0 = "oJ4]*&O(+Q8)";
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart("oJ4]*&O(+Q8)", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, (Plot) null, false);
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemURLGenerator();
      // Undeclared exception!
      try { 
        stackedBarRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getMinIcon();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = minMaxCategoryRenderer0.getLegendItemURLGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setIncludeBaseInRange(false);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int0 = (-1614);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getSeriesURLGenerator((-1614));
      // Undeclared exception!
      try { 
        levelRenderer0.setSeriesURLGenerator((-1614), (CategoryURLGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getSeriesURLGenerator(2374);
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Paint paint0 = minMaxCategoryRenderer0.getGroupPaint();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      String string0 = "j5\\G2wQ";
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("j5G2wQ", statisticalLineAndShapeRenderer0.ZERO, 214.8, 2.0);
      Layer layer0 = Layer.BACKGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      int int0 = (-1);
      int int1 = (-2112);
      boolean boolean0 = statisticalLineAndShapeRenderer0.getItemShapeVisible((-1), (-2112));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2.0, 3.0, true);
      int int2 = 0;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-126);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte)0;
      byte byte0 = (byte)105;
      byteArray1[2] = (byte)105;
      byteArray1[3] = (byte)74;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte) (-126);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-2112), 0, byteArray0, byteArray0, byteArray1);
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      Graphics2D graphics2D0 = null;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      Number[][] numberArray0 = new Number[7][8];
      Number[] numberArray1 = new Number[4];
      numberArray1[0] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[1] = (Number) 0.2;
      numberArray1[2] = (Number) 0.2;
      numberArray1[3] = (Number) 0.2;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[5];
      numberArray2[0] = (Number) 3.0;
      numberArray2[1] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray2[2] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[3] = (Number) boxAndWhiskerRenderer0.ZERO;
      BigInteger bigInteger0 = BigInteger.ONE;
      numberArray2[4] = (Number) bigInteger0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[7];
      numberArray3[0] = (Number) 0.2;
      numberArray3[1] = (Number) 0.2;
      numberArray3[2] = (Number) 3.0;
      numberArray3[3] = (Number) levelRenderer0.ZERO;
      numberArray3[4] = (Number) 0.2;
      numberArray3[5] = (Number) stackedBarRenderer3D0.ZERO;
      numberArray3[6] = (Number) 3.0;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[7];
      numberArray4[0] = (Number) 12.0;
      numberArray4[1] = (Number) levelRenderer0.ZERO;
      numberArray4[2] = (Number) 8.0;
      numberArray4[3] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray4[4] = (Number) 12.0;
      numberArray4[5] = (Number) 0.2;
      numberArray4[6] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[1];
      numberArray5[0] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray0[4] = numberArray5;
      Number[] numberArray6 = new Number[7];
      numberArray6[0] = (Number) 8.0;
      numberArray6[1] = (Number) 0.2;
      numberArray6[2] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray6[3] = (Number) bigInteger0;
      numberArray6[4] = (Number) 0.2;
      numberArray6[5] = (Number) stackedBarRenderer3D0.ZERO;
      numberArray6[6] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray0[5] = numberArray6;
      Number[] numberArray7 = new Number[6];
      numberArray7[0] = (Number) statisticalLineAndShapeRenderer0.ZERO;
      numberArray7[1] = (Number) levelRenderer0.ZERO;
      Double double0 = new Double((-1377.77809315));
      numberArray7[2] = (Number) double0;
      numberArray7[3] = (Number) bigInteger0;
      numberArray7[4] = (Number) stackedBarRenderer3D0.ZERO;
      numberArray7[5] = (Number) levelRenderer0.ZERO;
      numberArray0[6] = numberArray7;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      LogAxis logAxis0 = new LogAxis((String) null);
      CategoryPlot categoryPlot0 = null;
      try {
        categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, logAxis0, levelRenderer0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true, true, false, false, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Stroke stroke0 = statisticalBarRenderer0.getErrorIndicatorStroke();
      statisticalBarRenderer0.setShadowVisible(true);
      int int0 = 10;
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      statisticalBarRenderer0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      int int1 = (-1330);
      int int2 = 334;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)44;
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte) (-68);
      byteArray0[4] = (byte)57;
      byteArray0[5] = (byte)81;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(3098, 3, byteArray0, (byte)81, true);
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      int int0 = 0;
      DecimalFormat decimalFormat0 = new DecimalFormat("^\"*t[");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("^\"*t[", decimalFormat0, decimalFormat0);
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, true);
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-1001.8), (-1879.795135));
      CategoryToolTipGenerator categoryToolTipGenerator0 = barRenderer3D0.getBaseToolTipGenerator();
      barRenderer3D0.setIncludeBaseInRange(false);
      Font font0 = CategoryPlot.DEFAULT_VALUE_LABEL_FONT;
      barRenderer3D0.setBaseLegendTextFont(font0);
      Stroke stroke0 = barRenderer3D0.lookupSeriesStroke((-554));
      barRenderer3D0.setBaseLegendTextFont(font0);
      CategoryURLGenerator categoryURLGenerator0 = barRenderer3D0.getURLGenerator(0, 0, false);
      boolean boolean0 = barRenderer3D0.equals(font0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("", "", "", "");
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getBaseToolTipGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setSeriesURLGenerator(2480, (CategoryURLGenerator) null, false);
      boolean boolean0 = boxAndWhiskerRenderer0.getFillBox();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      XYDataItem xYDataItem0 = new XYDataItem((Number) lineAndShapeRenderer0.ZERO, (Number) lineAndShapeRenderer0.ZERO);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.getDomainAxis((CategoryPlot) null, defaultStatisticalCategoryDataset0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, (-229.36008156), true);
      SystemColor systemColor0 = SystemColor.controlHighlight;
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 69;
      floatArray0[2] = (float) 69;
      floatArray0[3] = (float) 69;
      floatArray0[4] = (float) 69;
      float[] floatArray1 = Color.RGBtoHSB(69, 69, 0, floatArray0);
      Color color0 = systemColor0.brighter();
      stackedBarRenderer3D0.setBaseLegendTextPaint(color0);
      int int0 = stackedBarRenderer3D0.hashCode();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setFillBox(true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Range range0 = scatterRenderer0.findRangeBounds((CategoryDataset) null);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.getDomainAxis(combinedRangeCategoryPlot0, defaultCategoryDataset0);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      Boolean boolean0 = candlestickRenderer0.getSeriesVisibleInLegend((-1020));
      lineRenderer3D0.setSeriesShapesFilled(0, (Boolean) null);
      int int0 = lineRenderer3D0.hashCode();
      lineRenderer3D0.setXOffset((-1079.6187));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      lineAndShapeRenderer0.setSeriesLinesVisible(0, false);
      Shape shape0 = lineAndShapeRenderer0.lookupSeriesShape(1780);
      lineAndShapeRenderer0.setBaseShapesVisible(false);
      boolean boolean0 = lineAndShapeRenderer0.getUseOutlinePaint();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      piePlot3D0.setBaseSectionOutlinePaint(statisticalBarRenderer0.DEFAULT_PAINT);
      Paint paint0 = piePlot3D0.getSectionPaint(statisticalBarRenderer0.ZERO, false);
      piePlot3D0.clearSectionPaints(false);
      Font font0 = piePlot3D0.getLabelFont();
      boolean boolean1 = font0.canDisplay(0);
      statisticalBarRenderer0.setBaseLegendTextFont(font0);
      statisticalBarRenderer0.setErrorIndicatorPaint(lineAndShapeRenderer0.DEFAULT_PAINT);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseSeriesOffset(true);
      boolean boolean2 = lineAndShapeRenderer0.getBaseShapesVisible();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBase(4.0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = ganttRenderer0.getToolTipGenerator(1091, (-1), false);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("d,x_TU$o54'C6$sr", "d,x_TU$o54'C6$sr", 0.0);
      boolean boolean0 = lineAndShapeRenderer0.removeAnnotation(categoryTextAnnotation0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      boolean boolean1 = stackedBarRenderer0.equals(lineAndShapeRenderer0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      boolean boolean2 = groupedStackedBarRenderer0.equals("d,x_TU$o54'C6$sr");
      lineAndShapeRenderer0.setBaseShapesFilled(true);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = minMaxCategoryRenderer0.equals(scatterRenderer0);
      minMaxCategoryRenderer0.setLegendShape(452, scatterRenderer0.DEFAULT_SHAPE);
      CategoryURLGenerator categoryURLGenerator0 = minMaxCategoryRenderer0.getURLGenerator((-1), (-520), false);
      minMaxCategoryRenderer0.setBaseLegendTextFont(scatterRenderer0.DEFAULT_VALUE_LABEL_FONT);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Paint paint0 = waterfallBarRenderer0.getNegativeBarPaint();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setSeriesLinesVisible(677, false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.setSeriesItemLabelGenerator((-520), (CategoryItemLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getBaseURLGenerator();
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      boolean boolean0 = BarRenderer.getDefaultShadowsVisible();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.removeAnnotations();
      DateFormatSymbols dateFormatSymbols0 = new DateFormatSymbols();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", dateFormatSymbols0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", mockSimpleDateFormat0);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      levelRenderer0.setItemMargin(607.2444804380942);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 0;
      Boolean boolean1 = Boolean.valueOf(true);
      scatterRenderer0.setSeriesShapesFilled(0, boolean1);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      boolean boolean2 = true;
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart("{2}", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, polarPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StandardBarPainter standardBarPainter0 = new StandardBarPainter();
      stackedBarRenderer3D0.setBarPainter(standardBarPainter0);
      Stroke stroke0 = stackedBarRenderer3D0.lookupSeriesStroke(586);
      Paint paint0 = stackedBarRenderer3D0.lookupSeriesFillPaint(586);
      int int0 = stackedBarRenderer3D0.getColumnCount();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Paint paint1 = ganttRenderer0.getIncompletePaint();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      Boolean boolean0 = lineAndShapeRenderer0.getSeriesShapesFilled(1658);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getBaseItemLabelGenerator();
      lineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(lineAndShapeRenderer0.DEFAULT_STROKE);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      boolean boolean1 = lineAndShapeRenderer0.getUseSeriesOffset();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setDrawOutlines(true);
      boolean boolean0 = lineRenderer3D0.getUseFillPaint();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = lineRenderer3D0.getItemLabelGenerator(232, 232, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      boolean boolean1 = scatterRenderer0.equals(integer0);
      boolean boolean2 = scatterRenderer0.getItemShapeFilled(305, 305);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean3 = boxAndWhiskerRenderer0.isMeanVisible();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
      try { 
        ganttRenderer0.setLegendShape((-3859), lineRenderer3D0.DEFAULT_SHAPE);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1395.617034271), 100.0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      stackedBarRenderer3D0.setPlot(combinedDomainCategoryPlot0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      Graphics2D graphics2D0 = null;
      SystemColor systemColor0 = SystemColor.windowText;
      BevelBorder bevelBorder0 = new BevelBorder(10, systemColor0, systemColor0);
      int int0 = (-1964);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) null, (Border) bevelBorder0, 10, 10, (-1964), 30);
      double[][] doubleArray0 = new double[0][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin(3943.99620608);
      Graphics2D graphics2D0 = null;
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = null;
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, (PlotRenderingInfo) null);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      ganttRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      ganttRenderer0.setEndPercent(1298.876503);
      statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("PieLabelLinkStyle.STANDARD", statisticalBarRenderer0.ZERO, 1298.876503, 2.0);
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      Paint paint0 = xYLine3DRenderer0.getWallPaint();
      categoryPointerAnnotation0.setFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);
      categoryPointerAnnotation0.setPaint(paint0);
      ganttRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      // Undeclared exception!
      try { 
        ganttRenderer0.setPlot((CategoryPlot) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = (-1509);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) minMaxCategoryRenderer0.ZERO, 0.0, "#PW=R");
      NumberFormat numberFormat0 = cyclicNumberAxis0.getNumberFormatOverride();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = null;
      try {
        intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("#PW=R", (NumberFormat) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setSeriesShapesVisible(0, true);
      Object object0 = lineAndShapeRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(180.0, 180.0, true);
      IntervalMarker intervalMarker0 = new IntervalMarker(4120.555, 360.0, stackedBarRenderer3D0.DEFAULT_PAINT);
      boolean boolean0 = stackedBarRenderer3D0.equals(intervalMarker0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[9][3];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.2;
      doubleArray2[2] = 180.0;
      doubleArray2[3] = 0.2;
      doubleArray2[4] = 12.0;
      doubleArray2[5] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[6] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[7];
      doubleArray4[0] = 0.0;
      doubleArray4[1] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray4[2] = 180.0;
      doubleArray4[3] = 0.0;
      doubleArray4[4] = 3.0;
      doubleArray4[5] = 0.2;
      doubleArray4[6] = 180.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = 8.0;
      doubleArray5[1] = 0.2;
      doubleArray5[2] = 3.0;
      doubleArray5[3] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray5[4] = 1.0E8;
      doubleArray5[5] = 3.0;
      doubleArray5[6] = 360.0;
      doubleArray5[7] = 0.0;
      doubleArray5[8] = 3.0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[1];
      doubleArray6[0] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[5];
      doubleArray7[0] = 0.2;
      doubleArray7[1] = 12.0;
      doubleArray7[2] = 8.0;
      doubleArray7[3] = 180.0;
      doubleArray7[4] = 1.0E8;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[5];
      doubleArray8[0] = 12.0;
      doubleArray8[1] = 12.0;
      doubleArray8[2] = 0.0;
      doubleArray8[3] = (-9.0);
      doubleArray8[4] = 0.2;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[4];
      doubleArray9[0] = 1.0E8;
      doubleArray9[1] = 360.0;
      doubleArray9[2] = 3.0;
      doubleArray9[3] = 360.0;
      doubleArray0[8] = doubleArray9;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, stackedBarRenderer3D0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, (-489), (-489), false);
      } catch(IllegalArgumentException e) {
         //
         // The 'row' argument is out of bounds.
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = intervalBarRenderer0.createState(plotRenderingInfo0);
      CategoryCrosshairState categoryCrosshairState0 = categoryItemRendererState0.getCrosshairState();
      // Undeclared exception!
      try { 
        intervalBarRenderer0.updateCrosshairValues((CategoryCrosshairState) null, (Comparable) null, (Comparable) null, 2576.6904, 867, (-1187.1), (-1187.1), (PlotOrientation) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategoryPlot categoryPlot0 = null;
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((Plot) null);
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }
}
