/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 12:46:00 GMT 2020
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.image.BufferedImage;
import java.text.DateFormatSymbols;
import java.util.TimeZone;
import javax.swing.JTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.event.AxisChangeEvent;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.SerialDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Axis_ESTest extends Axis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("av&7)Jp/:>YLK/FD%");
      AxisChangeEvent axisChangeEvent0 = new AxisChangeEvent(dateAxis0);
      dateAxis0.notifyListeners(axisChangeEvent0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      cyclicNumberAxis0.configure();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0, 2.0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      subCategoryAxis0.addChangeListener(fastScatterPlot0);
      subCategoryAxis0.setSubLabelPaint(cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Mo(yEy58");
      categoryAxis3D0.setTickMarksVisible(true);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      Paint paint0 = symbolAxis0.getAxisLinePaint();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Quarter quarter0 = new Quarter();
      PeriodAxis periodAxis0 = new PeriodAxis("270", quarter0, quarter0);
      Font font0 = periodAxis0.getTickLabelFont();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'stroke' argument.");
      Stroke stroke0 = extendedCategoryAxis0.getAxisLineStroke();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2043.5545641466415, (-3446.7591558124664), "#wfR#]![I|I(;?tAZbe");
      boolean boolean0 = cyclicNumberAxis0.isVisible();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      Plot plot0 = extendedCategoryAxis0.getPlot();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("xUq'.l|8Be");
      Paint paint0 = categoryAxis0.getTickLabelPaint();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      RectangleInsets rectangleInsets0 = extendedCategoryAxis0.getTickLabelInsets();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      Stroke stroke0 = numberAxis3D0.getTickMarkStroke();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      float float0 = symbolAxis0.getTickMarkOutsideLength();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("sx%v");
      logarithmicAxis0.setAxisLineVisible(false);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      String string0 = cyclicNumberAxis0.getLabel();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "xUq'.l|8Be");
      boolean boolean0 = cyclicNumberAxis0.isAxisLineVisible();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      boolean boolean0 = categoryAxis3D0.isTickLabelsVisible();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-393.8826158373135), "rs+<>SE1!8e~\"A|Wwj-");
      Paint paint0 = cyclicNumberAxis0.getTickMarkPaint();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("");
      boolean boolean0 = periodAxis0.isTickMarksVisible();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("Null 'stroke' argument.", timeZone0);
      JTable jTable0 = new JTable(500, 0);
      boolean boolean0 = dateAxis0.hasListener(jTable0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("xUq'.l|8Be");
      Color color0 = (Color)XYPlot.DEFAULT_CROSSHAIR_PAINT;
      categoryAxis0.setTickMarkPaint(color0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DateFormatSymbols dateFormatSymbols0 = SerialDate.DATE_FORMAT_SYMBOLS;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", dateFormatSymbols0);
      TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
      DateAxis dateAxis0 = new DateAxis("", timeZone0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("QyLRrNe17&f+jtC~N");
      extendedCategoryAxis0.setTickMarkStroke(dateAxis0.DEFAULT_TICK_MARK_STROKE);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      extendedCategoryAxis0.setTickLabelInsets(extendedCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'stroke' argument.");
      // Undeclared exception!
      try { 
        subCategoryAxis0.setTickLabelPaint((Paint) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.axis.Axis", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D((String) null);
      categoryAxis3D0.setTickLabelFont(categoryAxis3D0.DEFAULT_TICK_LABEL_FONT);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      subCategoryAxis0.setTickLabelsVisible(false);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.urls.CustomXYURLGenerator");
      periodAxis0.setTickLabelsVisible(true);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      BasicStroke basicStroke0 = (BasicStroke)XYPlot.DEFAULT_GRIDLINE_STROKE;
      numberAxis0.setAxisLineStroke(basicStroke0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      Color color0 = (Color)LegendTitle.DEFAULT_ITEM_PAINT;
      categoryAxis0.setAxisLinePaint(color0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("7:?8XB!");
      subCategoryAxis0.setLabelInsets(logarithmicAxis0.DEFAULT_AXIS_LABEL_INSETS);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis((String) null);
      Color color0 = (Color)LabelBlock.DEFAULT_PAINT;
      logarithmicAxis0.setLabelPaint(color0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      extendedCategoryAxis0.setLabelFont(categoryPlot0.DEFAULT_VALUE_LABEL_FONT);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(500000.0, 500000.0, "lAI");
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("Null 'stroke' argument.", timeZone0);
      cyclicNumberAxis0.setLabelFont(dateAxis0.DEFAULT_AXIS_LABEL_FONT);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-393.8826158373135), "rs+<>SE1!8e~\"A|Wwj-");
      cyclicNumberAxis0.setLabel("rs+<>SE1!8e~\"A|Wwj-");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("SansSerif");
      dateAxis0.setLabel("");
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0);
      cyclicNumberAxis0.setLabel(",ODk#Dyqv3o95Fj:^v");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-439.65339322), (-439.65339322), "n9u'wv4VV:43qu(");
      cyclicNumberAxis0.setVisible(false);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      numberAxis3D0.setTickMarkInsideLength((-1247.23F));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'stroke' argument.");
      WaferMapPlot waferMapPlot0 = new WaferMapPlot();
      extendedCategoryAxis0.removeChangeListener(waferMapPlot0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-439.65339322), (-439.65339322), "n9u'wv4VV:43qu(");
      cyclicNumberAxis0.setLabelToolTip("1c:&oOGel!Bq:+^");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("QR[Z:uM!P#Z@|!rf+q[");
      Paint paint0 = categoryAxis3D0.getLabelPaint();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1412.5946666463603, "Null 'stroke' argument.");
      RectangleInsets rectangleInsets0 = cyclicNumberAxis0.getLabelInsets();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Don Elliott");
      Object object0 = extendedCategoryAxis0.clone();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      subCategoryAxis0.setLabelURL("");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Don Elliott", combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 641, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis("Q(l", stringArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(symbolAxis0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      // Undeclared exception!
      try { 
        symbolAxis0.getLabelEnclosure((Graphics2D) null, rectangleEdge0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.Axis", e);
      }
  }
}
