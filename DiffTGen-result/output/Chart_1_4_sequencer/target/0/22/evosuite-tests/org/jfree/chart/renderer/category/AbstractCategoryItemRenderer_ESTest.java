/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 06:44:58 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.color.ColorSpace;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ConvolveOp;
import java.awt.image.ImagingOpException;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.sql.Connection;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.ImageIcon;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GradientBarPainter;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.StandardGradientPaintTransformer;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.SpreadsheetDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(boxAndWhiskerRenderer0.ZERO, 0.0, boxAndWhiskerRenderer0.ZERO, 0.0, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      int int0 = 0;
      Stroke stroke0 = boxAndWhiskerRenderer0.lookupSeriesOutlineStroke(0);
      boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      int int1 = (-2166);
      int int2 = 221;
      LegendItem legendItem0 = boxAndWhiskerRenderer0.getLegendItem((-2166), 221);
      int int3 = boxAndWhiskerRenderer0.getColumnCount();
      DrawingSupplier drawingSupplier0 = boxAndWhiskerRenderer0.getDrawingSupplier();
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("", "", "!t#zU2_4])9", ":rZ&C(j}xn,?HM");
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, (-2857.515304425), combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      Rectangle2D rectangle2D1 = polarPlot0.DEFAULT_INSETS.createAdjustedRectangle(rectangle2D0, lengthAdjustmentType0, lengthAdjustmentType0);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.getDomainAxis((CategoryPlot) null, defaultStatisticalCategoryDataset0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = 178;
      Stroke stroke0 = lineRenderer3D0.lookupSeriesStroke(178);
      Paint paint0 = lineRenderer3D0.getWallPaint();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      LegendItem legendItem0 = stackedBarRenderer0.getLegendItem(1266, 1266);
      double double0 = stackedBarRenderer0.getMaximumBarWidth();
      lineRenderer3D0.setLegendShape(178, stackedBarRenderer0.DEFAULT_SHAPE);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleInsets rectangleInsets0 = Axis.DEFAULT_AXIS_LABEL_INSETS;
      combinedDomainCategoryPlot0.setInsets(rectangleInsets0, true);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
      try { 
        lineRenderer3D0.getDomainAxis(combinedDomainCategoryPlot0, defaultStatisticalCategoryDataset0);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Object object0 = boxAndWhiskerRenderer0.clone();
      Stroke stroke0 = boxAndWhiskerRenderer0.lookupSeriesOutlineStroke(1287);
      LegendItem legendItem0 = boxAndWhiskerRenderer0.getLegendItem(234, 860);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.setShadowVisible(false);
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter((-3421.72), 860, (-129.6128268877449));
      layeredBarRenderer0.setBarPainter(gradientBarPainter0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Shape shape0 = lineRenderer3D0.lookupLegendShape((-3546));
      boolean boolean0 = lineRenderer3D0.equals(boxAndWhiskerRenderer0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = layeredBarRenderer0.getLegendItemToolTipGenerator();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = lineRenderer3D0.getItemLabelGenerator(234, 1287, true);
      Boolean boolean1 = lineRenderer3D0.getSeriesLinesVisible(860);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Paint paint0 = waterfallBarRenderer0.getNegativeBarPaint();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = ganttRenderer0.getStartPercent();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      Graphics2D graphics2D0 = null;
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = null;
      Point point0 = new Point(10, 1889);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.findSubplot((PlotRenderingInfo) null, point0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainCategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = false;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Stroke stroke0 = statisticalBarRenderer0.lookupSeriesOutlineStroke(5);
      int int0 = 339;
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getToolTipGenerator((-2506), 339, false);
      categoryStepRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = null;
      try {
        standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", (NumberFormat) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      int int0 = intervalBarRenderer0.getRowCount();
      double double0 = intervalBarRenderer0.getShadowXOffset();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DefaultXYItemRenderer defaultXYItemRenderer0 = new DefaultXYItemRenderer();
      Color color0 = (Color)Axis.DEFAULT_TICK_MARK_PAINT;
      defaultXYItemRenderer0.setLegendTextPaint(0, color0);
      Boolean boolean0 = defaultXYItemRenderer0.getSeriesLinesVisible(1014);
      defaultCategoryItemRenderer0.setSeriesShapesVisible(0, (Boolean) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Comparable<AreaRenderer>[] comparableArray0 = (Comparable<AreaRenderer>[]) Array.newInstance(Comparable.class, 2);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(1014);
      comparableArray0[0] = (Comparable<AreaRenderer>) fixedMillisecond0;
      int int1 = 169;
      SpreadsheetDate spreadsheetDate0 = null;
      try {
        spreadsheetDate0 = new SpreadsheetDate(0, 169, 169);
      } catch(IllegalArgumentException e) {
         //
         // The 'year' argument must be in range 1900 to 9999.
         //
         verifyException("org.jfree.data.time.SpreadsheetDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(statisticalBarRenderer0.DEFAULT_PAINT);
      statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
      Stroke stroke0 = combinedDomainXYPlot0.getRangeZeroBaselineStroke();
      statisticalBarRenderer0.setErrorIndicatorStroke(stroke0);
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-67.0), (double) statisticalBarRenderer0.ZERO, false);
      double double0 = stackedBarRenderer3D0.getYOffset();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemToolTipGenerator();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator1 = stackedBarRenderer3D0.getLegendItemToolTipGenerator();
      statisticalBarRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      statisticalBarRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      stackedBarRenderer3D0.setDefaultEntityRadius(10);
      lineRenderer3D0.setXOffset(4.0);
      Paint paint0 = statisticalBarRenderer0.getShadowPaint();
      LegendItem legendItem0 = stackedBarRenderer3D0.getLegendItem(10, 10);
      boolean boolean0 = lineRenderer3D0.getDrawOutlines();
      boolean boolean1 = lineRenderer3D0.getUseSeriesOffset();
      Paint paint1 = lineRenderer3D0.getWallPaint();
      int int0 = statisticalBarRenderer0.hashCode();
      CategoryURLGenerator categoryURLGenerator0 = lineRenderer3D0.getBaseURLGenerator();
      statisticalBarRenderer0.setBase(7.0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
      Object object0 = statisticalBarRenderer0.clone();
      statisticalBarRenderer0.setNegativeItemLabelPositionFallback((ItemLabelPosition) null);
      Paint paint0 = statisticalBarRenderer0.getErrorIndicatorPaint();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getBaseURLGenerator();
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      boolean boolean0 = defaultCategoryItemRenderer0.getItemLineVisible(1262, (-1));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      Graphics2D graphics2D0 = null;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      float[] floatArray0 = new float[6];
      floatArray0[0] = (-1168.99F);
      floatArray0[1] = (-287.7466F);
      floatArray0[2] = (-2883.421F);
      floatArray0[3] = 0.0F;
      floatArray0[4] = 0.0F;
      floatArray0[5] = 0.9F;
      AffineTransform affineTransform0 = new AffineTransform(floatArray0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      FontRenderContext fontRenderContext0 = null;
      try {
        fontRenderContext0 = new FontRenderContext(affineTransform0, stackedBarRenderer3D0, affineTransform0);
      } catch(IllegalArgumentException e) {
         //
         // AA hint:org.jfree.chart.renderer.category.StackedBarRenderer3D@61a0eebc
         //
         verifyException("java.awt.font.FontRenderContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseFillPaint(false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      Object object0 = statisticalLineAndShapeRenderer0.clone();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(object0, true);
      JFreeChart jFreeChart0 = rendererChangeEvent0.getChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = false;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("#dp682f6W|?P}Ozn", "#dp682f6W|?P}Ozn", (double) statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO);
      categoryPointerAnnotation0.setBaseRadius((double) statisticalLineAndShapeRenderer0.ZERO);
      Layer layer0 = Layer.FOREGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = ganttRenderer0.getEndPercent();
      int int0 = 1645;
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      boolean boolean1 = false;
      statisticalLineAndShapeRenderer0.setSeriesURLGenerator(1645, (CategoryURLGenerator) customCategoryURLGenerator0, false);
      String string0 = "org.jfree.chart.LegendItem";
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("#dp682f6W|?P}Ozn", "E,g:W@ i#oCp!y", "c/5X\"G#MWe", "org.jfree.chart.LegendItem");
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = ganttRenderer0.getEndPercent();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getSeriesToolTipGenerator(0);
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = ganttRenderer0.getSeriesItemLabelGenerator(4207);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      boolean boolean0 = lineRenderer3D0.getBaseShapesFilled();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 163;
      scatterRenderer0.setSeriesURLGenerator(4207, (CategoryURLGenerator) null);
      Boolean boolean1 = Boolean.TRUE;
      boolean boolean2 = Boolean.logicalAnd(true, true);
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      scatterRenderer0.setSeriesShapesFilled(163, boolean1);
      scatterRenderer0.setItemMargin(0.2);
      scatterRenderer0.setUseOutlinePaint(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      int int1 = 1;
      int[] intArray0 = new int[4];
      intArray0[0] = 4207;
      intArray0[1] = (-753);
      intArray0[2] = 4207;
      intArray0[3] = 4207;
      BigInteger bigInteger0 = BigInteger.ONE;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 0, intArray0, (-753), 0, bigInteger0);
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getSeriesURLGenerator(0);
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesURLGenerator((-2031), (CategoryURLGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BarRenderer barRenderer0 = new BarRenderer();
      LegendItemCollection legendItemCollection0 = barRenderer0.getLegendItems();
      barRenderer0.setMinimumBarLength((double) lineRenderer3D0.ZERO);
      DrawingSupplier drawingSupplier0 = lineRenderer3D0.getDrawingSupplier();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Object object0 = stackedAreaRenderer0.clone();
      double double0 = lineRenderer3D0.getXOffset();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      int int0 = 0;
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis("A^v$^y*C");
      ValueAxis valueAxis0 = null;
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, (ValueAxis) null, defaultCategoryItemRenderer0);
      CategoryAxis categoryAxis1 = defaultCategoryItemRenderer0.getDomainAxis(categoryPlot0, taskSeriesCollection0);
      Rectangle rectangle0 = null;
      try {
        rectangle0 = new Rectangle((Dimension) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Rectangle", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      CategoryURLGenerator categoryURLGenerator0 = lineAndShapeRenderer0.getURLGenerator(3747, 0, true);
      lineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      lineAndShapeRenderer0.setSeriesLinesVisible(0, false);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      boolean boolean0 = stackedBarRenderer0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.axis.NumberAxis3D");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2.0, 5216.673167);
      ConvolveOp convolveOp0 = new ConvolveOp((Kernel) null);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(2354, 1067, (-2037));
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -2037
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Color color0 = (Color)XYLine3DRenderer.DEFAULT_WALL_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(color0, color0, color0, color0);
      CategoryPlot categoryPlot0 = waterfallBarRenderer0.getPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-98);
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)73;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, "Null 'visible' argument.");
      minMaxCategoryRenderer0.setMaxIcon(imageIcon0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = false;
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      lineAndShapeRenderer0.setBaseShapesVisible(false);
      lineAndShapeRenderer0.setSeriesToolTipGenerator(1787, (CategoryToolTipGenerator) null, false);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setItemMargin(819.21238245);
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.LineAndShapeRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setRenderAsPercentages(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      barRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      String string0 = ";:&";
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      JFreeChart jFreeChart0 = new JFreeChart(";:&", stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, fastScatterPlot0, true);
      double double0 = (-122.910172487);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(666, 3, (double) stackedAreaRenderer0.ZERO, (-122.910172487), chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D rectangle2D0 = null;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      // Undeclared exception!
      try { 
        levelRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedRangeCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = false;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryPlot categoryPlot0 = categoryStepRenderer0.getPlot();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.setPlot((CategoryPlot) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      int int0 = 0;
      int int1 = 420;
      LegendItem legendItem0 = defaultCategoryItemRenderer0.getLegendItem(0, 420);
      boolean boolean0 = defaultCategoryItemRenderer0.getUseFillPaint();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setRenderAsPercentages(false);
      int int2 = 221;
      // Undeclared exception!
      try { 
        ColorSpace.getInstance(221);
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ColorSpace", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CategoryAnnotation categoryAnnotation0 = null;
      // Undeclared exception!
      try { 
        statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 2855.001362057438);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer3D0.getBaseItemLabelGenerator();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) ganttRenderer0.ZERO, 3.0);
      stackedBarRenderer3D0.setWallPaint(ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryStepRenderer categoryStepRenderer1 = new CategoryStepRenderer();
      boolean boolean0 = categoryStepRenderer0.equals(categoryStepRenderer1);
      String string0 = "#k]n_($6r";
      String string1 = "cW#0^Wx2";
      DecimalFormat decimalFormat0 = new DecimalFormat("cW#0^Wx2");
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("#k]n_($6r", decimalFormat0);
      ganttRenderer0.setSeriesToolTipGenerator(5, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(0, 5, (-489.45), (double) 0, chartRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Width (0) and height (5) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.createState(plotRenderingInfo0);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true);
      Rectangle2D rectangle2D0 = chartPanel0.getZoomRectangle();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("DefaultIntervalCategoryDataset.getValue(): series index out of range.");
      DateAxis dateAxis0 = new DateAxis();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      statisticalBarRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, (-239), (-912), true, 500, 1127.3691308, true);
      scatterRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, (Rectangle2D) null, (CategoryPlot) null, subCategoryAxis0, dateAxis0, defaultMultiValueCategoryDataset0, 37, 0, false, 768);
      scatterRenderer0.setDrawOutlines(false);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setStartPercent((-2424.54416394));
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-180.0), 0.0, true);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState1 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.calculateBarWidth((CategoryPlot) null, (Rectangle2D) null, defaultMultiValueCategoryDataset0, categoryItemRendererState1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point(10, 10);
      CategoryPlot categoryPlot0 = combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryItemRendererState categoryItemRendererState0 = layeredBarRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.calculateBarWidth((CategoryPlot) null, rectangle2D0, defaultKeyedValues2DDataset0, categoryItemRendererState0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = boxAndWhiskerRenderer0.isMedianVisible();
      double double0 = boxAndWhiskerRenderer0.getMaximumBarWidth();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setBaseLegendTextFont(boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_FONT);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'yFormat' argument.");
      double double1 = levelRenderer0.calculateSeriesWidth(146.6095825, subCategoryAxis0, 0, 0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
      levelRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      levelRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setUseFillPaint(false);
      CategoryURLGenerator categoryURLGenerator0 = lineRenderer3D0.getSeriesURLGenerator(5066);
      Boolean boolean1 = boxAndWhiskerRenderer0.getSeriesCreateEntities(5066);
      lineRenderer3D0.setSeriesLinesVisible(0, (Boolean) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setStartPercent((double) boxAndWhiskerRenderer0.ZERO);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Locale locale0 = new Locale("", "", "");
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", locale0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", mockSimpleDateFormat0);
      layeredBarRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      boolean boolean0 = lineRenderer3D0.equals(standardGradientPaintTransformer0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = layeredBarRenderer0.getSeriesItemLabelGenerator(0);
      layeredBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      boolean boolean0 = layeredBarRenderer0.isDrawBarOutline();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Paint paint0 = scatterRenderer0.lookupSeriesOutlinePaint(0);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO, 0.7853981633974483);
      Layer layer0 = Layer.FOREGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      scatterRenderer0.setUseOutlinePaint(true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = scatterRenderer0.getSeriesToolTipGenerator((-6));
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      lineAndShapeRenderer0.setBaseLinesVisible(true);
      boolean boolean0 = lineAndShapeRenderer0.getUseSeriesOffset();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      Stroke stroke0 = statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation1 = new CategoryPointerAnnotation("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", minMaxCategoryRenderer0.ZERO, (double) minMaxCategoryRenderer0.ZERO, 5.0E-8);
      minMaxCategoryRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation1);
      minMaxCategoryRenderer0.setDrawLines(true);
      Object object0 = statisticalLineAndShapeRenderer0.clone();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      Layer layer0 = Layer.FOREGROUND;
      // Undeclared exception!
      try { 
        stackedBarRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      categoryStepRenderer0.removeAnnotations();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Boolean boolean0 = defaultPolarItemRenderer0.getSeriesVisibleInLegend(200);
      statisticalLineAndShapeRenderer0.setSeriesShapesVisible(1, (Boolean) null);
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = 76;
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getItemLabelGenerator(76, 0, false);
      waterfallBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Range range0 = waterfallBarRenderer0.findRangeBounds((CategoryDataset) taskSeriesCollection0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.equals(taskSeriesCollection0);
      Color color0 = Color.CYAN;
      int int1 = 302;
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator(3, color0, 76, 302, 3.0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Jrqy~8fx,|y");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, 0.0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, extendedCategoryAxis0, cyclicNumberAxis0, stackedBarRenderer3D0);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", categoryPlot0);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(2484, 500);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = ganttRenderer0.getBaseToolTipGenerator();
      ganttRenderer0.setSeriesToolTipGenerator(3, (CategoryToolTipGenerator) null, true);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, (-2717.18572260829), ganttRenderer0.ZERO, 0.2, ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT, ganttRenderer0.DEFAULT_STROKE);
      boolean boolean0 = ganttRenderer0.equals(categoryLineAnnotation0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Paint paint0 = boxAndWhiskerRenderer0.lookupSeriesPaint(0);
      boxAndWhiskerRenderer0.setMaximumBarWidth(1.0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      ganttRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = true;
      ganttRenderer0.setAutoPopulateSeriesPaint(true);
      Paint paint0 = ganttRenderer0.getIncompletePaint();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) taskSeriesCollection0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      boolean boolean1 = stackedBarRenderer0.getRenderAsPercentages();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean2 = scatterRenderer0.getUseFillPaint();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      int int0 = 214;
      int int1 = (-1199);
      Paint paint1 = lineAndShapeRenderer0.lookupLegendTextPaint((-1199));
      Boolean boolean3 = Boolean.TRUE;
      lineAndShapeRenderer0.setSeriesShapesVisible(214, boolean3);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      boolean boolean4 = true;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1199), 214, (byte[]) null, (-2), true);
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      double[] doubleArray0 = waterfallBarRenderer0.calculateBarL0L1(0.0, 0.0, (-2844.439));
      CategoryURLGenerator categoryURLGenerator0 = waterfallBarRenderer0.getSeriesURLGenerator(40);
      waterfallBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset((Connection) null, " for that time period. Duplicates are not ");
      } catch(NullPointerException e) {
         //
         // A connection must be supplied.
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getSeriesToolTipGenerator((-959));
      statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator(3465, (CategoryToolTipGenerator) null);
      statisticalLineAndShapeRenderer0.setAutoPopulateSeriesShape(true);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalLineAndShapeRenderer0.getLegendItemToolTipGenerator();
      statisticalLineAndShapeRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = areaRenderer0.findRangeBounds(defaultBoxAndWhiskerCategoryDataset0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator1 = statisticalLineAndShapeRenderer0.getLegendItemLabelGenerator();
      areaRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator1);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = ganttRenderer0.getEndPercent();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.getBaseShapesFilled();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Range range1 = stackedAreaRenderer0.findRangeBounds(defaultBoxAndWhiskerCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Boolean boolean0 = defaultCategoryItemRenderer0.getSeriesShapesFilled(296);
      statisticalLineAndShapeRenderer0.setSeriesLinesVisible(296, (Boolean) null);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      AffineTransform affineTransform0 = new AffineTransform(0.0, (double) groupedStackedBarRenderer0.ZERO, 0.2, (-1677.7028525753), 3.0, 0.0);
      int int0 = 164;
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 164);
      } catch(ImagingOpException e) {
         //
         // Unable to invert transform AffineTransform[[0.0, 0.2, 3.0], [0.0, -1677.7028525753, 0.0]]
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      BarRenderer barRenderer0 = new BarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      DateAxis dateAxis0 = new DateAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, extendedCategoryAxis0, dateAxis0, categoryStepRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      int int0 = 4078;
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = null;
      try {
        standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Null 'stroke' argument.", (NumberFormat) null, (NumberFormat) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatter' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0E11, (-1.0));
      stackedBarRenderer3D0.setIgnoreZeroValues(true);
      double double0 = stackedBarRenderer3D0.getItemMargin();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = 811;
      Color color0 = new Color(77, true);
      int int1 = (-1);
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator(811, color0, 1.0F, (-1), 12.0);
      int int2 = 70;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(70, 1, byteArray0, (-205), false);
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }
}
