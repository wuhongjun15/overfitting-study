/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 11:53:13 GMT 2020
 */

package org.jfree.chart.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.geom.AffineTransform;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.PathIterator;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.Kernel;
import java.awt.image.RescaleOp;
import java.sql.Date;
import java.util.Stack;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JInternalFrame;
import javax.swing.JList;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.PasswordView;
import javax.swing.text.Position;
import javax.swing.text.StringContent;
import javax.swing.text.StyleContext;
import javax.swing.tree.FixedHeightLayoutCache;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.ShapeUtilities;
import org.jfree.chart.util.Size2D;
import org.junit.runner.RunWith;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShapeUtilities_ESTest extends ShapeUtilities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Line2D) null, (Line2D) null);
      boolean boolean1 = ShapeUtilities.equal((Polygon) null, (Polygon) null);
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      Rectangle2D rectangle2D1 = RectangleAnchor.createRectangle(size2D0, 0.0, 715.399428156, rectangleAnchor0);
      Point2D point2D1 = ShapeUtilities.getPointInRectangle(715.399428156, 715.399428156, rectangle2D1);
      Polygon polygon0 = new Polygon();
      boolean boolean2 = ShapeUtilities.equal((Polygon) null, polygon0);
      Line2D.Double line2D_Double1 = new Line2D.Double(715.399428156, 2567.3009, 2567.3009, 0.0);
      boolean boolean3 = ShapeUtilities.equal((Line2D) line2D_Double1, (Line2D) line2D_Double1);
      Shape shape0 = ShapeUtilities.createLineRegion(line2D_Double1, 0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0);
      boolean boolean4 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Float0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      boolean boolean5 = ShapeUtilities.equal(polygon0, (Polygon) null);
      Shape shape1 = ShapeUtilities.createDiamond(683.966F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Line2D) null, (Line2D) null);
      boolean boolean1 = ShapeUtilities.equal((Polygon) null, (Polygon) null);
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.setLine(0.0, 0.0, 1307.152, 2.0);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      Rectangle2D rectangle2D1 = RectangleAnchor.createRectangle(size2D0, 0.0, 715.399428156, rectangleAnchor0);
      Point2D point2D1 = ShapeUtilities.getPointInRectangle(715.399428156, 715.399428156, rectangle2D1);
      Polygon polygon0 = new Polygon();
      boolean boolean2 = ShapeUtilities.equal((Polygon) null, polygon0);
      Line2D.Double line2D_Double1 = new Line2D.Double(715.399428156, 2567.3009, 2567.3009, 0.0);
      boolean boolean3 = ShapeUtilities.equal((Line2D) line2D_Double1, (Line2D) line2D_Double1);
      Shape shape0 = ShapeUtilities.createLineRegion(line2D_Double1, 0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0);
      boolean boolean4 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Float0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      boolean boolean5 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      Shape shape1 = ShapeUtilities.createDiamond(683.966F);
      String string0 = size2D0.toString();
      line2D_Double1.setLine(2.0, (-2.147483648E9), 1758.0, 1307.152);
      Shape shape2 = ShapeUtilities.createDownTriangle(0.0F);
      boolean boolean6 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) line2D_Double1);
      boolean boolean7 = ShapeUtilities.equal(shape2, shape1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Line2D) null, (Line2D) null);
      boolean boolean1 = ShapeUtilities.equal((Polygon) null, (Polygon) null);
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      line2D_Double0.setLine(0.0, 0.0, 1307.152, 2.0);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      Rectangle2D rectangle2D1 = RectangleAnchor.createRectangle(size2D0, 0.0, 715.399428156, rectangleAnchor0);
      Point2D point2D1 = ShapeUtilities.getPointInRectangle(715.399428156, 715.399428156, rectangle2D1);
      Polygon polygon0 = new Polygon();
      boolean boolean2 = ShapeUtilities.equal((Polygon) null, polygon0);
      Line2D.Double line2D_Double1 = new Line2D.Double(715.399428156, 2567.3009, 2567.3009, 0.0);
      boolean boolean3 = ShapeUtilities.equal((Line2D) line2D_Double1, (Line2D) line2D_Double1);
      Shape shape0 = ShapeUtilities.createLineRegion(line2D_Double1, 0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0);
      boolean boolean4 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Float0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      boolean boolean5 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      Shape shape1 = ShapeUtilities.createDiamond(683.966F);
      line2D_Double1.setLine(2.0, (-2.147483648E9), 1758.0, 1307.152);
      Shape shape2 = ShapeUtilities.createDownTriangle(0.0F);
      boolean boolean6 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) line2D_Double1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(60);
      int int0 = affineTransform0.getType();
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      Shape shape0 = ShapeUtilities.createUpTriangle(0);
      Shape shape1 = ShapeUtilities.createRegularCross(0.0F, 0.0F);
      Size2D size2D0 = new Size2D();
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, Double.NaN, 60, rectangleAnchor0);
      Shape shape2 = ShapeUtilities.createDiagonalCross(0.0F, 0.0F);
      Shape shape3 = ShapeUtilities.createDiamond(0.0F);
      int[] intArray0 = new int[2];
      intArray0[0] = 60;
      intArray0[1] = 45;
      Polygon polygon0 = new Polygon(intArray0, intArray0, 0);
      boolean boolean0 = ShapeUtilities.equal(polygon0, polygon0);
      Line2D.Float line2D_Float0 = new Line2D.Float(0, 45, 60, 0.0F);
      boolean boolean1 = ShapeUtilities.equal((Line2D) line2D_Float0, (Line2D) line2D_Float0);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((-1.7976931348623157E308), 0.0F, 0.0, 60.0F, 0.0, Double.NaN, 0);
      boolean boolean2 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) arc2D_Double0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      boolean boolean0 = ShapeUtilities.intersects(rectangle2D0, rectangle2D0);
      GeneralPath generalPath0 = new GeneralPath(0, 0);
      boolean boolean1 = ShapeUtilities.equal(generalPath0, generalPath0);
      Shape shape0 = ShapeUtilities.createDiamond((-298.21F));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(0.0, (-392.64921753), 0.0, 0.0);
      Object object0 = ellipse2D_Double0.clone();
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Float0, (Ellipse2D) ellipse2D_Double0);
      Shape shape0 = ShapeUtilities.createDiagonalCross(0.0F, 0.0F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-392.64921753), (-392.64921753), (-3915.19408), 323.605864);
      rectangle2D_Double0.width = (double) 0.0F;
      Rectangle2D rectangle2D0 = rectangle2D_Double0.getBounds2D();
      rectangle2D_Float0.add(rectangle2D0);
      boolean boolean1 = ShapeUtilities.intersects(rectangle2D_Float0, rectangle2D_Float0);
      Shape shape1 = ShapeUtilities.createDiamond(0.0F);
      Shape shape2 = ShapeUtilities.createDownTriangle(1240.902F);
      rectangle2D_Float0.setFrame(0.0, 0.0, (-2111.126833607), (-392.64921753));
      Rectangle2D.intersect(rectangle2D_Float0, rectangle2D_Double0, rectangle2D0);
      Object object1 = rectangle2D_Double0.clone();
      Ellipse2D.Double ellipse2D_Double1 = new Ellipse2D.Double(0.0, 0.0, 0.0F, Double.NaN);
      // Undeclared exception!
      try { 
        rectangle2D_Float0.add((Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.Rectangle2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(0.0F, 288.0, 1.5, 288.0);
      Rectangle rectangle0 = ellipse2D_Double0.getBounds();
      rectangle2D_Float0.setRect((Rectangle2D) rectangle0);
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D_Float0, rectangleAnchor0);
      Shape shape0 = ShapeUtilities.createTranslatedShape((Shape) rectangle2D_Float0, rectangleAnchor0, 0.0, 1.0);
      Shape shape1 = ShapeUtilities.createUpTriangle(0.0F);
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle1 = jInternalFrame0.getNormalBounds();
      boolean boolean0 = ShapeUtilities.contains(rectangle2D_Float0, rectangle1);
      rectangle1.setRect((Rectangle2D) rectangle2D_Float0);
      Point2D point2D1 = ShapeUtilities.getPointInRectangle(288, 0.0, rectangle1);
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D1, point2D1);
      Shape shape2 = ShapeUtilities.createLineRegion(line2D_Double0, 1.0F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(2323.764, 0.0, 0.0, 0.0);
      Shape shape0 = ShapeUtilities.rotateShape(ellipse2D_Double0, 0.0, 1.0F, 1.0F);
      JTable jTable0 = new JTable(0, 0);
      JTableHeader jTableHeader0 = jTable0.getTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect((-2848));
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      rectangle0.add(0.0, 2323.764);
      Rectangle2D rectangle2D1 = rectangle0.createIntersection(rectangle2D0);
      Shape shape1 = ShapeUtilities.createTranslatedShape((Shape) rectangle2D1, 0.0, (double) 0);
      Line2D.Float line2D_Float0 = new Line2D.Float(1.0F, 0.0F, 0, 2324);
      Shape shape2 = ShapeUtilities.createLineRegion(line2D_Float0, 0.0F);
      Rectangle rectangle1 = line2D_Float0.getBounds();
      Shape shape3 = ShapeUtilities.createLineRegion(line2D_Float0, 0);
      Shape shape4 = ShapeUtilities.createUpTriangle(0.0F);
      boolean boolean0 = ShapeUtilities.equal((Shape) ellipse2D_Double0, (Shape) rectangle1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float((-1.0F), (-1.0F), 1304.0F, (-1.0F));
      Object object0 = ellipse2D_Float0.clone();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      boolean boolean0 = ShapeUtilities.intersects(rectangle2D0, rectangle2D0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      double double0 = 6429.251;
      Size2D size2D0 = new Size2D((-2557.0), (-1.0F));
      Rectangle2D rectangle2D1 = RectangleAnchor.createRectangle(size2D0, (-657.38729), 6429.251, rectangleAnchor0);
      Shape shape0 = ShapeUtilities.createTranslatedShape((Shape) rectangle2D0, rectangleAnchor0, 6429.251, Double.NaN);
      boolean boolean1 = ellipse2D_Float0.intersects(rectangle2D0);
      Shape shape1 = ShapeUtilities.createTranslatedShape((Shape) ellipse2D_Float0, 3657.2595982, (double) (-1.0F));
      AffineTransform affineTransform0 = new AffineTransform((-1.0F), (-2111.501F), (-3434.7798F), (-1.0F), (-1.0F), (-2111.501F));
      int int0 = (-1954);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, (-1954));
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: -1954
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(6, 6);
      Line2D.Double line2D_Double0 = new Line2D.Double(0, Double.NEGATIVE_INFINITY, 0.5, 1249.0);
      Rectangle rectangle1 = line2D_Double0.getBounds();
      boolean boolean0 = ShapeUtilities.contains(rectangle0, rectangle1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiagonalCross((-2019.9F), 0.0F);
      Shape shape1 = ShapeUtilities.createTranslatedShape(shape0, (-3785.5220379607), 0.0);
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      boolean boolean0 = polygon0.contains(0.0, 0.0);
      rectangle0.setRect((-365.0933), 0.0, 1.5, (-1.0));
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      rectangle0.setRect((-433.2701782), 0.0, 0.0, 674.7654590869427);
      boolean boolean1 = ShapeUtilities.contains(rectangle0, rectangle0);
      Shape shape2 = ShapeUtilities.createUpTriangle(0.0F);
      Shape shape3 = ShapeUtilities.clone(shape2);
      Arc2D.Double arc2D_Double0 = null;
      try {
        arc2D_Double0 = new Arc2D.Double((-18.7018822568), 373.354663728, 0.0F, 0.0, (-2019.9F), 0.0F, 32);
      } catch(IllegalArgumentException e) {
         //
         // invalid type for Arc: 32
         //
         verifyException("java.awt.geom.Arc2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      float float0 = 297.4F;
      Shape shape0 = ShapeUtilities.createUpTriangle(297.4F);
      // Undeclared exception!
      try { 
        ShapeUtilities.drawRotatedShape((Graphics2D) null, shape0, 297.4F, 297.4F, 297.4F);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDownTriangle(0.0F);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(0.0F, 0.0F, 0.0F, 0.0F);
      ellipse2D_Float0.setFrame(0.0F, 0.0F, 0.0F, 0.0F);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(0.0F, 0.0F, 795.276167067, 0.0);
      ellipse2D_Double0.y = 0.0;
      ellipse2D_Float0.setFrameFromCenter((double) 0.0F, Double.NEGATIVE_INFINITY, 0.0, 0.0);
      ellipse2D_Double0.width = 0.0;
      ellipse2D_Double0.y = 0.0;
      ellipse2D_Double0.setFrameFromCenter(4562.91, (double) Float.NEGATIVE_INFINITY, 0.0, 0.0);
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Float0, (Ellipse2D) ellipse2D_Double0);
      boolean boolean1 = ShapeUtilities.equal((Arc2D) null, (Arc2D) null);
      float[] floatArray0 = new float[4];
      floatArray0[0] = Float.NEGATIVE_INFINITY;
      floatArray0[1] = 0.0F;
      floatArray0[2] = Float.POSITIVE_INFINITY;
      floatArray0[3] = 0.0F;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, shape0);
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      Point point0 = new Point(0, (-1));
      Point2D point2D0 = rescaleOp0.getPoint2D(point0, point0);
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D0, point2D0);
      Shape shape1 = ShapeUtilities.clone(line2D_Double0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GeneralPath generalPath0 = new GeneralPath();
      GeneralPath generalPath1 = null;
      boolean boolean0 = ShapeUtilities.equal(generalPath0, (GeneralPath) null);
      int[] intArray0 = new int[6];
      intArray0[0] = 1600;
      intArray0[1] = 11;
      intArray0[2] = 4006;
      intArray0[3] = 2;
      intArray0[4] = 176;
      intArray0[5] = 0;
      Polygon polygon0 = null;
      try {
        polygon0 = new Polygon(intArray0, intArray0, 4006);
      } catch(IndexOutOfBoundsException e) {
         //
         // npoints > xpoints.length || npoints > ypoints.length
         //
         verifyException("java.awt.Polygon", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiagonalCross(1078.476F, 1078.476F);
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) null);
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(1078.476F, 1078.476F, 2.0, 2.0, 0.0, 1307.152, 1);
      boolean boolean1 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) arc2D_Double0);
      Shape shape1 = ShapeUtilities.createRegularCross(0.0F, 0.0F);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(1078.4759521484375, 454.428756709652, (-2183.43706557909), (-2183.43706557909));
      boolean boolean2 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) null);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Shape shape2 = ShapeUtilities.createTranslatedShape((Shape) arc2D_Double0, rectangleAnchor0, (double) 0.0F, 2.0);
      Shape shape3 = ShapeUtilities.createDiamond(0.0F);
      Object[] objectArray0 = new Object[0];
      JTree jTree0 = new JTree(objectArray0);
      FixedHeightLayoutCache fixedHeightLayoutCache0 = new FixedHeightLayoutCache();
      TreePath treePath0 = fixedHeightLayoutCache0.getPathForRow(0);
      Rectangle rectangle0 = jTree0.getPathBounds((TreePath) null);
      // Undeclared exception!
      try { 
        ShapeUtilities.intersects((Rectangle2D) null, (Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((GeneralPath) null, (GeneralPath) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      boolean boolean0 = ShapeUtilities.equal(polygon0, polygon0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDownTriangle(0.0F);
      Shape shape1 = ShapeUtilities.createRegularCross((-2709.9F), 0.0F);
      // Undeclared exception!
      try { 
        ShapeUtilities.intersects((Rectangle2D) null, (Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Arc2D.Double arc2D_Double0 = new Arc2D.Double(0);
      boolean boolean0 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) arc2D_Double0);
      Shape shape0 = ShapeUtilities.createRegularCross((-1.0F), 983.186F);
      boolean boolean1 = ShapeUtilities.equal((Arc2D) arc2D_Double0, (Arc2D) arc2D_Double0);
      GeneralPath generalPath0 = new GeneralPath(shape0);
      boolean boolean2 = ShapeUtilities.equal(generalPath0, generalPath0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape((Shape) null, rectangleAnchor0, 0.0, 0.0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'shape' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      Element element0 = defaultStyledDocument0.getParagraphElement(13);
      PasswordView passwordView0 = new PasswordView(element0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Position.Bias position_Bias0 = defaultCaret0.getMarkBias();
      Shape shape0 = passwordView0.modelToView(13, (Shape) null, (Position.Bias) null);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape((Shape) null, rectangleAnchor0, 0.0, (double) 0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'shape' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiamond(0.0F);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(2.0F, 0.0F, (-2852.8408F), (-2795.54F));
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Float0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GeneralPath generalPath0 = new GeneralPath(1);
      boolean boolean0 = ShapeUtilities.equal(generalPath0, generalPath0);
      Shape shape0 = ShapeUtilities.createUpTriangle(1);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1, 1, 1, 1);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createIntersection(rectangle2D_Float0);
      rectangle2D_Float0.setRect(rectangle2D0);
      boolean boolean1 = ShapeUtilities.contains(rectangle2D_Float0, rectangle2D_Float0);
      boolean boolean2 = ShapeUtilities.equal((Shape) rectangle2D_Double0, (Shape) rectangle2D_Float0);
      boolean boolean3 = ShapeUtilities.contains(rectangle2D_Double0, rectangle2D0);
      Shape shape1 = ShapeUtilities.createUpTriangle(0.0F);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GeneralPath generalPath0 = new GeneralPath(0);
      boolean boolean0 = ShapeUtilities.equal(generalPath0, generalPath0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createUpTriangle((-785.0F));
      Shape shape1 = ShapeUtilities.createDiagonalCross((-785.0F), (-785.0F));
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) null);
      boolean boolean1 = ShapeUtilities.equal(shape1, (Shape) null);
      Shape shape2 = ShapeUtilities.rotateShape((Shape) null, Double.POSITIVE_INFINITY, (-785.0F), (-785.0F));
      Shape shape3 = ShapeUtilities.createTranslatedShape(shape1, Double.POSITIVE_INFINITY, (double) (-785.0F));
      Rectangle rectangle0 = new Rectangle((-1), (-2892));
      AffineTransform affineTransform0 = AffineTransform.getScaleInstance(Double.POSITIVE_INFINITY, (-1));
      affineTransform0.setTransform(1537.72, 1034.8954554727964, (double) (-1), 0.0, 0.0, (double) (-1));
      affineTransform0.setToIdentity();
      PathIterator pathIterator0 = rectangle0.getPathIterator(affineTransform0);
      boolean boolean2 = ShapeUtilities.intersects(rectangle0, rectangle0);
      boolean boolean3 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) null);
      Shape shape4 = ShapeUtilities.createDiagonalCross(0, (-646.68F));
      Shape shape5 = ShapeUtilities.createDiamond(718.96F);
      Shape shape6 = ShapeUtilities.createRegularCross((-646.68F), 935.14F);
      Shape shape7 = ShapeUtilities.createUpTriangle(0.0F);
      Shape shape8 = ShapeUtilities.clone(shape0);
      boolean boolean4 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) null);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      Size2D size2D0 = new Size2D((-1938.65332586282), 1.0);
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 256.744, 0.0, rectangleAnchor0);
      Shape shape0 = ShapeUtilities.createTranslatedShape((Shape) arc2D_Float0, rectangleAnchor0, (double) 0, 0.0);
      boolean boolean0 = ShapeUtilities.equal((Shape) arc2D_Float0, shape0);
      boolean boolean1 = ShapeUtilities.equal((Polygon) null, (Polygon) null);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double((-1527.43401910344), (-1527.43401910344), (-1527.43401910344), 0.0);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      boolean boolean0 = ShapeUtilities.contains(rectangle2D0, rectangle2D0);
      boolean boolean1 = ShapeUtilities.equal((Shape) rectangle2D0, (Shape) rectangle2D0);
      boolean boolean2 = ShapeUtilities.intersects(rectangle2D0, rectangle2D0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      Shape shape0 = ShapeUtilities.createTranslatedShape((Shape) ellipse2D_Double0, rectangleAnchor0, Double.POSITIVE_INFINITY, (-1527.43401910344));
      // Undeclared exception!
      try { 
        ShapeUtilities.createLineRegion((Line2D) null, (-751.9107F));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createUpTriangle(243.0F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      Shape shape1 = ShapeUtilities.createTranslatedShape(shape0, rectangleAnchor0, (double) 243.0F, (double) 243.0F);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      ellipse2D_Float0.setFrame(0.0F, 466.4962F, 466.4962F, 0.0F);
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Float0, (Ellipse2D) ellipse2D_Float0);
      Shape shape2 = ShapeUtilities.createDiagonalCross(243.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Line2D line2D0 = null;
      float float0 = 2.0F;
      // Undeclared exception!
      try { 
        ShapeUtilities.createLineRegion((Line2D) null, 2.0F);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiamond(0.0F);
      boolean boolean0 = ShapeUtilities.equal(shape0, shape0);
      Stack<Date> stack0 = new Stack<Date>();
      stack0.trimToSize();
      DefaultComboBoxModel<Date> defaultComboBoxModel0 = new DefaultComboBoxModel<Date>(stack0);
      JList<Date> jList0 = new JList<Date>(defaultComboBoxModel0);
      int int0 = (-4290);
      jList0.enableInputMethods(true);
      // Undeclared exception!
      try { 
        Date.valueOf("");
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.sql.Date", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createRegularCross((-1.0F), (-1.0F));
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.getBounds2D();
      boolean boolean0 = ShapeUtilities.intersects(rectangle2D0, rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        ShapeUtilities.intersects((Rectangle2D) null, (Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Shape shape0 = ShapeUtilities.rotateShape((Shape) null, 0.0, 0.0F, 0.0F);
      Arc2D.Double arc2D_Double0 = null;
      try {
        arc2D_Double0 = new Arc2D.Double(1363);
      } catch(IllegalArgumentException e) {
         //
         // invalid type for Arc: 1363
         //
         verifyException("java.awt.geom.Arc2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDownTriangle(91.83F);
      Shape shape1 = ShapeUtilities.rotateShape(shape0, 91.83F, 91.83F, (-742.2F));
      Line2D.Float line2D_Float0 = new Line2D.Float((-742.2F), 91.83F, 91.83F, (-742.2F));
      Shape shape2 = ShapeUtilities.createLineRegion(line2D_Float0, 91.83F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      Shape shape3 = ShapeUtilities.createTranslatedShape(shape1, rectangleAnchor0, 1007.25066281, (-580.1012017039609));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape((Shape) rectangle2D_Float0, (RectangleAnchor) null, 2692.863, (double) 0.0F);
      } catch(IllegalArgumentException e) {
         //
         // Null 'anchor' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiagonalCross(0.0F, 0.0F);
      float float0 = (-1.0F);
      Shape shape1 = ShapeUtilities.rotateShape(shape0, 0.0F, 0.0F, (-1.0F));
      Shape shape2 = ShapeUtilities.createDownTriangle((-1.0F));
      Shape shape3 = ShapeUtilities.createDiagonalCross((-344.3F), (-344.3F));
      Shape shape4 = ShapeUtilities.clone(shape0);
      Rectangle2D rectangle2D0 = null;
      // Undeclared exception!
      try { 
        ShapeUtilities.getPointInRectangle((-1.0F), (-503.8493), (Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.7976931348623157E308, 0.0, 0.0, 603.7);
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createUnion(rectangle0);
      Shape shape0 = ShapeUtilities.createTranslatedShape((Shape) rectangle2D0, (double) 0, 0.0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) null);
      // Undeclared exception!
      try { 
        ShapeUtilities.contains((Rectangle2D) null, (Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Shape shape0 = ShapeUtilities.createLineRegion(line2D_Float0, 0.0F);
      Shape shape1 = ShapeUtilities.createUpTriangle((-337.71F));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiagonalCross((-484.2F), (-484.2F));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Shape shape0 = ShapeUtilities.clone((Shape) null);
      Shape shape1 = ShapeUtilities.createUpTriangle((-1736.0F));
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape((Shape) null, 0.5, 0.5);
      } catch(IllegalArgumentException e) {
         //
         // Null 'shape' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(2822, 2822);
      JTable jTable0 = new JTable(defaultTableModel0, (TableColumnModel) null);
      Point point0 = new Point();
      Point point1 = new Point(point0);
      Point point2 = jTable0.getLocation(point1);
      jTable0.transferFocusBackward();
      point0.y = (-1255);
      Line2D.Float line2D_Float0 = new Line2D.Float(point2, point2);
      boolean boolean0 = ShapeUtilities.equal((Shape) line2D_Float0, (Shape) line2D_Float0);
      boolean boolean1 = ShapeUtilities.equal((Line2D) line2D_Float0, (Line2D) line2D_Float0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 0, 3274);
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 3274
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createUpTriangle((-1.0F));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      Rectangle rectangle1 = new Rectangle(rectangle0);
      Shape shape0 = ShapeUtilities.clone(rectangle1);
      Shape shape1 = ShapeUtilities.rotateShape(shape0, 849.0, 0.0F, 0);
      Shape shape2 = ShapeUtilities.createDownTriangle(0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      System.setCurrentTimeMillis(1076L);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      ellipse2D_Double0.x = 2916.0;
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      boolean boolean0 = ShapeUtilities.intersects(rectangle2D0, rectangle2D0);
      float float0 = (-1.0F);
      Shape shape0 = ShapeUtilities.createDiagonalCross(2418.003F, (-1.0F));
      System.setCurrentTimeMillis(1076L);
      Shape shape1 = ShapeUtilities.createUpTriangle(0.0F);
      Shape shape2 = ShapeUtilities.createDiamond(1076L);
      Shape shape3 = ShapeUtilities.createDownTriangle(1076L);
      boolean boolean1 = ShapeUtilities.contains(rectangle2D0, rectangle2D0);
      Shape shape4 = ShapeUtilities.createDownTriangle(2418.003F);
      float float1 = 0.0F;
      Shape shape5 = ShapeUtilities.createDiagonalCross(1076L, 0.0F);
      Shape shape6 = ShapeUtilities.createDownTriangle(0.0F);
      Shape shape7 = ShapeUtilities.clone(ellipse2D_Double0);
      Point2D point2D0 = ShapeUtilities.getPointInRectangle(1.0, 0.0, rectangle2D0);
      Line2D.Double line2D_Double0 = new Line2D.Double(point2D0, point2D0);
      line2D_Double0.setLine(point2D0, point2D0);
      boolean boolean2 = ShapeUtilities.equal((Line2D) line2D_Double0, (Line2D) line2D_Double0);
      boolean boolean3 = ShapeUtilities.intersects(rectangle2D0, rectangle2D0);
      // Undeclared exception!
      try { 
        ShapeUtilities.createTranslatedShape(shape2, (RectangleAnchor) null, (double) 1076L, 2567.30078125);
      } catch(IllegalArgumentException e) {
         //
         // Null 'anchor' argument.
         //
         verifyException("org.jfree.chart.util.ShapeUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiagonalCross(0.0F, 0.0F);
      System.setCurrentTimeMillis((-1L));
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boolean boolean0 = ShapeUtilities.intersects(rectangle2D_Double0, rectangle2D_Double0);
      int int0 = (-325);
      int int1 = (-1059);
      float[] floatArray0 = new float[8];
      floatArray0[0] = 0.0F;
      floatArray0[1] = (float) (-325);
      floatArray0[2] = (float) (-1L);
      floatArray0[3] = (float) (-325);
      floatArray0[4] = (float) (-1L);
      floatArray0[5] = (float) (-1L);
      floatArray0[6] = 0.0F;
      floatArray0[7] = (float) (-1L);
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-325), (-1059), floatArray0);
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 8 and should be 344175
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createRegularCross(1.0F, 1.0F);
      Polygon polygon0 = new Polygon();
      Polygon polygon1 = new Polygon(polygon0.xpoints, polygon0.xpoints, 0);
      boolean boolean0 = polygon1.contains(0, 0);
      boolean boolean1 = ShapeUtilities.equal(polygon0, polygon1);
      polygon0.translate(0, (-2140052908));
      Rectangle2D rectangle2D0 = polygon1.getBounds2D();
      boolean boolean2 = ShapeUtilities.equal(polygon1, polygon0);
      Shape shape1 = ShapeUtilities.createDownTriangle(1697.5175F);
      boolean boolean3 = ShapeUtilities.equal(polygon0, polygon1);
      Shape shape2 = ShapeUtilities.createDiamond((-893.7513F));
      Shape shape3 = ShapeUtilities.createRegularCross(0, 1697.5175F);
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Shape shape4 = ShapeUtilities.createLineRegion(line2D_Float0, 0.0F);
      boolean boolean4 = ShapeUtilities.contains(rectangle2D0, rectangle2D0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      Shape shape5 = ShapeUtilities.createTranslatedShape(shape3, rectangleAnchor0, (-2.147483648E9), (double) 0);
      System.setCurrentTimeMillis(0);
      Shape shape6 = ShapeUtilities.clone(line2D_Float0);
      Shape shape7 = ShapeUtilities.createDownTriangle(2.0F);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Shape) null, (Shape) null);
      Shape shape0 = ShapeUtilities.createRegularCross(911.3716F, 2346.4636F);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      boolean boolean1 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Float0, (Ellipse2D) ellipse2D_Float0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createDiagonalCross(1439.0F, (-2736.5F));
      Shape shape1 = ShapeUtilities.createUpTriangle(1439.0F);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      Size2D size2D0 = new Size2D(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY);
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, rectangleAnchor0);
      size2D0.width = (double) (-2736.5F);
      Rectangle2D rectangle2D1 = RectangleAnchor.createRectangle(size2D0, (-1364.549), (-2736.5F), rectangleAnchor0);
      Shape shape2 = ShapeUtilities.createTranslatedShape(shape0, rectangleAnchor0, (double) 1439.0F, (double) 1439.0F);
      Shape shape3 = ShapeUtilities.createTranslatedShape(shape0, (-1.0), (double) (-2736.5F));
      GeneralPath generalPath0 = new GeneralPath(shape1);
      boolean boolean0 = ShapeUtilities.equal(generalPath0, generalPath0);
      Shape shape4 = ShapeUtilities.createUpTriangle(1439.0F);
      generalPath0.quadTo((-2736.5F), (-2736.5F), 0.0F, (-2736.5F));
      Line2D.Double line2D_Double0 = new Line2D.Double();
      boolean boolean1 = ShapeUtilities.equal(shape2, shape0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Shape shape0 = ShapeUtilities.createUpTriangle((-785.0F));
      Shape shape1 = ShapeUtilities.createDiagonalCross((-785.0F), (-785.0F));
      boolean boolean0 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) null);
      boolean boolean1 = ShapeUtilities.equal(shape1, (Shape) null);
      Shape shape2 = ShapeUtilities.rotateShape((Shape) null, Double.POSITIVE_INFINITY, (-785.0F), (-785.0F));
      Shape shape3 = ShapeUtilities.createTranslatedShape(shape1, Double.POSITIVE_INFINITY, (double) (-785.0F));
      Rectangle rectangle0 = new Rectangle((-1), (-2892));
      AffineTransform affineTransform0 = AffineTransform.getScaleInstance(Double.POSITIVE_INFINITY, (-1));
      affineTransform0.setToQuadrantRotation((-6293));
      affineTransform0.setTransform(1537.72, 1034.8954554727964, (double) (-1), 0.0, 0.0, (double) (-1));
      affineTransform0.setToIdentity();
      PathIterator pathIterator0 = rectangle0.getPathIterator(affineTransform0);
      boolean boolean2 = ShapeUtilities.intersects(rectangle0, rectangle0);
      boolean boolean3 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) null);
      Shape shape4 = ShapeUtilities.createDiagonalCross(0, (-646.68F));
      Shape shape5 = ShapeUtilities.createDiamond(718.96F);
      Shape shape6 = ShapeUtilities.createRegularCross((-646.68F), 935.14F);
      Shape shape7 = ShapeUtilities.createUpTriangle(0.0F);
      Shape shape8 = ShapeUtilities.clone(shape0);
      boolean boolean4 = ShapeUtilities.equal((Ellipse2D) null, (Ellipse2D) null);
      boolean boolean5 = ShapeUtilities.contains(rectangle0, rectangle0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      boolean boolean0 = ShapeUtilities.equal((Line2D) null, (Line2D) null);
      boolean boolean1 = ShapeUtilities.equal((Polygon) null, (Polygon) null);
      Size2D size2D0 = new Size2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle2D0, rectangleAnchor0);
      Rectangle2D rectangle2D1 = RectangleAnchor.createRectangle(size2D0, 0.0, 715.399428156, rectangleAnchor0);
      Point2D point2D1 = ShapeUtilities.getPointInRectangle(715.399428156, 715.399428156, rectangle2D1);
      Polygon polygon0 = new Polygon();
      boolean boolean2 = ShapeUtilities.equal((Polygon) null, polygon0);
      Line2D.Double line2D_Double1 = new Line2D.Double(715.399428156, 2567.3009, 2567.3009, 0.0);
      boolean boolean3 = ShapeUtilities.equal((Line2D) line2D_Double1, (Line2D) line2D_Double1);
      Shape shape0 = ShapeUtilities.createLineRegion(line2D_Double1, 0);
      Arc2D.Float arc2D_Float0 = new Arc2D.Float(0);
      boolean boolean4 = ShapeUtilities.equal((Arc2D) arc2D_Float0, (Arc2D) arc2D_Float0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      boolean boolean5 = ShapeUtilities.equal((Ellipse2D) ellipse2D_Double0, (Ellipse2D) ellipse2D_Double0);
      Shape shape1 = ShapeUtilities.createDiamond(683.966F);
  }
}
