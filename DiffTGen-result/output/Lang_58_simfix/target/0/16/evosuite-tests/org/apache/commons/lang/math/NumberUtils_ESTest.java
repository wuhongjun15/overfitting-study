/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 23 04:27:21 GMT 2020
 */

package org.apache.commons.lang.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.apache.commons.lang.math.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - true in context: org.apache.commons.lang.math.NumberUtils:toLong(Ljava/lang/String;J)J
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 221
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 225
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 226
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 227
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 9. Weak Mutation 13: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:221 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:zero
   */

  @Test
  public void test000()  throws Throwable  {
      long long0 = NumberUtils.toLong("Ub", (long) 0);
  }

  //Test case number: 1
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true in context: org.apache.commons.lang.math.NumberUtils:toInt(Ljava/lang/String;I)I
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 9. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:positive
   */

  @Test
  public void test001()  throws Throwable  {
      int int0 = NumberUtils.toInt("(qahGa0tE@e", 4010);
  }

  //Test case number: 2
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - false in context: org.apache.commons.lang.math.NumberUtils:toFloat(Ljava/lang/String;F)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 273
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 274
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 7. Weak Mutation 18: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:273 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:positive
   */

  @Test
  public void test002()  throws Throwable  {
      float float0 = NumberUtils.toFloat((String) null, 1742.799F);
  }

  //Test case number: 3
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - true in context: org.apache.commons.lang.math.NumberUtils:toFloat(Ljava/lang/String;F)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 273
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 277
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 278
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 279
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 9. Weak Mutation 18: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:273 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:negative
   */

  @Test
  public void test003()  throws Throwable  {
      float float0 = NumberUtils.toFloat("", (-63.3378F));
  }

  //Test case number: 4
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - true in context: org.apache.commons.lang.math.NumberUtils:toDouble(Ljava/lang/String;D)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 325
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 329
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 330
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 331
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 9. Weak Mutation 23: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:325 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:positive
   */

  @Test
  public void test004()  throws Throwable  {
      double double0 = NumberUtils.toDouble("0x", 1132.539);
  }

  //Test case number: 5
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:stringToInt(Ljava/lang/String;I)I
   * Goal 4. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 151
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 9. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 11. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 12. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I:zero
   */

  @Test
  public void test005()  throws Throwable  {
      int int0 = NumberUtils.stringToInt("--", 0);
  }

  //Test case number: 6
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:stringToInt(Ljava/lang/String;I)I
   * Goal 4. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 151
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 9. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 11. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 12. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I:positive
   */

  @Test
  public void test006()  throws Throwable  {
      int int0 = NumberUtils.stringToInt("rR", 45);
  }

  //Test case number: 7
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 124 IFNONNULL L914 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 125 IFNE L916 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 127 IF_ICMPGE L923 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 124 IFNONNULL L914 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 125 IFNE L916 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - false in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 127 IF_ICMPGE L923 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 914
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 916
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 921
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 922
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 923
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 928
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 19. Weak Mutation 370: org.apache.commons.lang.math.NumberUtils.min([S)S:914 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 374: org.apache.commons.lang.math.NumberUtils.min([S)S:916 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 378: org.apache.commons.lang.math.NumberUtils.min([S)S:921 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 379: org.apache.commons.lang.math.NumberUtils.min([S)S:922 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 383: org.apache.commons.lang.math.NumberUtils.min([S)S:922 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 384: org.apache.commons.lang.math.NumberUtils.min([S)S:922 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 393: org.apache.commons.lang.math.NumberUtils.min([S)S:923 - ReplaceComparisonOperator >= -> >
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([S)S:positive
   */

  @Test
  public void test007()  throws Throwable  {
      short[] shortArray0 = new short[2];
      shortArray0[0] = (short) (byte)45;
      shortArray0[1] = (short) (byte)45;
      short short0 = NumberUtils.min(shortArray0);
  }

  //Test case number: 8
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 116 IFNONNULL L860 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 117 IFNE L862 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 119 IFGE L869 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 116 IFNONNULL L860 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 117 IFNE L862 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - false in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 119 IFGE L869 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 860
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 862
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 867
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 868
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 869
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 874
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 19. Weak Mutation 312: org.apache.commons.lang.math.NumberUtils.min([J)J:860 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 316: org.apache.commons.lang.math.NumberUtils.min([J)J:862 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 320: org.apache.commons.lang.math.NumberUtils.min([J)J:867 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 321: org.apache.commons.lang.math.NumberUtils.min([J)J:868 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 325: org.apache.commons.lang.math.NumberUtils.min([J)J:868 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 326: org.apache.commons.lang.math.NumberUtils.min([J)J:868 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 333: org.apache.commons.lang.math.NumberUtils.min([J)J:869 - ReplaceComparisonOperator >= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([J)J:positive
   */

  @Test
  public void test008()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[0] = 1L;
      longArray0[1] = 4185L;
      longArray0[2] = 147L;
      long long0 = NumberUtils.min(longArray0);
  }

  //Test case number: 9
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 120 IFNONNULL L887 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 121 IFNE L889 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 123 IF_ICMPGE L896 - false
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 120 IFNONNULL L887 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 121 IFNE L889 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - false in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 123 IF_ICMPGE L896 - false in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 887
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 889
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 894
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 895
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 896
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 897
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 901
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 20. Weak Mutation 339: org.apache.commons.lang.math.NumberUtils.min([I)I:887 - ReplaceComparisonOperator != null -> = null
   * Goal 21. Weak Mutation 343: org.apache.commons.lang.math.NumberUtils.min([I)I:889 - ReplaceComparisonOperator != -> <
   * Goal 22. Weak Mutation 347: org.apache.commons.lang.math.NumberUtils.min([I)I:894 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 348: org.apache.commons.lang.math.NumberUtils.min([I)I:895 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 352: org.apache.commons.lang.math.NumberUtils.min([I)I:895 - ReplaceComparisonOperator >= -> -1
   * Goal 25. Weak Mutation 353: org.apache.commons.lang.math.NumberUtils.min([I)I:895 - ReplaceComparisonOperator >= -> >
   * Goal 26. Weak Mutation 361: org.apache.commons.lang.math.NumberUtils.min([I)I:896 - ReplaceComparisonOperator >= -> -1
   * Goal 27. org.apache.commons.lang.math.NumberUtils.min([I)I:positive
   */

  @Test
  public void test009()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (byte)126;
      intArray0[1] = 1;
      int int0 = NumberUtils.min(intArray0);
  }

  //Test case number: 10
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 136 IFNONNULL L995 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 137 IFNE L997 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 139 IFGE L1004 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 136 IFNONNULL L995 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 137 IFNE L997 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - false in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 139 IFGE L1004 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 995
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 997
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1002
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1003
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1004
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1009
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 19. Weak Mutation 459: org.apache.commons.lang.math.NumberUtils.min([F)F:995 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 463: org.apache.commons.lang.math.NumberUtils.min([F)F:997 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 467: org.apache.commons.lang.math.NumberUtils.min([F)F:1002 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 468: org.apache.commons.lang.math.NumberUtils.min([F)F:1003 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 472: org.apache.commons.lang.math.NumberUtils.min([F)F:1003 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 473: org.apache.commons.lang.math.NumberUtils.min([F)F:1003 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 481: org.apache.commons.lang.math.NumberUtils.min([F)F:1004 - ReplaceComparisonOperator >= -> >
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([F)F:positive
   */

  @Test
  public void test010()  throws Throwable  {
      float[] floatArray0 = new float[7];
      floatArray0[0] = 3118.5F;
      floatArray0[1] = 3118.5F;
      floatArray0[2] = 3118.5F;
      floatArray0[3] = 3118.5F;
      floatArray0[4] = 3118.5F;
      floatArray0[5] = 3118.5F;
      floatArray0[6] = 3118.5F;
      float float0 = NumberUtils.min(floatArray0);
  }

  //Test case number: 11
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 132 IFNONNULL L968 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 133 IFNE L970 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 135 IFGE L977 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 132 IFNONNULL L968 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 133 IFNE L970 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - false in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 135 IFGE L977 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 968
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 970
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 975
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 976
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 977
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 982
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 19. Weak Mutation 432: org.apache.commons.lang.math.NumberUtils.min([D)D:968 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 436: org.apache.commons.lang.math.NumberUtils.min([D)D:970 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 440: org.apache.commons.lang.math.NumberUtils.min([D)D:975 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 441: org.apache.commons.lang.math.NumberUtils.min([D)D:976 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 445: org.apache.commons.lang.math.NumberUtils.min([D)D:976 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 446: org.apache.commons.lang.math.NumberUtils.min([D)D:976 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 454: org.apache.commons.lang.math.NumberUtils.min([D)D:977 - ReplaceComparisonOperator >= -> >
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([D)D:positive
   */

  @Test
  public void test011()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 45;
      doubleArray0[1] = (double) 45;
      doubleArray0[2] = (double) 45;
      doubleArray0[3] = (double) 45;
      doubleArray0[4] = (double) 45;
      doubleArray0[5] = (double) 45;
      doubleArray0[6] = (double) 45;
      double double0 = NumberUtils.min(doubleArray0);
  }

  //Test case number: 12
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 128 IFNONNULL L941 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 129 IFNE L943 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 131 IF_ICMPGE L950 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 131 IF_ICMPGE L950 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 128 IFNONNULL L941 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 129 IFNE L943 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 131 IF_ICMPGE L950 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 131 IF_ICMPGE L950 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 941
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 943
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 948
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 949
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 950
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 951
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 955
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 22. Weak Mutation 401: org.apache.commons.lang.math.NumberUtils.min([B)B:941 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 405: org.apache.commons.lang.math.NumberUtils.min([B)B:943 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 409: org.apache.commons.lang.math.NumberUtils.min([B)B:948 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 410: org.apache.commons.lang.math.NumberUtils.min([B)B:949 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 414: org.apache.commons.lang.math.NumberUtils.min([B)B:949 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 415: org.apache.commons.lang.math.NumberUtils.min([B)B:949 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 423: org.apache.commons.lang.math.NumberUtils.min([B)B:950 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 425: org.apache.commons.lang.math.NumberUtils.min([B)B:950 - ReplaceComparisonOperator >= -> ==
   * Goal 30. org.apache.commons.lang.math.NumberUtils.min([B)B:positive
   */

  @Test
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)25;
      byteArray0[3] = (byte)95;
      byteArray0[4] = (byte)5;
      byte byte0 = NumberUtils.min(byteArray0);
  }

  //Test case number: 13
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 168 IF_ICMPGE L1223 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 169 IF_ICMPGE L1226 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 168 IF_ICMPGE L1223 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 169 IF_ICMPGE L1226 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1223
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1226
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1229
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 10. Weak Mutation 707: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1223 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 719: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1226 - ReplaceComparisonOperator >= -> >
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(SSS)S:positive
   */

  @Test
  public void test013()  throws Throwable  {
      short short0 = NumberUtils.min((short)43, (short)43, (short)43);
  }

  //Test case number: 14
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 164 IFGE L1187 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 165 IFGE L1190 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 164 IFGE L1187 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 165 IFGE L1190 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1187
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1190
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1193
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 10. Weak Mutation 663: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1187 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 669: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1190 - ReplaceComparisonOperator >= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(JJJ)J:positive
   */

  @Test
  public void test014()  throws Throwable  {
      long long0 = NumberUtils.min((long) 69, 831L, 831L);
  }

  //Test case number: 15
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(FFF)F: Line 1277
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(FFF)F:positive
   */

  @Test
  public void test015()  throws Throwable  {
      float float0 = NumberUtils.min((float) (short)3020, (float) (short)946, 710.0F);
  }

  //Test case number: 16
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(FFF)F: Line 1277
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(FFF)F:negative
   */

  @Test
  public void test016()  throws Throwable  {
      float float0 = NumberUtils.min(4295.0806F, 0.0F, (-63.3378F));
  }

  //Test case number: 17
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(DDD)D: Line 1262
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(DDD)D:zero
   */

  @Test
  public void test017()  throws Throwable  {
      double double0 = NumberUtils.min((double) 0.0F, (double) 2926.793F, (double) 3545.8F);
  }

  //Test case number: 18
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(DDD)D: Line 1262
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(DDD)D:positive
   */

  @Test
  public void test018()  throws Throwable  {
      double double0 = NumberUtils.min(3117.768, 3117.768, 3117.768);
  }

  //Test case number: 19
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 148 IFNONNULL L1078 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 149 IFNE L1080 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 150 IF_ICMPGE L1086 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 148 IFNONNULL L1078 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 149 IFNE L1080 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 150 IF_ICMPGE L1086 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1078
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1080
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1085
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1086
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1092
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 14. Weak Mutation 544: org.apache.commons.lang.math.NumberUtils.max([S)S:1078 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 548: org.apache.commons.lang.math.NumberUtils.max([S)S:1080 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 552: org.apache.commons.lang.math.NumberUtils.max([S)S:1085 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 553: org.apache.commons.lang.math.NumberUtils.max([S)S:1086 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 558: org.apache.commons.lang.math.NumberUtils.max([S)S:1086 - ReplaceComparisonOperator >= -> >
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([S)S:negative
   */

  @Test
  public void test019()  throws Throwable  {
      short[] shortArray0 = new short[1];
      shortArray0[0] = (short) (-128);
      short short0 = NumberUtils.max(shortArray0);
  }

  //Test case number: 20
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 140 IFNONNULL L1024 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 141 IFNE L1026 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 142 IF_ICMPGE L1032 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 140 IFNONNULL L1024 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 141 IFNE L1026 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 142 IF_ICMPGE L1032 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1024
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1026
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1031
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1032
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1038
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 14. Weak Mutation 486: org.apache.commons.lang.math.NumberUtils.max([J)J:1024 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 490: org.apache.commons.lang.math.NumberUtils.max([J)J:1026 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 494: org.apache.commons.lang.math.NumberUtils.max([J)J:1031 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 495: org.apache.commons.lang.math.NumberUtils.max([J)J:1032 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 500: org.apache.commons.lang.math.NumberUtils.max([J)J:1032 - ReplaceComparisonOperator >= -> >
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([J)J:negative
   */

  @Test
  public void test020()  throws Throwable  {
      long[] longArray0 = new long[1];
      longArray0[0] = (long) (byte) (-1);
      long long0 = NumberUtils.max(longArray0);
  }

  //Test case number: 21
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 144 IFNONNULL L1051 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 145 IFNE L1053 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 144 IFNONNULL L1051 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 145 IFNE L1053 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1051
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1053
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1058
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1059
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1060
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1061
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1065
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 22. Weak Mutation 513: org.apache.commons.lang.math.NumberUtils.max([I)I:1051 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 517: org.apache.commons.lang.math.NumberUtils.max([I)I:1053 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 521: org.apache.commons.lang.math.NumberUtils.max([I)I:1058 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 522: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 526: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 527: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 535: org.apache.commons.lang.math.NumberUtils.max([I)I:1060 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 537: org.apache.commons.lang.math.NumberUtils.max([I)I:1060 - ReplaceComparisonOperator <= -> ==
   * Goal 30. org.apache.commons.lang.math.NumberUtils.max([I)I:positive
   */

  @Test
  public void test021()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[1] = 774;
      int int0 = NumberUtils.max(intArray0);
  }

  //Test case number: 22
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 144 IFNONNULL L1051 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 145 IFNE L1053 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 144 IFNONNULL L1051 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 145 IFNE L1053 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1051
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1053
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1058
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1059
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1060
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1065
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 19. Weak Mutation 513: org.apache.commons.lang.math.NumberUtils.max([I)I:1051 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 517: org.apache.commons.lang.math.NumberUtils.max([I)I:1053 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 521: org.apache.commons.lang.math.NumberUtils.max([I)I:1058 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 522: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 526: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 527: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 537: org.apache.commons.lang.math.NumberUtils.max([I)I:1060 - ReplaceComparisonOperator <= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([I)I:negative
   */

  @Test
  public void test022()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-903);
      intArray0[1] = (-1184);
      int int0 = NumberUtils.max(intArray0);
  }

  //Test case number: 23
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 160 IFNONNULL L1159 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 161 IFNE L1161 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 162 IF_ICMPGE L1167 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 160 IFNONNULL L1159 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 161 IFNE L1161 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 162 IF_ICMPGE L1167 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1159
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1161
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1166
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1167
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1173
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 14. Weak Mutation 633: org.apache.commons.lang.math.NumberUtils.max([F)F:1159 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 637: org.apache.commons.lang.math.NumberUtils.max([F)F:1161 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 641: org.apache.commons.lang.math.NumberUtils.max([F)F:1166 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 642: org.apache.commons.lang.math.NumberUtils.max([F)F:1167 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 647: org.apache.commons.lang.math.NumberUtils.max([F)F:1167 - ReplaceComparisonOperator >= -> >
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([F)F:negative
   */

  @Test
  public void test023()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) (short) (-714);
      float float0 = NumberUtils.max(floatArray0);
  }

  //Test case number: 24
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 156 IFNONNULL L1132 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 157 IFNE L1134 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 158 IF_ICMPGE L1140 - true
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 156 IFNONNULL L1132 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 157 IFNE L1134 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 158 IF_ICMPGE L1140 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1132
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1134
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1139
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1140
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1146
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 14. Weak Mutation 606: org.apache.commons.lang.math.NumberUtils.max([D)D:1132 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 610: org.apache.commons.lang.math.NumberUtils.max([D)D:1134 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 614: org.apache.commons.lang.math.NumberUtils.max([D)D:1139 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 615: org.apache.commons.lang.math.NumberUtils.max([D)D:1140 - ReplaceConstant - 1 -> 0
   * Goal 18. Weak Mutation 620: org.apache.commons.lang.math.NumberUtils.max([D)D:1140 - ReplaceComparisonOperator >= -> >
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([D)D:negative
   */

  @Test
  public void test024()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-2315.3549599835387);
      double double0 = NumberUtils.max(doubleArray0);
  }

  //Test case number: 25
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 176 IF_ICMPLE L1327 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 177 IF_ICMPLE L1330 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 176 IF_ICMPLE L1327 - true in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 177 IF_ICMPLE L1330 - true in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1327
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1330
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1333
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 10. Weak Mutation 808: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1327 - ReplaceComparisonOperator <= -> ==
   * Goal 11. Weak Mutation 819: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1330 - ReplaceComparisonOperator <= -> <
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(SSS)S:zero
   */

  @Test
  public void test025()  throws Throwable  {
      short short0 = NumberUtils.max((short)0, (short) (-714), (short)0);
  }

  //Test case number: 26
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(FFF)F: Line 1381
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(FFF)F:zero
   */

  @Test
  public void test026()  throws Throwable  {
      float float0 = NumberUtils.max(0.0F, (-2130.509F), (-2130.509F));
  }

  //Test case number: 27
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(FFF)F: Line 1381
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(FFF)F:negative
   */

  @Test
  public void test027()  throws Throwable  {
      float float0 = NumberUtils.max((-2018.3418F), (-2018.3418F), (-2018.3418F));
  }

  //Test case number: 28
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(DDD)D: Line 1366
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(DDD)D:zero
   */

  @Test
  public void test028()  throws Throwable  {
      double double0 = NumberUtils.max((double) 0.0F, (double) 0.0F, (double) 0.0F);
  }

  //Test case number: 29
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(DDD)D: Line 1366
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(DDD)D:positive
   */

  @Test
  public void test029()  throws Throwable  {
      double double0 = NumberUtils.max(0.0, 478.3700294570793, 0.0);
  }

  //Test case number: 30
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 178 IF_ICMPLE L1345 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 179 IF_ICMPLE L1348 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 178 IF_ICMPLE L1345 - false in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 179 IF_ICMPLE L1348 - false in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1345
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1346
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1348
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1349
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1351
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 12. Weak Mutation 833: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1345 - ReplaceComparisonOperator <= -> -1
   * Goal 13. Weak Mutation 845: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1348 - ReplaceComparisonOperator <= -> -1
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max(BBB)B:negative
   */

  @Test
  public void test030()  throws Throwable  {
      byte byte0 = NumberUtils.max((byte) (-87), (byte) (-22), (byte) (-1));
  }

  //Test case number: 31
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 178 IF_ICMPLE L1345 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 179 IF_ICMPLE L1348 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 178 IF_ICMPLE L1345 - true in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 179 IF_ICMPLE L1348 - true in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1345
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1348
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1351
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 10. Weak Mutation 834: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1345 - ReplaceComparisonOperator <= -> <
   * Goal 11. Weak Mutation 846: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1348 - ReplaceComparisonOperator <= -> <
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(BBB)B:positive
   */

  @Test
  public void test031()  throws Throwable  {
      byte byte0 = NumberUtils.max((byte)100, (byte)100, (byte)100);
  }

  //Test case number: 32
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 176 IF_ICMPLE L1327 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 177 IF_ICMPLE L1330 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 176 IF_ICMPLE L1327 - true in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 177 IF_ICMPLE L1330 - true in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1327
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1330
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1333
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 10. Weak Mutation 807: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1327 - ReplaceComparisonOperator <= -> <
   * Goal 11. Weak Mutation 819: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1330 - ReplaceComparisonOperator <= -> <
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(SSS)S:negative
   */

  @Test
  public void test032()  throws Throwable  {
      short short0 = NumberUtils.max((short) (-2802), (short) (-2802), (short) (-2802));
  }

  //Test case number: 33
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 174 IF_ICMPLE L1309 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 175 IF_ICMPLE L1312 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 174 IF_ICMPLE L1309 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 175 IF_ICMPLE L1312 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1309
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1312
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1315
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 10. Weak Mutation 780: org.apache.commons.lang.math.NumberUtils.max(III)I:1309 - ReplaceComparisonOperator <= -> <
   * Goal 11. Weak Mutation 792: org.apache.commons.lang.math.NumberUtils.max(III)I:1312 - ReplaceComparisonOperator <= -> <
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(III)I:positive
   */

  @Test
  public void test033()  throws Throwable  {
      int int0 = NumberUtils.max(3126, 3126, 3126);
  }

  //Test case number: 34
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 174 IF_ICMPLE L1309 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 175 IF_ICMPLE L1312 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 174 IF_ICMPLE L1309 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 175 IF_ICMPLE L1312 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1309
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1312
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1315
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 10. Weak Mutation 780: org.apache.commons.lang.math.NumberUtils.max(III)I:1309 - ReplaceComparisonOperator <= -> <
   * Goal 11. Weak Mutation 793: org.apache.commons.lang.math.NumberUtils.max(III)I:1312 - ReplaceComparisonOperator <= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(III)I:zero
   */

  @Test
  public void test034()  throws Throwable  {
      int int0 = NumberUtils.max(0, 0, (-1706));
  }

  //Test case number: 35
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 172 IFLE L1291 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 173 IFLE L1294 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 172 IFLE L1291 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 173 IFLE L1294 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1291
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1294
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1297
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 10. Weak Mutation 763: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1291 - ReplaceComparisonOperator <= -> ==
   * Goal 11. Weak Mutation 769: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1294 - ReplaceComparisonOperator <= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(JJJ)J:positive
   */

  @Test
  public void test035()  throws Throwable  {
      long long0 = NumberUtils.max(3866L, 0L, (-2013L));
  }

  //Test case number: 36
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 170 IF_ICMPGE L1241 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 171 IF_ICMPGE L1244 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 170 IF_ICMPGE L1241 - true in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 171 IF_ICMPGE L1244 - true in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1241
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1244
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1247
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 10. Weak Mutation 734: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1241 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 747: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1244 - ReplaceComparisonOperator >= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(BBB)B:negative
   */

  @Test
  public void test036()  throws Throwable  {
      byte byte0 = NumberUtils.min((byte) (-1), (byte) (-1), (byte)48);
  }

  //Test case number: 37
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 170 IF_ICMPGE L1241 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 171 IF_ICMPGE L1244 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 170 IF_ICMPGE L1241 - true in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 171 IF_ICMPGE L1244 - true in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1241
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1244
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1247
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 10. Weak Mutation 734: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1241 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 746: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1244 - ReplaceComparisonOperator >= -> >
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(BBB)B:zero
   */

  @Test
  public void test037()  throws Throwable  {
      byte byte0 = NumberUtils.min((byte)0, (byte)0, (byte)0);
  }

  //Test case number: 38
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 168 IF_ICMPGE L1223 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 169 IF_ICMPGE L1226 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 168 IF_ICMPGE L1223 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 169 IF_ICMPGE L1226 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1223
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1226
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1229
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 10. Weak Mutation 707: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1223 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 719: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1226 - ReplaceComparisonOperator >= -> >
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(SSS)S:zero
   */

  @Test
  public void test038()  throws Throwable  {
      short short0 = NumberUtils.min((short)0, (short)0, (short)0);
  }

  //Test case number: 39
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 166 IF_ICMPGE L1205 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 167 IF_ICMPGE L1208 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 166 IF_ICMPGE L1205 - true in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 167 IF_ICMPGE L1208 - true in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1205
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1208
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1211
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 10. Weak Mutation 680: org.apache.commons.lang.math.NumberUtils.min(III)I:1205 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 692: org.apache.commons.lang.math.NumberUtils.min(III)I:1208 - ReplaceComparisonOperator >= -> >
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(III)I:positive
   */

  @Test
  public void test039()  throws Throwable  {
      int int0 = NumberUtils.min(1, 1, 1);
  }

  //Test case number: 40
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 156 IFNONNULL L1132 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 157 IFNE L1134 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 158 IF_ICMPGE L1140 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 158 IF_ICMPGE L1140 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 159 IFLE L1141 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 156 IFNONNULL L1132 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 157 IFNE L1134 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 158 IF_ICMPGE L1140 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 158 IF_ICMPGE L1140 - false in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 159 IFLE L1141 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1132
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1134
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1139
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1140
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1141
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1146
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 19. Weak Mutation 606: org.apache.commons.lang.math.NumberUtils.max([D)D:1132 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 610: org.apache.commons.lang.math.NumberUtils.max([D)D:1134 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 614: org.apache.commons.lang.math.NumberUtils.max([D)D:1139 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 615: org.apache.commons.lang.math.NumberUtils.max([D)D:1140 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 619: org.apache.commons.lang.math.NumberUtils.max([D)D:1140 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 620: org.apache.commons.lang.math.NumberUtils.max([D)D:1140 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 627: org.apache.commons.lang.math.NumberUtils.max([D)D:1141 - ReplaceComparisonOperator <= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([D)D:positive
   */

  @Test
  public void test040()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 783.0;
      double double0 = NumberUtils.max(doubleArray0);
  }

  //Test case number: 41
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 152 IFNONNULL L1105 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 153 IFNE L1107 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 155 IF_ICMPLE L1114 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 152 IFNONNULL L1105 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 153 IFNE L1107 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - false in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 155 IF_ICMPLE L1114 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1105
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1107
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1112
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1113
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1114
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1119
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 19. Weak Mutation 575: org.apache.commons.lang.math.NumberUtils.max([B)B:1105 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 579: org.apache.commons.lang.math.NumberUtils.max([B)B:1107 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 583: org.apache.commons.lang.math.NumberUtils.max([B)B:1112 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 584: org.apache.commons.lang.math.NumberUtils.max([B)B:1113 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 588: org.apache.commons.lang.math.NumberUtils.max([B)B:1113 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 589: org.apache.commons.lang.math.NumberUtils.max([B)B:1113 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 599: org.apache.commons.lang.math.NumberUtils.max([B)B:1114 - ReplaceComparisonOperator <= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([B)B:positive
   */

  @Test
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)63;
      byte byte0 = NumberUtils.max(byteArray0);
  }

  //Test case number: 42
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 144 IFNONNULL L1051 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 145 IFNE L1053 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 144 IFNONNULL L1051 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 145 IFNE L1053 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1051
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1053
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1058
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1059
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1060
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1065
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 19. Weak Mutation 513: org.apache.commons.lang.math.NumberUtils.max([I)I:1051 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 517: org.apache.commons.lang.math.NumberUtils.max([I)I:1053 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 521: org.apache.commons.lang.math.NumberUtils.max([I)I:1058 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 522: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 526: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 527: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 537: org.apache.commons.lang.math.NumberUtils.max([I)I:1060 - ReplaceComparisonOperator <= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([I)I:zero
   */

  @Test
  public void test042()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = (-1184);
      int int0 = NumberUtils.max(intArray0);
  }

  //Test case number: 43
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 140 IFNONNULL L1024 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 141 IFNE L1026 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 142 IF_ICMPGE L1032 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 142 IF_ICMPGE L1032 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 143 IFLE L1033 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 140 IFNONNULL L1024 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 141 IFNE L1026 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 142 IF_ICMPGE L1032 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 142 IF_ICMPGE L1032 - false in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 143 IFLE L1033 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1024
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1026
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1031
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1032
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1033
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1038
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 19. Weak Mutation 486: org.apache.commons.lang.math.NumberUtils.max([J)J:1024 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 490: org.apache.commons.lang.math.NumberUtils.max([J)J:1026 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 494: org.apache.commons.lang.math.NumberUtils.max([J)J:1031 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 495: org.apache.commons.lang.math.NumberUtils.max([J)J:1032 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 499: org.apache.commons.lang.math.NumberUtils.max([J)J:1032 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 500: org.apache.commons.lang.math.NumberUtils.max([J)J:1032 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 507: org.apache.commons.lang.math.NumberUtils.max([J)J:1033 - ReplaceComparisonOperator <= -> ==
   * Goal 26. Weak Mutation 508: org.apache.commons.lang.math.NumberUtils.max([J)J:1033 - ReplaceComparisonOperator <= -> <
   * Goal 27. org.apache.commons.lang.math.NumberUtils.max([J)J:zero
   */

  @Test
  public void test043()  throws Throwable  {
      long[] longArray0 = new long[9];
      longArray0[1] = (long) (byte) (-52);
      long long0 = NumberUtils.max(longArray0);
  }

  //Test case number: 44
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 136 IFNONNULL L995 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 137 IFNE L997 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 139 IFGE L1004 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 136 IFNONNULL L995 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 137 IFNE L997 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - false in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 139 IFGE L1004 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 995
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 997
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1002
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1003
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1004
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1009
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 19. Weak Mutation 459: org.apache.commons.lang.math.NumberUtils.min([F)F:995 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 463: org.apache.commons.lang.math.NumberUtils.min([F)F:997 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 467: org.apache.commons.lang.math.NumberUtils.min([F)F:1002 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 468: org.apache.commons.lang.math.NumberUtils.min([F)F:1003 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 472: org.apache.commons.lang.math.NumberUtils.min([F)F:1003 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 473: org.apache.commons.lang.math.NumberUtils.min([F)F:1003 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 480: org.apache.commons.lang.math.NumberUtils.min([F)F:1004 - ReplaceComparisonOperator >= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([F)F:negative
   */

  @Test
  public void test044()  throws Throwable  {
      float[] floatArray0 = new float[2];
      floatArray0[0] = (-1834.0F);
      float float0 = NumberUtils.min(floatArray0);
  }

  //Test case number: 45
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 128 IFNONNULL L941 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 129 IFNE L943 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 131 IF_ICMPGE L950 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 131 IF_ICMPGE L950 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 128 IFNONNULL L941 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 129 IFNE L943 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 131 IF_ICMPGE L950 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 131 IF_ICMPGE L950 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 941
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 943
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 948
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 949
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 950
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 951
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 955
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 22. Weak Mutation 401: org.apache.commons.lang.math.NumberUtils.min([B)B:941 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 405: org.apache.commons.lang.math.NumberUtils.min([B)B:943 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 409: org.apache.commons.lang.math.NumberUtils.min([B)B:948 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 410: org.apache.commons.lang.math.NumberUtils.min([B)B:949 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 414: org.apache.commons.lang.math.NumberUtils.min([B)B:949 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 415: org.apache.commons.lang.math.NumberUtils.min([B)B:949 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 423: org.apache.commons.lang.math.NumberUtils.min([B)B:950 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 424: org.apache.commons.lang.math.NumberUtils.min([B)B:950 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 425: org.apache.commons.lang.math.NumberUtils.min([B)B:950 - ReplaceComparisonOperator >= -> ==
   * Goal 31. org.apache.commons.lang.math.NumberUtils.min([B)B:negative
   */

  @Test
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-1);
      byte byte0 = NumberUtils.min(byteArray0);
  }

  //Test case number: 46
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 120 IFNONNULL L887 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 121 IFNE L889 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 123 IF_ICMPGE L896 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 120 IFNONNULL L887 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 121 IFNE L889 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - false in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 123 IF_ICMPGE L896 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 887
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 889
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 894
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 895
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 896
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 901
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 19. Weak Mutation 339: org.apache.commons.lang.math.NumberUtils.min([I)I:887 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 343: org.apache.commons.lang.math.NumberUtils.min([I)I:889 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 347: org.apache.commons.lang.math.NumberUtils.min([I)I:894 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 348: org.apache.commons.lang.math.NumberUtils.min([I)I:895 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 352: org.apache.commons.lang.math.NumberUtils.min([I)I:895 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 353: org.apache.commons.lang.math.NumberUtils.min([I)I:895 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 363: org.apache.commons.lang.math.NumberUtils.min([I)I:896 - ReplaceComparisonOperator >= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([I)I:negative
   */

  @Test
  public void test046()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-748);
      int int0 = NumberUtils.min(intArray0);
  }

  //Test case number: 47
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 116 IFNONNULL L860 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 117 IFNE L862 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 119 IFGE L869 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 116 IFNONNULL L860 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 117 IFNE L862 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - false in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 119 IFGE L869 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 860
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 862
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 867
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 868
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 869
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 874
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 19. Weak Mutation 312: org.apache.commons.lang.math.NumberUtils.min([J)J:860 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 316: org.apache.commons.lang.math.NumberUtils.min([J)J:862 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 320: org.apache.commons.lang.math.NumberUtils.min([J)J:867 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 321: org.apache.commons.lang.math.NumberUtils.min([J)J:868 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 325: org.apache.commons.lang.math.NumberUtils.min([J)J:868 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 326: org.apache.commons.lang.math.NumberUtils.min([J)J:868 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 333: org.apache.commons.lang.math.NumberUtils.min([J)J:869 - ReplaceComparisonOperator >= -> ==
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([J)J:negative
   */

  @Test
  public void test047()  throws Throwable  {
      long[] longArray0 = new long[6];
      longArray0[0] = (long) (byte) (-55);
      long long0 = NumberUtils.min(longArray0);
  }

  //Test case number: 48
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 110 IF_ACMPNE L829 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 111 IFNULL L832 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 112 IFNONNULL L832 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 113 IF_ICMPEQ L835 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 110 IF_ACMPNE L829 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 112 IFNONNULL L832 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 111 IFNULL L832 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 113 IF_ICMPEQ L835 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 829
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 832
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 835
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 836
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 15. Weak Mutation 285: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:829 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 287: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:832 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 288: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:832 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 291: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:835 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 293: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:836 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:false
   */

  @Test
  public void test048()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double[] doubleArray1 = new double[2];
      boolean boolean0 = NumberUtils.equals(doubleArray0, doubleArray1);
  }

  //Test case number: 49
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 98 IF_ACMPNE L775 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 99 IFNULL L778 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 100 IFNONNULL L778 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 101 IF_ICMPEQ L781 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 98 IF_ACMPNE L775 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 99 IFNULL L778 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 100 IFNONNULL L778 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 101 IF_ICMPEQ L781 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 775
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 778
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 781
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 782
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 15. Weak Mutation 231: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:775 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 233: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:778 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 234: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:778 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 237: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:781 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 239: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:782 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:false
   */

  @Test
  public void test049()  throws Throwable  {
      long[] longArray0 = new long[7];
      long[] longArray1 = new long[1];
      boolean boolean0 = NumberUtils.equals(longArray0, longArray1);
  }

  //Test case number: 50
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 81 IFNULL L697 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 82 IFNONNULL L697 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 83 IF_ICMPEQ L700 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I38 Branch 84 IF_ICMPGE L704 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I47 Branch 85 IF_ICMPEQ L705 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 81 IFNULL L697 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 82 IFNONNULL L697 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 83 IF_ICMPEQ L700 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I38 Branch 84 IF_ICMPGE L704 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I47 Branch 85 IF_ICMPEQ L705 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 694
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 697
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 700
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 704
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 705
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 706
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 21. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:694 - ReplaceComparisonOperator != -> ==
   * Goal 22. Weak Mutation 152: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:697 - ReplaceComparisonOperator = null -> != null
   * Goal 23. Weak Mutation 153: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:697 - ReplaceComparisonOperator != null -> = null
   * Goal 24. Weak Mutation 155: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:700 - ReplaceComparisonOperator == -> -2
   * Goal 25. Weak Mutation 159: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:704 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 163: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:704 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 173: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:705 - ReplaceComparisonOperator == -> >=
   * Goal 28. Weak Mutation 175: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:706 - ReplaceConstant - 0 -> 1
   * Goal 29. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:false
   */

  @Test
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-127);
      boolean boolean0 = NumberUtils.equals(byteArray0, byteArray1);
  }

  //Test case number: 51
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 81 IFNULL L697 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 82 IFNONNULL L697 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 83 IF_ICMPEQ L700 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 81 IFNULL L697 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 82 IFNONNULL L697 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 83 IF_ICMPEQ L700 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 694
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 697
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 700
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 701
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 15. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:694 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 152: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:697 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 153: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:697 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 156: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:700 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 158: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:701 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:false
   */

  @Test
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = new byte[8];
      boolean boolean0 = NumberUtils.equals(byteArray0, byteArray1);
  }

  //Test case number: 52
  /*
   * 126 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I160 Branch 15 IF_ICMPLE L441 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I198 Branch 17 IFEQ L448 - true
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 19 LOOKUPSWITCH L449 Case 68 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 20 LOOKUPSWITCH L449 Case 70 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 21 LOOKUPSWITCH L449 Case 76 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 22 LOOKUPSWITCH L449 Case 100 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 23 LOOKUPSWITCH L449 Case 102 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 24 LOOKUPSWITCH L449 Case 108 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 25 LOOKUPSWITCH L449 Default-Case - true
   * Goal 18. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 69 IFNONNULL L570 - true
   * Goal 19. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 70 IFLT L573 - false
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 71 IF_ICMPEQ L574 - false
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I160 Branch 15 IF_ICMPLE L441 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I198 Branch 17 IFEQ L448 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 22 LOOKUPSWITCH L449 Case 100 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 25 LOOKUPSWITCH L449 Default-Case - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 23 LOOKUPSWITCH L449 Case 102 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 20 LOOKUPSWITCH L449 Case 70 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 24 LOOKUPSWITCH L449 Case 108 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 21 LOOKUPSWITCH L449 Case 76 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 37. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 19 LOOKUPSWITCH L449 Case 68 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 38. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 69 IFNONNULL L570 - true in context: 
   * Goal 39. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 70 IFLT L573 - false in context: 
   * Goal 40. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 71 IF_ICMPEQ L574 - false in context: 
   * Goal 41. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 42. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 43. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 44. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 45. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 423
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 429
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 431
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 54. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 441
   * Goal 55. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 444
   * Goal 56. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 447
   * Goal 57. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 448
   * Goal 58. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 449
   * Goal 59. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 510
   * Goal 60. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 570
   * Goal 61. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 573
   * Goal 62. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 574
   * Goal 63. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 575
   * Goal 64. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 65. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 66. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 67. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 68. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 69. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 70. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 71. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 72. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 73. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 74. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 75. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 76. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 77. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 78. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 79. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 80. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 81. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 82. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 83. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 84. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 85. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 86. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 87. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 88. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 89. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 90. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 91. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 92. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 93. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 94. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 95. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 96. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 97. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 98. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 99. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 100. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 101. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 102. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 103. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 104. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 105. Weak Mutation 76: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 106. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 107. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 108. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> -1
   * Goal 109. Weak Mutation 85: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 0
   * Goal 110. Weak Mutation 86: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 1
   * Goal 111. Weak Mutation 87: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> -2
   * Goal 112. Weak Mutation 89: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceComparisonOperator <= -> <
   * Goal 113. Weak Mutation 112: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:570 - ReplaceComparisonOperator != null -> = null
   * Goal 114. Weak Mutation 114: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceConstant - 1 -> 0
   * Goal 115. Weak Mutation 115: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> +
   * Goal 116. Weak Mutation 116: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> %
   * Goal 117. Weak Mutation 117: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> *
   * Goal 118. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> /
   * Goal 119. Weak Mutation 123: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceComparisonOperator < -> !=
   * Goal 120. Weak Mutation 128: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 0
   * Goal 121. Weak Mutation 129: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 1
   * Goal 122. Weak Mutation 130: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> -1
   * Goal 123. Weak Mutation 131: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 47
   * Goal 124. Weak Mutation 132: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 49
   * Goal 125. Weak Mutation 135: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceComparisonOperator == -> <=
   * Goal 126. Weak Mutation 136: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:575 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test052()  throws Throwable  {
      try { 
        NumberUtils.createNumber("+u&As'qCcK[%.g#p(R");
      } catch(NumberFormatException e) {
         //
         // +u&As'qCcK[%.g#p(R is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 53
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 78 IFNONNULL L674 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 79 IFEQ L678 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 78 IFNONNULL L674 - true in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 79 IFEQ L678 - true in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 5. createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;_java.lang.NumberFormatException_IMPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 674
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 678
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 681
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 10. Weak Mutation 147: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:674 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 148: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:678 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test053()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("$>!");
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.math.BigDecimal", e);
      }
  }

  //Test case number: 54
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: I3 Branch 77 IFNONNULL L658 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: I3 Branch 77 IFNONNULL L658 - true in context: org.apache.commons.lang.math.NumberUtils:createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   * Goal 3. createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;_java.lang.NumberFormatException_IMPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 658
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 661
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   * Goal 7. Weak Mutation 146: org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;:658 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test054()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createBigInteger("HOM~-r_qfH|nhY");
      } catch(NumberFormatException e) {
         //
         // Illegal embedded sign character
         //
         assertThrownBy("java.math.BigInteger", e);
      }
  }

  //Test case number: 55
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: I3 Branch 76 IFNONNULL L642 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: I3 Branch 76 IFNONNULL L642 - true in context: org.apache.commons.lang.math.NumberUtils:createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 3. createLong(Ljava/lang/String;)Ljava/lang/Long;_java.lang.NumberFormatException_IMPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 642
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 645
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 7. Weak Mutation 145: org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;:642 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test055()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createLong("Bq2RM");
      } catch(NumberFormatException e) {
         //
         // For input string: \"Bq2RM\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }

  //Test case number: 56
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 74 IFNONNULL L608 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 74 IFNONNULL L608 - true in context: org.apache.commons.lang.math.NumberUtils:createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 3. createDouble(Ljava/lang/String;)Ljava/lang/Double;_java.lang.NumberFormatException_IMPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 608
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 611
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 7. Weak Mutation 143: org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;:608 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createDouble("U@r@<x");
      } catch(NumberFormatException e) {
         //
         // For input string: \"U@r@<x\"
         //
         assertThrownBy("sun.misc.FloatingDecimal", e);
      }
  }

  //Test case number: 57
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - false in context: org.apache.commons.lang.math.NumberUtils:toDouble(Ljava/lang/String;D)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 325
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 326
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 7. Weak Mutation 23: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:325 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:zero
   */

  @Test
  public void test057()  throws Throwable  {
      double double0 = NumberUtils.toDouble((String) null, 0.0);
  }

  //Test case number: 58
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - true in context: org.apache.commons.lang.math.NumberUtils:toDouble(Ljava/lang/String;D)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 325
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 329
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 330
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 331
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D
   * Goal 9. Weak Mutation 23: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:325 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:negative
   */

  @Test
  public void test058()  throws Throwable  {
      double double0 = NumberUtils.toDouble(">fd*1HV7UZNUd*E/6", (-42.0));
  }

  //Test case number: 59
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - true in context: org.apache.commons.lang.math.NumberUtils:toFloat(Ljava/lang/String;F)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 273
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 277
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 278
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 279
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F
   * Goal 9. Weak Mutation 18: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:273 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:zero
   */

  @Test
  public void test059()  throws Throwable  {
      float float0 = NumberUtils.toFloat("", 0.0F);
  }

  //Test case number: 60
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - true in context: org.apache.commons.lang.math.NumberUtils:toLong(Ljava/lang/String;J)J
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 221
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 225
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 226
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 227
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 9. Weak Mutation 13: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:221 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:negative
   */

  @Test
  public void test060()  throws Throwable  {
      long long0 = NumberUtils.toLong("O7{wKFbf", (long) (byte) (-90));
  }

  //Test case number: 61
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - false in context: org.apache.commons.lang.math.NumberUtils:toInt(Ljava/lang/String;I)I
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 173
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 7. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:zero
   */

  @Test
  public void test061()  throws Throwable  {
      int int0 = NumberUtils.toInt((String) null, 0);
  }

  //Test case number: 62
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true in context: org.apache.commons.lang.math.NumberUtils:toInt(Ljava/lang/String;I)I
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I
   * Goal 9. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:negative
   */

  @Test
  public void test062()  throws Throwable  {
      int int0 = NumberUtils.toInt("O7{wKFbf", (int) (byte) (-90));
  }

  //Test case number: 63
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:toInt(Ljava/lang/String;)I
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: Line 129
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 9. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I
   * Goal 11. Weak Mutation 0: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I:129 - ReplaceConstant - 0 -> 1
   * Goal 12. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 13. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I:zero
   */

  @Test
  public void test063()  throws Throwable  {
      int int0 = NumberUtils.toInt("1TVdCq0:k+A8");
  }

  //Test case number: 64
  /*
   * 71 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 204 IF_ICMPLT L1579 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 208 IF_ICMPLT L1580 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 210 IF_ICMPNE L1584 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 213 IF_ICMPEQ L1590 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 214 IF_ICMPNE L1590 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I243 Branch 217 IF_ICMPEQ L1601 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I248 Branch 218 IF_ICMPNE L1601 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I252 Branch 219 IFNE L1602 - false
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 204 IF_ICMPLT L1579 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 208 IF_ICMPLT L1580 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 210 IF_ICMPNE L1584 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 214 IF_ICMPNE L1590 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 213 IF_ICMPEQ L1590 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I248 Branch 218 IF_ICMPNE L1601 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I243 Branch 217 IF_ICMPEQ L1601 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I252 Branch 219 IFNE L1602 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1546
   * Goal 26. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1549
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1550
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1551
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1552
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1553
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1554
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1556
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1557
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1558
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1574
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1576
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1579
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1580
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1584
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1590
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1601
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1602
   * Goal 43. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1603
   * Goal 44. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 45. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 46. Weak Mutation 945: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1546 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 947: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 948: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1552 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 949: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1553 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 950: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1554 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 951: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 952: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 0
   * Goal 53. Weak Mutation 953: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 1
   * Goal 54. Weak Mutation 954: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> -1
   * Goal 55. Weak Mutation 955: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 44
   * Goal 56. Weak Mutation 956: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 46
   * Goal 57. Weak Mutation 957: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceComparisonOperator != -> -1
   * Goal 58. Weak Mutation 960: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 1 -> 0
   * Goal 59. Weak Mutation 968: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 969: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 970: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 971: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 972: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> /
   * Goal 64. Weak Mutation 973: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceComparisonOperator <= -> -1
   * Goal 65. Weak Mutation 979: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 0
   * Goal 66. Weak Mutation 980: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 1
   * Goal 67. Weak Mutation 981: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> -1
   * Goal 68. Weak Mutation 982: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 47
   * Goal 69. Weak Mutation 983: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 49
   * Goal 70. Weak Mutation 986: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceComparisonOperator != -> >
   * Goal 71. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test064()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("----d:]ME..d2:GJz7VOzJ.");
  }

  //Test case number: 65
  /*
   * 71 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 204 IF_ICMPLT L1579 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 208 IF_ICMPLT L1580 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I168 Branch 209 IF_ICMPGT L1580 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 210 IF_ICMPNE L1584 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 213 IF_ICMPEQ L1590 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 214 IF_ICMPNE L1590 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I215 Branch 215 IFEQ L1592 - true
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I223 Branch 216 IFNE L1596 - false
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 204 IF_ICMPLT L1579 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I168 Branch 209 IF_ICMPGT L1580 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 208 IF_ICMPLT L1580 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 210 IF_ICMPNE L1584 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 213 IF_ICMPEQ L1590 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 214 IF_ICMPNE L1590 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I215 Branch 215 IFEQ L1592 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I223 Branch 216 IFNE L1596 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1546
   * Goal 26. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1549
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1550
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1551
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1552
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1553
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1554
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1556
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1557
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1558
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1574
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1576
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1579
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1580
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1584
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1590
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1592
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1596
   * Goal 43. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1597
   * Goal 44. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 45. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 46. Weak Mutation 945: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1546 - ReplaceComparisonOperator == -> !=
   * Goal 47. Weak Mutation 947: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 948: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1552 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 949: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1553 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 950: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1554 - ReplaceConstant - 0 -> 1
   * Goal 51. Weak Mutation 951: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 952: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 0
   * Goal 53. Weak Mutation 953: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 1
   * Goal 54. Weak Mutation 954: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> -1
   * Goal 55. Weak Mutation 955: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 44
   * Goal 56. Weak Mutation 956: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 46
   * Goal 57. Weak Mutation 958: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceComparisonOperator != -> <
   * Goal 58. Weak Mutation 961: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 59. Weak Mutation 968: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 969: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 970: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 971: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 972: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> /
   * Goal 64. Weak Mutation 973: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceComparisonOperator <= -> -1
   * Goal 65. Weak Mutation 979: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 0
   * Goal 66. Weak Mutation 980: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 1
   * Goal 67. Weak Mutation 981: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> -1
   * Goal 68. Weak Mutation 982: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 47
   * Goal 69. Weak Mutation 983: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 49
   * Goal 70. Weak Mutation 985: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceComparisonOperator != -> <
   * Goal 71. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test065()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("EIp;yxB\"8&.5&A>G G@");
  }

  //Test case number: 66
  /*
   * 75 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 204 IF_ICMPLT L1579 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 208 IF_ICMPLT L1580 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I168 Branch 209 IF_ICMPGT L1580 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I168 Branch 209 IF_ICMPGT L1580 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 210 IF_ICMPNE L1584 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 213 IF_ICMPEQ L1590 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 214 IF_ICMPNE L1590 - true
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I243 Branch 217 IF_ICMPEQ L1601 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I248 Branch 218 IF_ICMPNE L1601 - true
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 204 IF_ICMPLT L1579 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I168 Branch 209 IF_ICMPGT L1580 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I168 Branch 209 IF_ICMPGT L1580 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 208 IF_ICMPLT L1580 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 210 IF_ICMPNE L1584 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 214 IF_ICMPNE L1590 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 213 IF_ICMPEQ L1590 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I243 Branch 217 IF_ICMPEQ L1601 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I248 Branch 218 IF_ICMPNE L1601 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1546
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1549
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1550
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1551
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1552
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1553
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1554
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1556
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1557
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1558
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1574
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1576
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1579
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1580
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1581
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1582
   * Goal 43. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1584
   * Goal 44. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1590
   * Goal 45. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1601
   * Goal 46. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1608
   * Goal 47. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1610
   * Goal 48. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 49. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 50. Weak Mutation 945: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1546 - ReplaceComparisonOperator == -> !=
   * Goal 51. Weak Mutation 947: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 0 -> 1
   * Goal 52. Weak Mutation 948: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1552 - ReplaceConstant - 0 -> 1
   * Goal 53. Weak Mutation 949: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1553 - ReplaceConstant - 0 -> 1
   * Goal 54. Weak Mutation 950: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1554 - ReplaceConstant - 0 -> 1
   * Goal 55. Weak Mutation 951: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 56. Weak Mutation 952: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 0
   * Goal 57. Weak Mutation 953: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 1
   * Goal 58. Weak Mutation 954: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> -1
   * Goal 59. Weak Mutation 955: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 44
   * Goal 60. Weak Mutation 956: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 46
   * Goal 61. Weak Mutation 958: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceComparisonOperator != -> <
   * Goal 62. Weak Mutation 961: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 63. Weak Mutation 968: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceConstant - 1 -> 0
   * Goal 64. Weak Mutation 969: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> %
   * Goal 65. Weak Mutation 970: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> -
   * Goal 66. Weak Mutation 971: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> *
   * Goal 67. Weak Mutation 972: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> /
   * Goal 68. Weak Mutation 973: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceComparisonOperator <= -> -1
   * Goal 69. Weak Mutation 979: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 0
   * Goal 70. Weak Mutation 980: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 1
   * Goal 71. Weak Mutation 981: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> -1
   * Goal 72. Weak Mutation 982: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 47
   * Goal 73. Weak Mutation 983: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 49
   * Goal 74. Weak Mutation 985: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceComparisonOperator != -> <
   * Goal 75. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test066()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("58vUkcLV~v");
  }

  //Test case number: 67
  /*
   * 68 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 204 IF_ICMPLT L1579 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 208 IF_ICMPLT L1580 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 210 IF_ICMPNE L1584 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 213 IF_ICMPEQ L1590 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 214 IF_ICMPNE L1590 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I243 Branch 217 IF_ICMPEQ L1601 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I248 Branch 218 IF_ICMPNE L1601 - true
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 204 IF_ICMPLT L1579 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I163 Branch 208 IF_ICMPLT L1580 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I184 Branch 210 IF_ICMPNE L1584 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I211 Branch 214 IF_ICMPNE L1590 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I206 Branch 213 IF_ICMPEQ L1590 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I243 Branch 217 IF_ICMPEQ L1601 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I248 Branch 218 IF_ICMPNE L1601 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1546
   * Goal 24. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1549
   * Goal 25. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1550
   * Goal 26. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1551
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1552
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1553
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1554
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1556
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1557
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1558
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1574
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1576
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1579
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1580
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1584
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1590
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1601
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1608
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 43. Weak Mutation 945: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1546 - ReplaceComparisonOperator == -> !=
   * Goal 44. Weak Mutation 947: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 0 -> 1
   * Goal 45. Weak Mutation 948: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1552 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 949: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1553 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 950: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1554 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 951: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 952: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 0
   * Goal 50. Weak Mutation 953: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 1
   * Goal 51. Weak Mutation 954: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> -1
   * Goal 52. Weak Mutation 955: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 44
   * Goal 53. Weak Mutation 956: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 46
   * Goal 54. Weak Mutation 959: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceComparisonOperator != -> >
   * Goal 55. Weak Mutation 961: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 56. Weak Mutation 968: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceConstant - 1 -> 0
   * Goal 57. Weak Mutation 969: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> %
   * Goal 58. Weak Mutation 970: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> -
   * Goal 59. Weak Mutation 971: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> *
   * Goal 60. Weak Mutation 972: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> /
   * Goal 61. Weak Mutation 973: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceComparisonOperator <= -> -1
   * Goal 62. Weak Mutation 979: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 0
   * Goal 63. Weak Mutation 980: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 1
   * Goal 64. Weak Mutation 981: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> -1
   * Goal 65. Weak Mutation 982: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 47
   * Goal 66. Weak Mutation 983: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 49
   * Goal 67. Weak Mutation 986: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceComparisonOperator != -> >
   * Goal 68. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test067()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("(qahGa0tE@e");
  }

  //Test case number: 68
  /*
   * 74 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I68 Branch 195 IF_ICMPNE L1558 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I79 Branch 196 IF_ICMPNE L1560 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I68 Branch 195 IF_ICMPNE L1558 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I79 Branch 196 IF_ICMPNE L1560 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 13. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1546
   * Goal 14. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1549
   * Goal 15. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1550
   * Goal 16. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1551
   * Goal 17. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1552
   * Goal 18. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1553
   * Goal 19. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1554
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1556
   * Goal 21. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1557
   * Goal 22. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1558
   * Goal 23. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1559
   * Goal 24. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1560
   * Goal 25. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1561
   * Goal 26. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 28. Weak Mutation 945: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1546 - ReplaceComparisonOperator == -> !=
   * Goal 29. Weak Mutation 947: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 0 -> 1
   * Goal 30. Weak Mutation 948: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1552 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 949: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1553 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 950: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1554 - ReplaceConstant - 0 -> 1
   * Goal 33. Weak Mutation 951: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 952: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 0
   * Goal 35. Weak Mutation 953: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 1
   * Goal 36. Weak Mutation 954: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> -1
   * Goal 37. Weak Mutation 955: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 44
   * Goal 38. Weak Mutation 956: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 46
   * Goal 39. Weak Mutation 958: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceComparisonOperator != -> <
   * Goal 40. Weak Mutation 961: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 968: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceConstant - 1 -> 0
   * Goal 42. Weak Mutation 969: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> %
   * Goal 43. Weak Mutation 970: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> -
   * Goal 44. Weak Mutation 971: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> *
   * Goal 45. Weak Mutation 972: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> /
   * Goal 46. Weak Mutation 973: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceComparisonOperator <= -> -1
   * Goal 47. Weak Mutation 979: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 0
   * Goal 48. Weak Mutation 980: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 1
   * Goal 49. Weak Mutation 981: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> -1
   * Goal 50. Weak Mutation 982: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 47
   * Goal 51. Weak Mutation 983: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 49
   * Goal 52. Weak Mutation 984: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceComparisonOperator != -> -1
   * Goal 53. Weak Mutation 990: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 1 -> 0
   * Goal 54. Weak Mutation 991: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceArithmeticOperator + -> %
   * Goal 55. Weak Mutation 992: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceArithmeticOperator + -> -
   * Goal 56. Weak Mutation 993: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceArithmeticOperator + -> *
   * Goal 57. Weak Mutation 994: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceArithmeticOperator + -> /
   * Goal 58. Weak Mutation 995: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 120 -> 0
   * Goal 59. Weak Mutation 996: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 120 -> 1
   * Goal 60. Weak Mutation 997: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 120 -> -1
   * Goal 61. Weak Mutation 998: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 120 -> 119
   * Goal 62. Weak Mutation 999: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 120 -> 121
   * Goal 63. Weak Mutation 1000: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceComparisonOperator != -> -1
   * Goal 64. Weak Mutation 1006: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceConstant - 2 -> 0
   * Goal 65. Weak Mutation 1007: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceConstant - 2 -> 1
   * Goal 66. Weak Mutation 1008: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceConstant - 2 -> -1
   * Goal 67. Weak Mutation 1009: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceConstant - 2 -> 3
   * Goal 68. Weak Mutation 1010: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceArithmeticOperator + -> %
   * Goal 69. Weak Mutation 1011: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceArithmeticOperator + -> -
   * Goal 70. Weak Mutation 1012: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceArithmeticOperator + -> *
   * Goal 71. Weak Mutation 1013: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceArithmeticOperator + -> /
   * Goal 72. Weak Mutation 1020: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1560 - ReplaceComparisonOperator != -> -1
   * Goal 73. Weak Mutation 1023: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1561 - ReplaceConstant - 0 -> 1
   * Goal 74. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test068()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("0x");
  }

  //Test case number: 69
  /*
   * 115 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I68 Branch 195 IF_ICMPNE L1558 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I79 Branch 196 IF_ICMPNE L1560 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I89 Branch 197 IF_ICMPGE L1564 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I96 Branch 198 IF_ICMPLT L1565 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I101 Branch 199 IF_ICMPLE L1565 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I107 Branch 200 IF_ICMPLT L1565 - true
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I107 Branch 200 IF_ICMPLT L1565 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I112 Branch 201 IF_ICMPLE L1565 - true
   * Goal 13. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I118 Branch 202 IF_ICMPLT L1565 - true
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I61 Branch 194 IF_ICMPNE L1558 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I68 Branch 195 IF_ICMPNE L1558 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I79 Branch 196 IF_ICMPNE L1560 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I89 Branch 197 IF_ICMPGE L1564 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I101 Branch 199 IF_ICMPLE L1565 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I107 Branch 200 IF_ICMPLT L1565 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I118 Branch 202 IF_ICMPLT L1565 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I112 Branch 201 IF_ICMPLE L1565 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I96 Branch 198 IF_ICMPLT L1565 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I107 Branch 200 IF_ICMPLT L1565 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1546
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1549
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1550
   * Goal 30. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1551
   * Goal 31. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1552
   * Goal 32. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1553
   * Goal 33. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1554
   * Goal 34. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1556
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1557
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1558
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1559
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1560
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1564
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1565
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1568
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 43. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 44. Weak Mutation 945: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1546 - ReplaceComparisonOperator == -> !=
   * Goal 45. Weak Mutation 947: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 0 -> 1
   * Goal 46. Weak Mutation 948: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1552 - ReplaceConstant - 0 -> 1
   * Goal 47. Weak Mutation 949: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1553 - ReplaceConstant - 0 -> 1
   * Goal 48. Weak Mutation 950: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1554 - ReplaceConstant - 0 -> 1
   * Goal 49. Weak Mutation 951: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 50. Weak Mutation 952: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 0
   * Goal 51. Weak Mutation 953: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 1
   * Goal 52. Weak Mutation 954: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> -1
   * Goal 53. Weak Mutation 955: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 44
   * Goal 54. Weak Mutation 956: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 46
   * Goal 55. Weak Mutation 958: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceComparisonOperator != -> <
   * Goal 56. Weak Mutation 961: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 57. Weak Mutation 968: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceConstant - 1 -> 0
   * Goal 58. Weak Mutation 969: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> %
   * Goal 59. Weak Mutation 970: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> -
   * Goal 60. Weak Mutation 971: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> *
   * Goal 61. Weak Mutation 972: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> /
   * Goal 62. Weak Mutation 973: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceComparisonOperator <= -> -1
   * Goal 63. Weak Mutation 979: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 0
   * Goal 64. Weak Mutation 980: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 1
   * Goal 65. Weak Mutation 981: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> -1
   * Goal 66. Weak Mutation 982: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 47
   * Goal 67. Weak Mutation 983: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 48 -> 49
   * Goal 68. Weak Mutation 984: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceComparisonOperator != -> -1
   * Goal 69. Weak Mutation 990: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 1 -> 0
   * Goal 70. Weak Mutation 991: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceArithmeticOperator + -> %
   * Goal 71. Weak Mutation 992: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceArithmeticOperator + -> -
   * Goal 72. Weak Mutation 993: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceArithmeticOperator + -> *
   * Goal 73. Weak Mutation 994: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceArithmeticOperator + -> /
   * Goal 74. Weak Mutation 995: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 120 -> 0
   * Goal 75. Weak Mutation 996: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 120 -> 1
   * Goal 76. Weak Mutation 997: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 120 -> -1
   * Goal 77. Weak Mutation 998: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 120 -> 119
   * Goal 78. Weak Mutation 999: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceConstant - 120 -> 121
   * Goal 79. Weak Mutation 1000: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1558 - ReplaceComparisonOperator != -> -1
   * Goal 80. Weak Mutation 1006: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceConstant - 2 -> 0
   * Goal 81. Weak Mutation 1007: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceConstant - 2 -> 1
   * Goal 82. Weak Mutation 1008: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceConstant - 2 -> -1
   * Goal 83. Weak Mutation 1009: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceConstant - 2 -> 3
   * Goal 84. Weak Mutation 1010: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceArithmeticOperator + -> %
   * Goal 85. Weak Mutation 1011: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceArithmeticOperator + -> -
   * Goal 86. Weak Mutation 1012: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceArithmeticOperator + -> *
   * Goal 87. Weak Mutation 1013: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1559 - ReplaceArithmeticOperator + -> /
   * Goal 88. Weak Mutation 1022: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1560 - ReplaceComparisonOperator != -> >
   * Goal 89. Weak Mutation 1027: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1564 - ReplaceComparisonOperator >= -> -1
   * Goal 90. Weak Mutation 1033: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 48 -> 0
   * Goal 91. Weak Mutation 1034: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 48 -> 1
   * Goal 92. Weak Mutation 1035: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 48 -> -1
   * Goal 93. Weak Mutation 1036: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 48 -> 47
   * Goal 94. Weak Mutation 1037: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 48 -> 49
   * Goal 95. Weak Mutation 1038: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceComparisonOperator < -> !=
   * Goal 96. Weak Mutation 1044: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 57 -> 0
   * Goal 97. Weak Mutation 1045: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 57 -> 1
   * Goal 98. Weak Mutation 1046: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 57 -> -1
   * Goal 99. Weak Mutation 1047: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 57 -> 56
   * Goal 100. Weak Mutation 1048: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 57 -> 58
   * Goal 101. Weak Mutation 1049: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceComparisonOperator <= -> -1
   * Goal 102. Weak Mutation 1055: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 97 -> 0
   * Goal 103. Weak Mutation 1056: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 97 -> 1
   * Goal 104. Weak Mutation 1057: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 97 -> -1
   * Goal 105. Weak Mutation 1058: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 97 -> 96
   * Goal 106. Weak Mutation 1059: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 97 -> 98
   * Goal 107. Weak Mutation 1060: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceComparisonOperator < -> !=
   * Goal 108. Weak Mutation 1061: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceComparisonOperator < -> -2
   * Goal 109. Weak Mutation 1066: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 102 -> 0
   * Goal 110. Weak Mutation 1067: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 102 -> 1
   * Goal 111. Weak Mutation 1068: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 102 -> -1
   * Goal 112. Weak Mutation 1069: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 102 -> 101
   * Goal 113. Weak Mutation 1070: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceConstant - 102 -> 103
   * Goal 114. Weak Mutation 1073: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1565 - ReplaceComparisonOperator <= -> ==
   * Goal 115. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test069()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("0xd:]ME..d2:GJz7VOzJ.");
  }

  //Test case number: 70
  /*
   * 74 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 204 IF_ICMPLT L1579 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I152 Branch 205 IF_ICMPGE L1579 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I154 Branch 206 IFEQ L1579 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I279 Branch 220 IF_ICMPGE L1612 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I286 Branch 221 IF_ICMPLT L1613 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I302 Branch 223 IF_ICMPEQ L1617 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I307 Branch 224 IF_ICMPNE L1617 - true
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I315 Branch 225 IFNE L1621 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I320 Branch 226 IF_ICMPEQ L1621 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I325 Branch 227 IF_ICMPEQ L1621 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I330 Branch 228 IF_ICMPEQ L1621 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I335 Branch 229 IF_ICMPNE L1621 - true
   * Goal 16. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I346 Branch 230 IF_ICMPEQ L1628 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I351 Branch 231 IF_ICMPNE L1628 - true
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I41 Branch 192 IF_ICMPNE L1556 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I54 Branch 193 IF_ICMPLE L1557 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I154 Branch 206 IFEQ L1579 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I152 Branch 205 IF_ICMPGE L1579 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I147 Branch 204 IF_ICMPLT L1579 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I279 Branch 220 IF_ICMPGE L1612 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I286 Branch 221 IF_ICMPLT L1613 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I307 Branch 224 IF_ICMPNE L1617 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I302 Branch 223 IF_ICMPEQ L1617 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I315 Branch 225 IFNE L1621 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I335 Branch 229 IF_ICMPNE L1621 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I330 Branch 228 IF_ICMPEQ L1621 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I325 Branch 227 IF_ICMPEQ L1621 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I320 Branch 226 IF_ICMPEQ L1621 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I346 Branch 230 IF_ICMPEQ L1628 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I351 Branch 231 IF_ICMPNE L1628 - true in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 35. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1546
   * Goal 36. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1549
   * Goal 37. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1550
   * Goal 38. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1551
   * Goal 39. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1552
   * Goal 40. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1553
   * Goal 41. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1554
   * Goal 42. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1556
   * Goal 43. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1557
   * Goal 44. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1574
   * Goal 45. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1576
   * Goal 46. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1579
   * Goal 47. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1612
   * Goal 48. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1613
   * Goal 49. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1617
   * Goal 50. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1621
   * Goal 51. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1628
   * Goal 52. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1634
   * Goal 53. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 54. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 55. Weak Mutation 945: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1546 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 947: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1551 - ReplaceConstant - 0 -> 1
   * Goal 57. Weak Mutation 948: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1552 - ReplaceConstant - 0 -> 1
   * Goal 58. Weak Mutation 949: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1553 - ReplaceConstant - 0 -> 1
   * Goal 59. Weak Mutation 950: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1554 - ReplaceConstant - 0 -> 1
   * Goal 60. Weak Mutation 951: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 0 -> 1
   * Goal 61. Weak Mutation 952: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 0
   * Goal 62. Weak Mutation 953: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 1
   * Goal 63. Weak Mutation 954: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> -1
   * Goal 64. Weak Mutation 955: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 44
   * Goal 65. Weak Mutation 956: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 45 -> 46
   * Goal 66. Weak Mutation 957: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceComparisonOperator != -> -1
   * Goal 67. Weak Mutation 960: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1556 - ReplaceConstant - 1 -> 0
   * Goal 68. Weak Mutation 968: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceConstant - 1 -> 0
   * Goal 69. Weak Mutation 969: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> %
   * Goal 70. Weak Mutation 970: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> -
   * Goal 71. Weak Mutation 971: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> *
   * Goal 72. Weak Mutation 972: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceArithmeticOperator + -> /
   * Goal 73. Weak Mutation 974: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1557 - ReplaceComparisonOperator <= -> <
   * Goal 74. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test070()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber("--");
  }

  //Test case number: 71
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: I4 Branch 191 IFEQ L1546 - false in context: org.apache.commons.lang.math.NumberUtils:isNumber(Ljava/lang/String;)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1546
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 1547
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 7. Weak Mutation 945: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1546 - ReplaceComparisonOperator == -> !=
   * Goal 8. Weak Mutation 946: org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:1547 - ReplaceConstant - 0 -> 1
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isNumber(Ljava/lang/String;)Z:false
   */

  @Test
  public void test071()  throws Throwable  {
      boolean boolean0 = NumberUtils.isNumber((String) null);
  }

  //Test case number: 72
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I4 Branch 188 IFEQ L1521 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I17 Branch 189 IF_ICMPGE L1524 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I24 Branch 190 IFNE L1525 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I24 Branch 190 IFNE L1525 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I4 Branch 188 IFEQ L1521 - true in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I17 Branch 189 IF_ICMPGE L1524 - false in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I24 Branch 190 IFNE L1525 - false in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I24 Branch 190 IFNE L1525 - true in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1521
   * Goal 10. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1524
   * Goal 11. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1525
   * Goal 12. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1526
   * Goal 13. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 15. Weak Mutation 930: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1521 - ReplaceComparisonOperator == -> !=
   * Goal 16. Weak Mutation 932: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1524 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 936: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1524 - ReplaceComparisonOperator >= -> -1
   * Goal 18. Weak Mutation 942: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1525 - ReplaceComparisonOperator != -> ==
   * Goal 19. Weak Mutation 943: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1526 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:false
   */

  @Test
  public void test072()  throws Throwable  {
      boolean boolean0 = NumberUtils.isDigits("1TVdCq0:k+A8");
  }

  //Test case number: 73
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I4 Branch 188 IFEQ L1521 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: I4 Branch 188 IFEQ L1521 - false in context: org.apache.commons.lang.math.NumberUtils:isDigits(Ljava/lang/String;)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1521
   * Goal 4. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 1522
   * Goal 5. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 7. Weak Mutation 930: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1521 - ReplaceComparisonOperator == -> !=
   * Goal 8. Weak Mutation 931: org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:1522 - ReplaceConstant - 0 -> 1
   * Goal 9. org.apache.commons.lang.math.NumberUtils.isDigits(Ljava/lang/String;)Z:false
   */

  @Test
  public void test073()  throws Throwable  {
      boolean boolean0 = NumberUtils.isDigits("");
  }

  //Test case number: 74
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 184 IFGE L1481 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I15 Branch 185 IFLE L1484 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 184 IFGE L1481 - true in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I15 Branch 185 IFLE L1484 - false in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1481
   * Goal 6. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1484
   * Goal 7. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1485
   * Goal 8. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 9. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 10. Weak Mutation 894: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1481 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 901: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1484 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 904: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1485 - ReplaceConstant - 1 -> 0
   * Goal 13. org.apache.commons.lang.math.NumberUtils.compare(FF)I:positive
   */

  @Test
  public void test074()  throws Throwable  {
      int int0 = NumberUtils.compare(3118.5F, (-1.0F));
  }

  //Test case number: 75
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 184 IFGE L1481 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 184 IFGE L1481 - false in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 3. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1481
   * Goal 4. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1482
   * Goal 5. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 6. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 7. Weak Mutation 893: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1481 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 896: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1482 - ReplaceConstant - -1 -> 0
   * Goal 9. Weak Mutation 897: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1482 - ReplaceConstant - -1 -> 1
   * Goal 10. Weak Mutation 898: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1482 - ReplaceConstant - -1 -> -2
   * Goal 11. org.apache.commons.lang.math.NumberUtils.compare(FF)I:negative
   */

  @Test
  public void test075()  throws Throwable  {
      int int0 = NumberUtils.compare((-1.0F), 2982.9F);
  }

  //Test case number: 76
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 184 IFGE L1481 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I15 Branch 185 IFLE L1484 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.compare(FF)I: I34 Branch 186 IF_ICMPNE L1493 - false
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I5 Branch 184 IFGE L1481 - true in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I15 Branch 185 IFLE L1484 - true in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.compare(FF)I: I34 Branch 186 IF_ICMPNE L1493 - false in context: org.apache.commons.lang.math.NumberUtils:compare(FF)I
   * Goal 7. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1481
   * Goal 8. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1484
   * Goal 9. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1491
   * Goal 10. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1492
   * Goal 11. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1493
   * Goal 12. org.apache.commons.lang.math.NumberUtils.compare(FF)I: Line 1494
   * Goal 13. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 14. org.apache.commons.lang.math.NumberUtils.compare(FF)I
   * Goal 15. Weak Mutation 895: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1481 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 903: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1484 - ReplaceComparisonOperator <= -> <
   * Goal 17. Weak Mutation 913: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1493 - ReplaceComparisonOperator != -> -1
   * Goal 18. Weak Mutation 916: org.apache.commons.lang.math.NumberUtils.compare(FF)I:1494 - ReplaceConstant - 0 -> 1
   * Goal 19. org.apache.commons.lang.math.NumberUtils.compare(FF)I:zero
   */

  @Test
  public void test076()  throws Throwable  {
      int int0 = NumberUtils.compare((float) (byte)0, (float) (byte)0);
  }

  //Test case number: 77
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 180 IFGE L1420 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I15 Branch 181 IFLE L1423 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 180 IFGE L1420 - true in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I15 Branch 181 IFLE L1423 - false in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1420
   * Goal 6. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1423
   * Goal 7. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1424
   * Goal 8. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 9. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 10. Weak Mutation 863: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1420 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 870: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1423 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 873: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1424 - ReplaceConstant - 1 -> 0
   * Goal 13. org.apache.commons.lang.math.NumberUtils.compare(DD)I:positive
   */

  @Test
  public void test077()  throws Throwable  {
      int int0 = NumberUtils.compare((-589.5879260444093), (-975.15));
  }

  //Test case number: 78
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 180 IFGE L1420 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 180 IFGE L1420 - false in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 3. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1420
   * Goal 4. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1421
   * Goal 5. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 6. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 7. Weak Mutation 862: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1420 - ReplaceComparisonOperator >= -> -1
   * Goal 8. Weak Mutation 865: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1421 - ReplaceConstant - -1 -> 0
   * Goal 9. Weak Mutation 866: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1421 - ReplaceConstant - -1 -> 1
   * Goal 10. Weak Mutation 867: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1421 - ReplaceConstant - -1 -> -2
   * Goal 11. org.apache.commons.lang.math.NumberUtils.compare(DD)I:negative
   */

  @Test
  public void test078()  throws Throwable  {
      int int0 = NumberUtils.compare(0.0, 298.477330333004);
  }

  //Test case number: 79
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 180 IFGE L1420 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I15 Branch 181 IFLE L1423 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.compare(DD)I: I35 Branch 182 IFNE L1432 - false
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I5 Branch 180 IFGE L1420 - true in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I15 Branch 181 IFLE L1423 - true in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.compare(DD)I: I35 Branch 182 IFNE L1432 - false in context: org.apache.commons.lang.math.NumberUtils:compare(DD)I
   * Goal 7. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1420
   * Goal 8. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1423
   * Goal 9. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1430
   * Goal 10. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1431
   * Goal 11. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1432
   * Goal 12. org.apache.commons.lang.math.NumberUtils.compare(DD)I: Line 1433
   * Goal 13. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 14. org.apache.commons.lang.math.NumberUtils.compare(DD)I
   * Goal 15. Weak Mutation 864: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1420 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 872: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1423 - ReplaceComparisonOperator <= -> <
   * Goal 17. Weak Mutation 878: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1432 - ReplaceComparisonOperator != -> -1
   * Goal 18. Weak Mutation 881: org.apache.commons.lang.math.NumberUtils.compare(DD)I:1433 - ReplaceConstant - 0 -> 1
   * Goal 19. org.apache.commons.lang.math.NumberUtils.compare(DD)I:zero
   */

  @Test
  public void test079()  throws Throwable  {
      int int0 = NumberUtils.compare((-2425.170779119218), (-2425.170779119218));
  }

  //Test case number: 80
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 178 IF_ICMPLE L1345 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 179 IF_ICMPLE L1348 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 178 IF_ICMPLE L1345 - false in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 179 IF_ICMPLE L1348 - true in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1345
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1346
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1348
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1351
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 11. Weak Mutation 833: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1345 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 847: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1348 - ReplaceComparisonOperator <= -> ==
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(BBB)B:zero
   */

  @Test
  public void test080()  throws Throwable  {
      byte byte0 = NumberUtils.max((byte) (-52), (byte)0, (byte) (-52));
  }

  //Test case number: 81
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 178 IF_ICMPLE L1345 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 179 IF_ICMPLE L1348 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I4 Branch 178 IF_ICMPLE L1345 - true in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(BBB)B: I13 Branch 179 IF_ICMPLE L1348 - false in context: org.apache.commons.lang.math.NumberUtils:max(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1345
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1348
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1349
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(BBB)B: Line 1351
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(BBB)B
   * Goal 11. Weak Mutation 835: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1345 - ReplaceComparisonOperator <= -> ==
   * Goal 12. Weak Mutation 845: org.apache.commons.lang.math.NumberUtils.max(BBB)B:1348 - ReplaceComparisonOperator <= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(BBB)B:positive
   */

  @Test
  public void test081()  throws Throwable  {
      byte byte0 = NumberUtils.max((byte)0, (byte) (-24), (byte)46);
  }

  //Test case number: 82
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 176 IF_ICMPLE L1327 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 177 IF_ICMPLE L1330 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 176 IF_ICMPLE L1327 - true in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 177 IF_ICMPLE L1330 - false in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1327
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1330
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1331
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1333
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 11. Weak Mutation 807: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1327 - ReplaceComparisonOperator <= -> <
   * Goal 12. Weak Mutation 818: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1330 - ReplaceComparisonOperator <= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(SSS)S:positive
   */

  @Test
  public void test082()  throws Throwable  {
      short short0 = NumberUtils.max((short)0, (short)0, (short)6269);
  }

  //Test case number: 83
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 176 IF_ICMPLE L1327 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 177 IF_ICMPLE L1330 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I4 Branch 176 IF_ICMPLE L1327 - false in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(SSS)S: I13 Branch 177 IF_ICMPLE L1330 - true in context: org.apache.commons.lang.math.NumberUtils:max(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1327
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1328
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1330
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(SSS)S: Line 1333
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(SSS)S
   * Goal 11. Weak Mutation 806: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1327 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 820: org.apache.commons.lang.math.NumberUtils.max(SSS)S:1330 - ReplaceComparisonOperator <= -> ==
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(SSS)S:positive
   */

  @Test
  public void test083()  throws Throwable  {
      short short0 = NumberUtils.max((short) (-1983), (short)892, (short) (-1983));
  }

  //Test case number: 84
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 174 IF_ICMPLE L1309 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 175 IF_ICMPLE L1312 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 174 IF_ICMPLE L1309 - false in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 175 IF_ICMPLE L1312 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1309
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1310
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1312
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1315
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 11. Weak Mutation 779: org.apache.commons.lang.math.NumberUtils.max(III)I:1309 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 793: org.apache.commons.lang.math.NumberUtils.max(III)I:1312 - ReplaceComparisonOperator <= -> ==
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(III)I:negative
   */

  @Test
  public void test084()  throws Throwable  {
      int int0 = NumberUtils.max((-2732), (-448), (-2732));
  }

  //Test case number: 85
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 174 IF_ICMPLE L1309 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 175 IF_ICMPLE L1312 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I4 Branch 174 IF_ICMPLE L1309 - true in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(III)I: I13 Branch 175 IF_ICMPLE L1312 - false in context: org.apache.commons.lang.math.NumberUtils:max(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1309
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1312
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1313
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(III)I: Line 1315
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(III)I
   * Goal 11. Weak Mutation 781: org.apache.commons.lang.math.NumberUtils.max(III)I:1309 - ReplaceComparisonOperator <= -> ==
   * Goal 12. Weak Mutation 791: org.apache.commons.lang.math.NumberUtils.max(III)I:1312 - ReplaceComparisonOperator <= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(III)I:positive
   */

  @Test
  public void test085()  throws Throwable  {
      int int0 = NumberUtils.max((-1), (-3300), 2034);
  }

  //Test case number: 86
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 172 IFLE L1291 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 173 IFLE L1294 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 172 IFLE L1291 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 173 IFLE L1294 - false in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1291
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1294
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1295
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1297
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 11. Weak Mutation 763: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1291 - ReplaceComparisonOperator <= -> ==
   * Goal 12. Weak Mutation 768: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1294 - ReplaceComparisonOperator <= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(JJJ)J:zero
   */

  @Test
  public void test086()  throws Throwable  {
      long long0 = NumberUtils.max((-621L), (long) (-1706), (long) 0);
  }

  //Test case number: 87
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 172 IFLE L1291 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 173 IFLE L1294 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 172 IFLE L1291 - false in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 173 IFLE L1294 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1291
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1292
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1294
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1297
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 10. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 11. Weak Mutation 762: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1291 - ReplaceComparisonOperator <= -> -1
   * Goal 12. Weak Mutation 770: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1294 - ReplaceComparisonOperator <= -> <
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max(JJJ)J:positive
   */

  @Test
  public void test087()  throws Throwable  {
      long long0 = NumberUtils.max(0L, 1485L, 1485L);
  }

  //Test case number: 88
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 172 IFLE L1291 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 173 IFLE L1294 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I5 Branch 172 IFLE L1291 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max(JJJ)J: I15 Branch 173 IFLE L1294 - true in context: org.apache.commons.lang.math.NumberUtils:max(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1291
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1294
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max(JJJ)J: Line 1297
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max(JJJ)J
   * Goal 10. Weak Mutation 764: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1291 - ReplaceComparisonOperator <= -> <
   * Goal 11. Weak Mutation 770: org.apache.commons.lang.math.NumberUtils.max(JJJ)J:1294 - ReplaceComparisonOperator <= -> <
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max(JJJ)J:negative
   */

  @Test
  public void test088()  throws Throwable  {
      long long0 = NumberUtils.max((-981L), (-981L), (-981L));
  }

  //Test case number: 89
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 170 IF_ICMPGE L1241 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 171 IF_ICMPGE L1244 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 170 IF_ICMPGE L1241 - false in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 171 IF_ICMPGE L1244 - true in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1241
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1242
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1244
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1247
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 11. Weak Mutation 733: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1241 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 746: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1244 - ReplaceComparisonOperator >= -> >
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(BBB)B:negative
   */

  @Test
  public void test089()  throws Throwable  {
      byte byte0 = NumberUtils.min((byte)65, (byte) (-90), (byte) (-90));
  }

  //Test case number: 90
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 170 IF_ICMPGE L1241 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 171 IF_ICMPGE L1244 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I4 Branch 170 IF_ICMPGE L1241 - true in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(BBB)B: I13 Branch 171 IF_ICMPGE L1244 - false in context: org.apache.commons.lang.math.NumberUtils:min(BBB)B
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1241
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1244
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1245
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(BBB)B: Line 1247
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(BBB)B
   * Goal 11. Weak Mutation 735: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1241 - ReplaceComparisonOperator >= -> ==
   * Goal 12. Weak Mutation 745: org.apache.commons.lang.math.NumberUtils.min(BBB)B:1244 - ReplaceComparisonOperator >= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(BBB)B:positive
   */

  @Test
  public void test090()  throws Throwable  {
      byte byte0 = NumberUtils.min((byte)102, (byte)110, (byte)81);
  }

  //Test case number: 91
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 168 IF_ICMPGE L1223 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 169 IF_ICMPGE L1226 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 168 IF_ICMPGE L1223 - false in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 169 IF_ICMPGE L1226 - false in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1223
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1224
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1226
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1227
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1229
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 12. Weak Mutation 706: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1223 - ReplaceComparisonOperator >= -> -1
   * Goal 13. Weak Mutation 718: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1226 - ReplaceComparisonOperator >= -> -1
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min(SSS)S:negative
   */

  @Test
  public void test091()  throws Throwable  {
      short short0 = NumberUtils.min((short) (byte)76, (short)45, (short) (-520));
  }

  //Test case number: 92
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 168 IF_ICMPGE L1223 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 169 IF_ICMPGE L1226 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I4 Branch 168 IF_ICMPGE L1223 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(SSS)S: I13 Branch 169 IF_ICMPGE L1226 - true in context: org.apache.commons.lang.math.NumberUtils:min(SSS)S
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1223
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1226
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(SSS)S: Line 1229
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(SSS)S
   * Goal 10. Weak Mutation 708: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1223 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 720: org.apache.commons.lang.math.NumberUtils.min(SSS)S:1226 - ReplaceComparisonOperator >= -> ==
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(SSS)S:negative
   */

  @Test
  public void test092()  throws Throwable  {
      short short0 = NumberUtils.min((short) (-2795), (short)0, (short)0);
  }

  //Test case number: 93
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 166 IF_ICMPGE L1205 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 167 IF_ICMPGE L1208 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 166 IF_ICMPGE L1205 - false in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 167 IF_ICMPGE L1208 - true in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1205
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1206
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1208
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1211
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 11. Weak Mutation 679: org.apache.commons.lang.math.NumberUtils.min(III)I:1205 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 693: org.apache.commons.lang.math.NumberUtils.min(III)I:1208 - ReplaceComparisonOperator >= -> ==
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(III)I:negative
   */

  @Test
  public void test093()  throws Throwable  {
      int int0 = NumberUtils.min(0, (-2163), 0);
  }

  //Test case number: 94
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 166 IF_ICMPGE L1205 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 167 IF_ICMPGE L1208 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I4 Branch 166 IF_ICMPGE L1205 - true in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(III)I: I13 Branch 167 IF_ICMPGE L1208 - false in context: org.apache.commons.lang.math.NumberUtils:min(III)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1205
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1208
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1209
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(III)I: Line 1211
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(III)I
   * Goal 11. Weak Mutation 681: org.apache.commons.lang.math.NumberUtils.min(III)I:1205 - ReplaceComparisonOperator >= -> ==
   * Goal 12. Weak Mutation 691: org.apache.commons.lang.math.NumberUtils.min(III)I:1208 - ReplaceComparisonOperator >= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(III)I:zero
   */

  @Test
  public void test094()  throws Throwable  {
      int int0 = NumberUtils.min(1, 1605, 0);
  }

  //Test case number: 95
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 164 IFGE L1187 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 165 IFGE L1190 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 164 IFGE L1187 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 165 IFGE L1190 - false in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1187
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1190
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1191
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1193
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 11. Weak Mutation 663: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1187 - ReplaceComparisonOperator >= -> ==
   * Goal 12. Weak Mutation 668: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1190 - ReplaceComparisonOperator >= -> -1
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(JJJ)J:negative
   */

  @Test
  public void test095()  throws Throwable  {
      long long0 = NumberUtils.min(882L, 2586L, (-2795L));
  }

  //Test case number: 96
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 164 IFGE L1187 - false
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 165 IFGE L1190 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 164 IFGE L1187 - false in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 165 IFGE L1190 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1187
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1188
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1190
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1193
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 10. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 11. Weak Mutation 662: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1187 - ReplaceComparisonOperator >= -> -1
   * Goal 12. Weak Mutation 669: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1190 - ReplaceComparisonOperator >= -> ==
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min(JJJ)J:negative
   */

  @Test
  public void test096()  throws Throwable  {
      long long0 = NumberUtils.min((-64L), (-1831L), (long) (byte) (-128));
  }

  //Test case number: 97
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 164 IFGE L1187 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 165 IFGE L1190 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I5 Branch 164 IFGE L1187 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min(JJJ)J: I15 Branch 165 IFGE L1190 - true in context: org.apache.commons.lang.math.NumberUtils:min(JJJ)J
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1187
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1190
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min(JJJ)J: Line 1193
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min(JJJ)J
   * Goal 10. Weak Mutation 664: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1187 - ReplaceComparisonOperator >= -> >
   * Goal 11. Weak Mutation 670: org.apache.commons.lang.math.NumberUtils.min(JJJ)J:1190 - ReplaceComparisonOperator >= -> >
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min(JJJ)J:zero
   */

  @Test
  public void test097()  throws Throwable  {
      long long0 = NumberUtils.min(0L, 0L, 0L);
  }

  //Test case number: 98
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 160 IFNONNULL L1159 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 161 IFNE L1161 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 162 IF_ICMPGE L1167 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 162 IF_ICMPGE L1167 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 163 IFLE L1168 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 163 IFLE L1168 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 160 IFNONNULL L1159 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 161 IFNE L1161 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 162 IF_ICMPGE L1167 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 162 IF_ICMPGE L1167 - false in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 163 IFLE L1168 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 163 IFLE L1168 - false in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1159
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1161
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1166
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1167
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1168
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1169
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1173
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 22. Weak Mutation 633: org.apache.commons.lang.math.NumberUtils.max([F)F:1159 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 637: org.apache.commons.lang.math.NumberUtils.max([F)F:1161 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 641: org.apache.commons.lang.math.NumberUtils.max([F)F:1166 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 642: org.apache.commons.lang.math.NumberUtils.max([F)F:1167 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 646: org.apache.commons.lang.math.NumberUtils.max([F)F:1167 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 647: org.apache.commons.lang.math.NumberUtils.max([F)F:1167 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 653: org.apache.commons.lang.math.NumberUtils.max([F)F:1168 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 654: org.apache.commons.lang.math.NumberUtils.max([F)F:1168 - ReplaceComparisonOperator <= -> ==
   * Goal 30. org.apache.commons.lang.math.NumberUtils.max([F)F:positive
   */

  @Test
  public void test098()  throws Throwable  {
      float[] floatArray0 = new float[9];
      floatArray0[1] = (float) (short)1607;
      float float0 = NumberUtils.max(floatArray0);
  }

  //Test case number: 99
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 160 IFNONNULL L1159 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 161 IFNE L1161 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 160 IFNONNULL L1159 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 161 IFNE L1161 - false in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 5. max([F)F_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1159
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1161
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1162
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 10. Weak Mutation 633: org.apache.commons.lang.math.NumberUtils.max([F)F:1159 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 636: org.apache.commons.lang.math.NumberUtils.max([F)F:1161 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 639: org.apache.commons.lang.math.NumberUtils.max([F)F:1162 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 640: org.apache.commons.lang.math.NumberUtils.max([F)F:1162 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test099()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(floatArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 100
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 160 IFNONNULL L1159 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 161 IFNE L1161 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 162 IF_ICMPGE L1167 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 162 IF_ICMPGE L1167 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 163 IFLE L1168 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I3 Branch 160 IFNONNULL L1159 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I28 Branch 161 IFNE L1161 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 162 IF_ICMPGE L1167 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I63 Branch 162 IF_ICMPGE L1167 - false in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([F)F: I71 Branch 163 IFLE L1168 - true in context: org.apache.commons.lang.math.NumberUtils:max([F)F
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1159
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1161
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1166
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1167
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1168
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([F)F: Line 1173
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([F)F
   * Goal 19. Weak Mutation 633: org.apache.commons.lang.math.NumberUtils.max([F)F:1159 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 637: org.apache.commons.lang.math.NumberUtils.max([F)F:1161 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 641: org.apache.commons.lang.math.NumberUtils.max([F)F:1166 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 642: org.apache.commons.lang.math.NumberUtils.max([F)F:1167 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 646: org.apache.commons.lang.math.NumberUtils.max([F)F:1167 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 647: org.apache.commons.lang.math.NumberUtils.max([F)F:1167 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 655: org.apache.commons.lang.math.NumberUtils.max([F)F:1168 - ReplaceComparisonOperator <= -> <
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([F)F:zero
   */

  @Test
  public void test100()  throws Throwable  {
      float[] floatArray0 = new float[3];
      float float0 = NumberUtils.max(floatArray0);
  }

  //Test case number: 101
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 156 IFNONNULL L1132 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 157 IFNE L1134 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 158 IF_ICMPGE L1140 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 158 IF_ICMPGE L1140 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 159 IFLE L1141 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 159 IFLE L1141 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 156 IFNONNULL L1132 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 157 IFNE L1134 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 158 IF_ICMPGE L1140 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I63 Branch 158 IF_ICMPGE L1140 - false in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 159 IFLE L1141 - false in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I71 Branch 159 IFLE L1141 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1132
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1134
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1139
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1140
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1141
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1142
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1146
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 22. Weak Mutation 606: org.apache.commons.lang.math.NumberUtils.max([D)D:1132 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 610: org.apache.commons.lang.math.NumberUtils.max([D)D:1134 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 614: org.apache.commons.lang.math.NumberUtils.max([D)D:1139 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 615: org.apache.commons.lang.math.NumberUtils.max([D)D:1140 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 619: org.apache.commons.lang.math.NumberUtils.max([D)D:1140 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 620: org.apache.commons.lang.math.NumberUtils.max([D)D:1140 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 626: org.apache.commons.lang.math.NumberUtils.max([D)D:1141 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 628: org.apache.commons.lang.math.NumberUtils.max([D)D:1141 - ReplaceComparisonOperator <= -> <
   * Goal 30. org.apache.commons.lang.math.NumberUtils.max([D)D:zero
   */

  @Test
  public void test101()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) (byte) (-125);
      double double0 = NumberUtils.max(doubleArray0);
  }

  //Test case number: 102
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 156 IFNONNULL L1132 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 157 IFNE L1134 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I3 Branch 156 IFNONNULL L1132 - true in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([D)D: I28 Branch 157 IFNE L1134 - false in context: org.apache.commons.lang.math.NumberUtils:max([D)D
   * Goal 5. max([D)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1132
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1134
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([D)D: Line 1135
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([D)D
   * Goal 10. Weak Mutation 606: org.apache.commons.lang.math.NumberUtils.max([D)D:1132 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 609: org.apache.commons.lang.math.NumberUtils.max([D)D:1134 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 612: org.apache.commons.lang.math.NumberUtils.max([D)D:1135 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 613: org.apache.commons.lang.math.NumberUtils.max([D)D:1135 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test102()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(doubleArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 103
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 152 IFNONNULL L1105 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 153 IFNE L1107 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 155 IF_ICMPLE L1114 - false
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 152 IFNONNULL L1105 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 153 IFNE L1107 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - false in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 155 IF_ICMPLE L1114 - false in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1105
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1107
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1112
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1113
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1114
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1115
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1119
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 20. Weak Mutation 575: org.apache.commons.lang.math.NumberUtils.max([B)B:1105 - ReplaceComparisonOperator != null -> = null
   * Goal 21. Weak Mutation 579: org.apache.commons.lang.math.NumberUtils.max([B)B:1107 - ReplaceComparisonOperator != -> <
   * Goal 22. Weak Mutation 583: org.apache.commons.lang.math.NumberUtils.max([B)B:1112 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 584: org.apache.commons.lang.math.NumberUtils.max([B)B:1113 - ReplaceConstant - 1 -> 0
   * Goal 24. Weak Mutation 588: org.apache.commons.lang.math.NumberUtils.max([B)B:1113 - ReplaceComparisonOperator >= -> -1
   * Goal 25. Weak Mutation 589: org.apache.commons.lang.math.NumberUtils.max([B)B:1113 - ReplaceComparisonOperator >= -> >
   * Goal 26. Weak Mutation 597: org.apache.commons.lang.math.NumberUtils.max([B)B:1114 - ReplaceComparisonOperator <= -> -1
   * Goal 27. org.apache.commons.lang.math.NumberUtils.max([B)B:zero
   */

  @Test
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-52);
      byte byte0 = NumberUtils.max(byteArray0);
  }

  //Test case number: 104
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 152 IFNONNULL L1105 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 153 IFNE L1107 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 155 IF_ICMPLE L1114 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 152 IFNONNULL L1105 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 153 IFNE L1107 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I63 Branch 154 IF_ICMPGE L1113 - false in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I70 Branch 155 IF_ICMPLE L1114 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1105
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1107
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1112
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1113
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1114
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1119
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 19. Weak Mutation 575: org.apache.commons.lang.math.NumberUtils.max([B)B:1105 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 579: org.apache.commons.lang.math.NumberUtils.max([B)B:1107 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 583: org.apache.commons.lang.math.NumberUtils.max([B)B:1112 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 584: org.apache.commons.lang.math.NumberUtils.max([B)B:1113 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 588: org.apache.commons.lang.math.NumberUtils.max([B)B:1113 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 589: org.apache.commons.lang.math.NumberUtils.max([B)B:1113 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 598: org.apache.commons.lang.math.NumberUtils.max([B)B:1114 - ReplaceComparisonOperator <= -> <
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([B)B:zero
   */

  @Test
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = NumberUtils.max(byteArray0);
  }

  //Test case number: 105
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 152 IFNONNULL L1105 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 153 IFNE L1107 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I3 Branch 152 IFNONNULL L1105 - true in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([B)B: I28 Branch 153 IFNE L1107 - false in context: org.apache.commons.lang.math.NumberUtils:max([B)B
   * Goal 5. max([B)B_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1105
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1107
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([B)B: Line 1108
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([B)B
   * Goal 10. Weak Mutation 575: org.apache.commons.lang.math.NumberUtils.max([B)B:1105 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 578: org.apache.commons.lang.math.NumberUtils.max([B)B:1107 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 581: org.apache.commons.lang.math.NumberUtils.max([B)B:1108 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 582: org.apache.commons.lang.math.NumberUtils.max([B)B:1108 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(byteArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 106
  /*
   * 31 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 148 IFNONNULL L1078 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 149 IFNE L1080 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 150 IF_ICMPGE L1086 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 150 IF_ICMPGE L1086 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 151 IF_ICMPLE L1087 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 151 IF_ICMPLE L1087 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 148 IFNONNULL L1078 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 149 IFNE L1080 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 150 IF_ICMPGE L1086 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 150 IF_ICMPGE L1086 - false in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 151 IF_ICMPLE L1087 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 151 IF_ICMPLE L1087 - false in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1078
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1080
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1085
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1086
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1087
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1088
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1092
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 22. Weak Mutation 544: org.apache.commons.lang.math.NumberUtils.max([S)S:1078 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 548: org.apache.commons.lang.math.NumberUtils.max([S)S:1080 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 552: org.apache.commons.lang.math.NumberUtils.max([S)S:1085 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 553: org.apache.commons.lang.math.NumberUtils.max([S)S:1086 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 557: org.apache.commons.lang.math.NumberUtils.max([S)S:1086 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 558: org.apache.commons.lang.math.NumberUtils.max([S)S:1086 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 566: org.apache.commons.lang.math.NumberUtils.max([S)S:1087 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 567: org.apache.commons.lang.math.NumberUtils.max([S)S:1087 - ReplaceComparisonOperator <= -> <
   * Goal 30. Weak Mutation 568: org.apache.commons.lang.math.NumberUtils.max([S)S:1087 - ReplaceComparisonOperator <= -> ==
   * Goal 31. org.apache.commons.lang.math.NumberUtils.max([S)S:positive
   */

  @Test
  public void test106()  throws Throwable  {
      short[] shortArray0 = new short[8];
      shortArray0[3] = (short)1607;
      short short0 = NumberUtils.max(shortArray0);
  }

  //Test case number: 107
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 148 IFNONNULL L1078 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 149 IFNE L1080 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 148 IFNONNULL L1078 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 149 IFNE L1080 - false in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 5. max([S)S_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1078
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1080
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1081
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 10. Weak Mutation 544: org.apache.commons.lang.math.NumberUtils.max([S)S:1078 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 547: org.apache.commons.lang.math.NumberUtils.max([S)S:1080 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 550: org.apache.commons.lang.math.NumberUtils.max([S)S:1081 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 551: org.apache.commons.lang.math.NumberUtils.max([S)S:1081 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test107()  throws Throwable  {
      short[] shortArray0 = new short[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(shortArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 108
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 148 IFNONNULL L1078 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 148 IFNONNULL L1078 - false in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 3. max([S)S_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1078
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1079
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 7. Weak Mutation 544: org.apache.commons.lang.math.NumberUtils.max([S)S:1078 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 545: org.apache.commons.lang.math.NumberUtils.max([S)S:1079 - ReplaceConstant - The Array must not be null -> 
   * Goal 9. Weak Mutation 546: org.apache.commons.lang.math.NumberUtils.max([S)S:1079 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test108()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.max((short[]) null);
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 109
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 148 IFNONNULL L1078 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 149 IFNE L1080 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 150 IF_ICMPGE L1086 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 150 IF_ICMPGE L1086 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 151 IF_ICMPLE L1087 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I3 Branch 148 IFNONNULL L1078 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I28 Branch 149 IFNE L1080 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 150 IF_ICMPGE L1086 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I63 Branch 150 IF_ICMPGE L1086 - false in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([S)S: I70 Branch 151 IF_ICMPLE L1087 - true in context: org.apache.commons.lang.math.NumberUtils:max([S)S
   * Goal 11. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1078
   * Goal 12. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1080
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1085
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1086
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1087
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([S)S: Line 1092
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([S)S
   * Goal 19. Weak Mutation 544: org.apache.commons.lang.math.NumberUtils.max([S)S:1078 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 548: org.apache.commons.lang.math.NumberUtils.max([S)S:1080 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 552: org.apache.commons.lang.math.NumberUtils.max([S)S:1085 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 553: org.apache.commons.lang.math.NumberUtils.max([S)S:1086 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 557: org.apache.commons.lang.math.NumberUtils.max([S)S:1086 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 558: org.apache.commons.lang.math.NumberUtils.max([S)S:1086 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 567: org.apache.commons.lang.math.NumberUtils.max([S)S:1087 - ReplaceComparisonOperator <= -> <
   * Goal 26. org.apache.commons.lang.math.NumberUtils.max([S)S:zero
   */

  @Test
  public void test109()  throws Throwable  {
      short[] shortArray0 = new short[8];
      short short0 = NumberUtils.max(shortArray0);
  }

  //Test case number: 110
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 144 IFNONNULL L1051 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 145 IFNE L1053 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 144 IFNONNULL L1051 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 145 IFNE L1053 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I63 Branch 146 IF_ICMPGE L1059 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I70 Branch 147 IF_ICMPLE L1060 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1051
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1053
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1058
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1059
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1060
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1061
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1065
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 22. Weak Mutation 513: org.apache.commons.lang.math.NumberUtils.max([I)I:1051 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 517: org.apache.commons.lang.math.NumberUtils.max([I)I:1053 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 521: org.apache.commons.lang.math.NumberUtils.max([I)I:1058 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 522: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 526: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 527: org.apache.commons.lang.math.NumberUtils.max([I)I:1059 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 535: org.apache.commons.lang.math.NumberUtils.max([I)I:1060 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 536: org.apache.commons.lang.math.NumberUtils.max([I)I:1060 - ReplaceComparisonOperator <= -> <
   * Goal 30. org.apache.commons.lang.math.NumberUtils.max([I)I:zero
   */

  @Test
  public void test110()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = (-1474);
      int int0 = NumberUtils.max(intArray0);
  }

  //Test case number: 111
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 144 IFNONNULL L1051 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 145 IFNE L1053 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I3 Branch 144 IFNONNULL L1051 - true in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.max([I)I: I28 Branch 145 IFNE L1053 - false in context: org.apache.commons.lang.math.NumberUtils:max([I)I
   * Goal 5. max([I)I_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1051
   * Goal 7. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1053
   * Goal 8. org.apache.commons.lang.math.NumberUtils.max([I)I: Line 1054
   * Goal 9. org.apache.commons.lang.math.NumberUtils.max([I)I
   * Goal 10. Weak Mutation 513: org.apache.commons.lang.math.NumberUtils.max([I)I:1051 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 516: org.apache.commons.lang.math.NumberUtils.max([I)I:1053 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 519: org.apache.commons.lang.math.NumberUtils.max([I)I:1054 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 520: org.apache.commons.lang.math.NumberUtils.max([I)I:1054 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test111()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        NumberUtils.max(intArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 112
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 140 IFNONNULL L1024 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 141 IFNE L1026 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 142 IF_ICMPGE L1032 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 142 IF_ICMPGE L1032 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 143 IFLE L1033 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 143 IFLE L1033 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 140 IFNONNULL L1024 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I28 Branch 141 IFNE L1026 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 142 IF_ICMPGE L1032 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I63 Branch 142 IF_ICMPGE L1032 - false in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 143 IFLE L1033 - false in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I71 Branch 143 IFLE L1033 - true in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 13. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1024
   * Goal 14. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1026
   * Goal 15. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1031
   * Goal 16. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1032
   * Goal 17. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1033
   * Goal 18. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1034
   * Goal 19. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1038
   * Goal 20. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 21. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 22. Weak Mutation 486: org.apache.commons.lang.math.NumberUtils.max([J)J:1024 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 490: org.apache.commons.lang.math.NumberUtils.max([J)J:1026 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 494: org.apache.commons.lang.math.NumberUtils.max([J)J:1031 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 495: org.apache.commons.lang.math.NumberUtils.max([J)J:1032 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 499: org.apache.commons.lang.math.NumberUtils.max([J)J:1032 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 500: org.apache.commons.lang.math.NumberUtils.max([J)J:1032 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 506: org.apache.commons.lang.math.NumberUtils.max([J)J:1033 - ReplaceComparisonOperator <= -> -1
   * Goal 29. Weak Mutation 508: org.apache.commons.lang.math.NumberUtils.max([J)J:1033 - ReplaceComparisonOperator <= -> <
   * Goal 30. org.apache.commons.lang.math.NumberUtils.max([J)J:positive
   */

  @Test
  public void test112()  throws Throwable  {
      long[] longArray0 = new long[9];
      longArray0[8] = 3184L;
      long long0 = NumberUtils.max(longArray0);
  }

  //Test case number: 113
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 140 IFNONNULL L1024 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max([J)J: I3 Branch 140 IFNONNULL L1024 - false in context: org.apache.commons.lang.math.NumberUtils:max([J)J
   * Goal 3. max([J)J_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1024
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max([J)J: Line 1025
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max([J)J
   * Goal 7. Weak Mutation 486: org.apache.commons.lang.math.NumberUtils.max([J)J:1024 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 487: org.apache.commons.lang.math.NumberUtils.max([J)J:1025 - ReplaceConstant - The Array must not be null -> 
   * Goal 9. Weak Mutation 488: org.apache.commons.lang.math.NumberUtils.max([J)J:1025 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test113()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.max((long[]) null);
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 114
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 136 IFNONNULL L995 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 137 IFNE L997 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 139 IFGE L1004 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 139 IFGE L1004 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 136 IFNONNULL L995 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 137 IFNE L997 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - false in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I63 Branch 138 IF_ICMPGE L1003 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 139 IFGE L1004 - false in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I71 Branch 139 IFGE L1004 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 995
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 997
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1002
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1003
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1004
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1005
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 1009
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 22. Weak Mutation 459: org.apache.commons.lang.math.NumberUtils.min([F)F:995 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 463: org.apache.commons.lang.math.NumberUtils.min([F)F:997 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 467: org.apache.commons.lang.math.NumberUtils.min([F)F:1002 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 468: org.apache.commons.lang.math.NumberUtils.min([F)F:1003 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 472: org.apache.commons.lang.math.NumberUtils.min([F)F:1003 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 473: org.apache.commons.lang.math.NumberUtils.min([F)F:1003 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 479: org.apache.commons.lang.math.NumberUtils.min([F)F:1004 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 481: org.apache.commons.lang.math.NumberUtils.min([F)F:1004 - ReplaceComparisonOperator >= -> >
   * Goal 30. org.apache.commons.lang.math.NumberUtils.min([F)F:zero
   */

  @Test
  public void test114()  throws Throwable  {
      float[] floatArray0 = new float[5];
      floatArray0[0] = 1.0F;
      float float0 = NumberUtils.min(floatArray0);
  }

  //Test case number: 115
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 136 IFNONNULL L995 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 137 IFNE L997 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I3 Branch 136 IFNONNULL L995 - true in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([F)F: I28 Branch 137 IFNE L997 - false in context: org.apache.commons.lang.math.NumberUtils:min([F)F
   * Goal 5. min([F)F_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 995
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 997
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([F)F: Line 998
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([F)F
   * Goal 10. Weak Mutation 459: org.apache.commons.lang.math.NumberUtils.min([F)F:995 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 462: org.apache.commons.lang.math.NumberUtils.min([F)F:997 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 465: org.apache.commons.lang.math.NumberUtils.min([F)F:998 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 466: org.apache.commons.lang.math.NumberUtils.min([F)F:998 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test115()  throws Throwable  {
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(floatArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 116
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 132 IFNONNULL L968 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 133 IFNE L970 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 135 IFGE L977 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 135 IFGE L977 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 132 IFNONNULL L968 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 133 IFNE L970 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - false in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 135 IFGE L977 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 135 IFGE L977 - false in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 968
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 970
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 975
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 976
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 977
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 978
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 982
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 22. Weak Mutation 432: org.apache.commons.lang.math.NumberUtils.min([D)D:968 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 436: org.apache.commons.lang.math.NumberUtils.min([D)D:970 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 440: org.apache.commons.lang.math.NumberUtils.min([D)D:975 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 441: org.apache.commons.lang.math.NumberUtils.min([D)D:976 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 445: org.apache.commons.lang.math.NumberUtils.min([D)D:976 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 446: org.apache.commons.lang.math.NumberUtils.min([D)D:976 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 452: org.apache.commons.lang.math.NumberUtils.min([D)D:977 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 453: org.apache.commons.lang.math.NumberUtils.min([D)D:977 - ReplaceComparisonOperator >= -> ==
   * Goal 30. org.apache.commons.lang.math.NumberUtils.min([D)D:negative
   */

  @Test
  public void test116()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[1] = (double) (byte) (-42);
      double double0 = NumberUtils.min(doubleArray0);
  }

  //Test case number: 117
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 132 IFNONNULL L968 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 133 IFNE L970 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 132 IFNONNULL L968 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 133 IFNE L970 - false in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 5. min([D)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 968
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 970
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 971
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 10. Weak Mutation 432: org.apache.commons.lang.math.NumberUtils.min([D)D:968 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 435: org.apache.commons.lang.math.NumberUtils.min([D)D:970 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 438: org.apache.commons.lang.math.NumberUtils.min([D)D:971 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 439: org.apache.commons.lang.math.NumberUtils.min([D)D:971 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test117()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(doubleArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 118
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 132 IFNONNULL L968 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 132 IFNONNULL L968 - false in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 3. min([D)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 968
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 969
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 7. Weak Mutation 432: org.apache.commons.lang.math.NumberUtils.min([D)D:968 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 433: org.apache.commons.lang.math.NumberUtils.min([D)D:969 - ReplaceConstant - The Array must not be null -> 
   * Goal 9. Weak Mutation 434: org.apache.commons.lang.math.NumberUtils.min([D)D:969 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test118()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.min((double[]) null);
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 119
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 132 IFNONNULL L968 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 133 IFNE L970 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 135 IFGE L977 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I3 Branch 132 IFNONNULL L968 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I28 Branch 133 IFNE L970 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - false in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I63 Branch 134 IF_ICMPGE L976 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([D)D: I71 Branch 135 IFGE L977 - true in context: org.apache.commons.lang.math.NumberUtils:min([D)D
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 968
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 970
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 975
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 976
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 977
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([D)D: Line 982
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([D)D
   * Goal 19. Weak Mutation 432: org.apache.commons.lang.math.NumberUtils.min([D)D:968 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 436: org.apache.commons.lang.math.NumberUtils.min([D)D:970 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 440: org.apache.commons.lang.math.NumberUtils.min([D)D:975 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 441: org.apache.commons.lang.math.NumberUtils.min([D)D:976 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 445: org.apache.commons.lang.math.NumberUtils.min([D)D:976 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 446: org.apache.commons.lang.math.NumberUtils.min([D)D:976 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 454: org.apache.commons.lang.math.NumberUtils.min([D)D:977 - ReplaceComparisonOperator >= -> >
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([D)D:zero
   */

  @Test
  public void test119()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      double double0 = NumberUtils.min(doubleArray0);
  }

  //Test case number: 120
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 128 IFNONNULL L941 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 129 IFNE L943 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 128 IFNONNULL L941 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 129 IFNE L943 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 5. min([B)B_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 941
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 943
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 944
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 10. Weak Mutation 401: org.apache.commons.lang.math.NumberUtils.min([B)B:941 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 404: org.apache.commons.lang.math.NumberUtils.min([B)B:943 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 407: org.apache.commons.lang.math.NumberUtils.min([B)B:944 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 408: org.apache.commons.lang.math.NumberUtils.min([B)B:944 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(byteArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 121
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 128 IFNONNULL L941 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 129 IFNE L943 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 131 IF_ICMPGE L950 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I3 Branch 128 IFNONNULL L941 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I28 Branch 129 IFNE L943 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I63 Branch 130 IF_ICMPGE L949 - false in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([B)B: I70 Branch 131 IF_ICMPGE L950 - true in context: org.apache.commons.lang.math.NumberUtils:min([B)B
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 941
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 943
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 948
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 949
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 950
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([B)B: Line 955
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([B)B
   * Goal 19. Weak Mutation 401: org.apache.commons.lang.math.NumberUtils.min([B)B:941 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 405: org.apache.commons.lang.math.NumberUtils.min([B)B:943 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 409: org.apache.commons.lang.math.NumberUtils.min([B)B:948 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 410: org.apache.commons.lang.math.NumberUtils.min([B)B:949 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 414: org.apache.commons.lang.math.NumberUtils.min([B)B:949 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 415: org.apache.commons.lang.math.NumberUtils.min([B)B:949 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 424: org.apache.commons.lang.math.NumberUtils.min([B)B:950 - ReplaceComparisonOperator >= -> >
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([B)B:zero
   */

  @Test
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = NumberUtils.min(byteArray0);
  }

  //Test case number: 122
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 124 IFNONNULL L914 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 125 IFNE L916 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 127 IF_ICMPGE L923 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 127 IF_ICMPGE L923 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 124 IFNONNULL L914 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 125 IFNE L916 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - false in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 127 IF_ICMPGE L923 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 127 IF_ICMPGE L923 - false in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 914
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 916
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 921
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 922
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 923
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 924
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 928
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 22. Weak Mutation 370: org.apache.commons.lang.math.NumberUtils.min([S)S:914 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 374: org.apache.commons.lang.math.NumberUtils.min([S)S:916 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 378: org.apache.commons.lang.math.NumberUtils.min([S)S:921 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 379: org.apache.commons.lang.math.NumberUtils.min([S)S:922 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 383: org.apache.commons.lang.math.NumberUtils.min([S)S:922 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 384: org.apache.commons.lang.math.NumberUtils.min([S)S:922 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 392: org.apache.commons.lang.math.NumberUtils.min([S)S:923 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 394: org.apache.commons.lang.math.NumberUtils.min([S)S:923 - ReplaceComparisonOperator >= -> ==
   * Goal 30. org.apache.commons.lang.math.NumberUtils.min([S)S:negative
   */

  @Test
  public void test122()  throws Throwable  {
      short[] shortArray0 = new short[3];
      shortArray0[1] = (short) (byte) (-125);
      short short0 = NumberUtils.min(shortArray0);
  }

  //Test case number: 123
  /*
   * 26 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 124 IFNONNULL L914 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 125 IFNE L916 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 127 IF_ICMPGE L923 - true
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I3 Branch 124 IFNONNULL L914 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I28 Branch 125 IFNE L916 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - false in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I63 Branch 126 IF_ICMPGE L922 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([S)S: I70 Branch 127 IF_ICMPGE L923 - true in context: org.apache.commons.lang.math.NumberUtils:min([S)S
   * Goal 11. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 914
   * Goal 12. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 916
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 921
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 922
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 923
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([S)S: Line 928
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([S)S
   * Goal 19. Weak Mutation 370: org.apache.commons.lang.math.NumberUtils.min([S)S:914 - ReplaceComparisonOperator != null -> = null
   * Goal 20. Weak Mutation 374: org.apache.commons.lang.math.NumberUtils.min([S)S:916 - ReplaceComparisonOperator != -> <
   * Goal 21. Weak Mutation 378: org.apache.commons.lang.math.NumberUtils.min([S)S:921 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 379: org.apache.commons.lang.math.NumberUtils.min([S)S:922 - ReplaceConstant - 1 -> 0
   * Goal 23. Weak Mutation 383: org.apache.commons.lang.math.NumberUtils.min([S)S:922 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 384: org.apache.commons.lang.math.NumberUtils.min([S)S:922 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 393: org.apache.commons.lang.math.NumberUtils.min([S)S:923 - ReplaceComparisonOperator >= -> >
   * Goal 26. org.apache.commons.lang.math.NumberUtils.min([S)S:zero
   */

  @Test
  public void test123()  throws Throwable  {
      short[] shortArray0 = new short[3];
      short short0 = NumberUtils.min(shortArray0);
  }

  //Test case number: 124
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 120 IFNONNULL L887 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 121 IFNE L889 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 123 IF_ICMPGE L896 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 123 IF_ICMPGE L896 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 120 IFNONNULL L887 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 121 IFNE L889 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I63 Branch 122 IF_ICMPGE L895 - false in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 123 IF_ICMPGE L896 - false in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I70 Branch 123 IF_ICMPGE L896 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 887
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 889
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 894
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 895
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 896
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 897
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 901
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 22. Weak Mutation 339: org.apache.commons.lang.math.NumberUtils.min([I)I:887 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 343: org.apache.commons.lang.math.NumberUtils.min([I)I:889 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 347: org.apache.commons.lang.math.NumberUtils.min([I)I:894 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 348: org.apache.commons.lang.math.NumberUtils.min([I)I:895 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 352: org.apache.commons.lang.math.NumberUtils.min([I)I:895 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 353: org.apache.commons.lang.math.NumberUtils.min([I)I:895 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 361: org.apache.commons.lang.math.NumberUtils.min([I)I:896 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 362: org.apache.commons.lang.math.NumberUtils.min([I)I:896 - ReplaceComparisonOperator >= -> >
   * Goal 30. org.apache.commons.lang.math.NumberUtils.min([I)I:zero
   */

  @Test
  public void test124()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (int) (short)1860;
      int int0 = NumberUtils.min(intArray0);
  }

  //Test case number: 125
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 120 IFNONNULL L887 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 121 IFNE L889 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I3 Branch 120 IFNONNULL L887 - true in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([I)I: I28 Branch 121 IFNE L889 - false in context: org.apache.commons.lang.math.NumberUtils:min([I)I
   * Goal 5. min([I)I_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 887
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 889
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([I)I: Line 890
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([I)I
   * Goal 10. Weak Mutation 339: org.apache.commons.lang.math.NumberUtils.min([I)I:887 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 342: org.apache.commons.lang.math.NumberUtils.min([I)I:889 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 345: org.apache.commons.lang.math.NumberUtils.min([I)I:890 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 346: org.apache.commons.lang.math.NumberUtils.min([I)I:890 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test125()  throws Throwable  {
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(intArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 126
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 116 IFNONNULL L860 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 117 IFNE L862 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 119 IFGE L869 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 119 IFGE L869 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 116 IFNONNULL L860 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 117 IFNE L862 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I63 Branch 118 IF_ICMPGE L868 - false in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 119 IFGE L869 - false in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I71 Branch 119 IFGE L869 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 13. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 860
   * Goal 14. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 862
   * Goal 15. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 867
   * Goal 16. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 868
   * Goal 17. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 869
   * Goal 18. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 870
   * Goal 19. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 874
   * Goal 20. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 21. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 22. Weak Mutation 312: org.apache.commons.lang.math.NumberUtils.min([J)J:860 - ReplaceComparisonOperator != null -> = null
   * Goal 23. Weak Mutation 316: org.apache.commons.lang.math.NumberUtils.min([J)J:862 - ReplaceComparisonOperator != -> <
   * Goal 24. Weak Mutation 320: org.apache.commons.lang.math.NumberUtils.min([J)J:867 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 321: org.apache.commons.lang.math.NumberUtils.min([J)J:868 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 325: org.apache.commons.lang.math.NumberUtils.min([J)J:868 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 326: org.apache.commons.lang.math.NumberUtils.min([J)J:868 - ReplaceComparisonOperator >= -> >
   * Goal 28. Weak Mutation 332: org.apache.commons.lang.math.NumberUtils.min([J)J:869 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 334: org.apache.commons.lang.math.NumberUtils.min([J)J:869 - ReplaceComparisonOperator >= -> >
   * Goal 30. org.apache.commons.lang.math.NumberUtils.min([J)J:zero
   */

  @Test
  public void test126()  throws Throwable  {
      long[] longArray0 = new long[8];
      longArray0[0] = 1985L;
      long long0 = NumberUtils.min(longArray0);
  }

  //Test case number: 127
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 116 IFNONNULL L860 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 117 IFNE L862 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I3 Branch 116 IFNONNULL L860 - true in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.min([J)J: I28 Branch 117 IFNE L862 - false in context: org.apache.commons.lang.math.NumberUtils:min([J)J
   * Goal 5. min([J)J_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 860
   * Goal 7. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 862
   * Goal 8. org.apache.commons.lang.math.NumberUtils.min([J)J: Line 863
   * Goal 9. org.apache.commons.lang.math.NumberUtils.min([J)J
   * Goal 10. Weak Mutation 312: org.apache.commons.lang.math.NumberUtils.min([J)J:860 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 315: org.apache.commons.lang.math.NumberUtils.min([J)J:862 - ReplaceComparisonOperator != -> -1
   * Goal 12. Weak Mutation 318: org.apache.commons.lang.math.NumberUtils.min([J)J:863 - ReplaceConstant - Array cannot be empty. -> 
   * Goal 13. Weak Mutation 319: org.apache.commons.lang.math.NumberUtils.min([J)J:863 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test127()  throws Throwable  {
      long[] longArray0 = new long[0];
      // Undeclared exception!
      try { 
        NumberUtils.min(longArray0);
      } catch(IllegalArgumentException e) {
         //
         // Array cannot be empty.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 128
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 110 IF_ACMPNE L829 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 110 IF_ACMPNE L829 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 829
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 830
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 7. Weak Mutation 285: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:829 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 286: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:830 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:true
   */

  @Test
  public void test128()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      boolean boolean0 = NumberUtils.equals(doubleArray0, doubleArray0);
  }

  //Test case number: 129
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 110 IF_ACMPNE L829 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 111 IFNULL L832 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 112 IFNONNULL L832 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 113 IF_ICMPEQ L835 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I4 Branch 110 IF_ACMPNE L829 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I14 Branch 112 IFNONNULL L832 - true in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I12 Branch 111 IFNULL L832 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: I25 Branch 113 IF_ICMPEQ L835 - false in context: org.apache.commons.lang.math.NumberUtils:equals([D[D)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 829
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 832
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 835
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z: Line 836
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z
   * Goal 15. Weak Mutation 285: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:829 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 287: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:832 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 288: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:832 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 292: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:835 - ReplaceComparisonOperator == -> <=
   * Goal 19. Weak Mutation 293: org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:836 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([D[D)Z:false
   */

  @Test
  public void test129()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[6];
      boolean boolean0 = NumberUtils.equals(doubleArray0, doubleArray1);
  }

  //Test case number: 130
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 104 IF_ACMPNE L802 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 104 IF_ACMPNE L802 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 802
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 803
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 7. Weak Mutation 258: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:802 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 259: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:803 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:true
   */

  @Test
  public void test130()  throws Throwable  {
      float[] floatArray0 = new float[2];
      boolean boolean0 = NumberUtils.equals(floatArray0, floatArray0);
  }

  //Test case number: 131
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 104 IF_ACMPNE L802 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I12 Branch 105 IFNULL L805 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I14 Branch 106 IFNONNULL L805 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I25 Branch 107 IF_ICMPEQ L808 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I4 Branch 104 IF_ACMPNE L802 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I14 Branch 106 IFNONNULL L805 - true in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I12 Branch 105 IFNULL L805 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: I25 Branch 107 IF_ICMPEQ L808 - false in context: org.apache.commons.lang.math.NumberUtils:equals([F[F)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 802
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 805
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 808
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z: Line 809
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z
   * Goal 15. Weak Mutation 258: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:802 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 260: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:805 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 261: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:805 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 264: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:808 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 266: org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:809 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([F[F)Z:false
   */

  @Test
  public void test131()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float[] floatArray1 = new float[0];
      boolean boolean0 = NumberUtils.equals(floatArray0, floatArray1);
  }

  //Test case number: 132
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 98 IF_ACMPNE L775 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 99 IFNULL L778 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 100 IFNONNULL L778 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 101 IF_ICMPEQ L781 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 98 IF_ACMPNE L775 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 99 IFNULL L778 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 100 IFNONNULL L778 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I25 Branch 101 IF_ICMPEQ L781 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 775
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 778
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 781
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 782
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 15. Weak Mutation 231: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:775 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 233: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:778 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 234: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:778 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 238: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:781 - ReplaceComparisonOperator == -> <=
   * Goal 19. Weak Mutation 239: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:782 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:false
   */

  @Test
  public void test132()  throws Throwable  {
      long[] longArray0 = new long[3];
      long[] longArray1 = new long[5];
      boolean boolean0 = NumberUtils.equals(longArray0, longArray1);
  }

  //Test case number: 133
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 98 IF_ACMPNE L775 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 98 IF_ACMPNE L775 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 775
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 776
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 7. Weak Mutation 231: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:775 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 232: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:776 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:true
   */

  @Test
  public void test133()  throws Throwable  {
      long[] longArray0 = new long[3];
      boolean boolean0 = NumberUtils.equals(longArray0, longArray0);
  }

  //Test case number: 134
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 98 IF_ACMPNE L775 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 99 IFNULL L778 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 100 IFNONNULL L778 - false
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I4 Branch 98 IF_ACMPNE L775 - true in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I12 Branch 99 IFNULL L778 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: I14 Branch 100 IFNONNULL L778 - false in context: org.apache.commons.lang.math.NumberUtils:equals([J[J)Z
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 775
   * Goal 8. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 778
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z: Line 779
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z
   * Goal 12. Weak Mutation 231: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:775 - ReplaceComparisonOperator != -> ==
   * Goal 13. Weak Mutation 233: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:778 - ReplaceComparisonOperator = null -> != null
   * Goal 14. Weak Mutation 234: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:778 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 235: org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:779 - ReplaceConstant - 0 -> 1
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([J[J)Z:false
   */

  @Test
  public void test134()  throws Throwable  {
      long[] longArray0 = new long[3];
      boolean boolean0 = NumberUtils.equals(longArray0, (long[]) null);
  }

  //Test case number: 135
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 92 IF_ACMPNE L748 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 93 IFNULL L751 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 94 IFNONNULL L751 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 95 IF_ICMPEQ L754 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 96 IF_ICMPGE L758 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I47 Branch 97 IF_ICMPEQ L759 - false
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 92 IF_ACMPNE L748 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 93 IFNULL L751 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 94 IFNONNULL L751 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 95 IF_ICMPEQ L754 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 96 IF_ICMPGE L758 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I47 Branch 97 IF_ICMPEQ L759 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 748
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 751
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 754
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 758
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 759
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 760
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 21. Weak Mutation 204: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:748 - ReplaceComparisonOperator != -> ==
   * Goal 22. Weak Mutation 206: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:751 - ReplaceComparisonOperator = null -> != null
   * Goal 23. Weak Mutation 207: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:751 - ReplaceComparisonOperator != null -> = null
   * Goal 24. Weak Mutation 209: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:754 - ReplaceComparisonOperator == -> -2
   * Goal 25. Weak Mutation 213: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:758 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 217: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:758 - ReplaceComparisonOperator >= -> -1
   * Goal 27. Weak Mutation 227: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:759 - ReplaceComparisonOperator == -> >=
   * Goal 28. Weak Mutation 229: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:760 - ReplaceConstant - 0 -> 1
   * Goal 29. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:false
   */

  @Test
  public void test135()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte)32;
      int[] intArray1 = new int[6];
      boolean boolean0 = NumberUtils.equals(intArray0, intArray1);
  }

  //Test case number: 136
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 92 IF_ACMPNE L748 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 93 IFNULL L751 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 94 IFNONNULL L751 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 95 IF_ICMPEQ L754 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 96 IF_ICMPGE L758 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 96 IF_ICMPGE L758 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I47 Branch 97 IF_ICMPEQ L759 - true
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 92 IF_ACMPNE L748 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 93 IFNULL L751 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 94 IFNONNULL L751 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 95 IF_ICMPEQ L754 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 96 IF_ICMPGE L758 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I38 Branch 96 IF_ICMPGE L758 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I47 Branch 97 IF_ICMPEQ L759 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 748
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 751
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 754
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 758
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 759
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 764
   * Goal 21. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 22. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 23. Weak Mutation 204: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:748 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 206: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:751 - ReplaceComparisonOperator = null -> != null
   * Goal 25. Weak Mutation 207: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:751 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 209: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:754 - ReplaceComparisonOperator == -> -2
   * Goal 27. Weak Mutation 213: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:758 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 217: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:758 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 218: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:758 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 226: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:759 - ReplaceComparisonOperator == -> -2
   * Goal 31. Weak Mutation 230: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:764 - ReplaceConstant - 1 -> 0
   * Goal 32. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:true
   */

  @Test
  public void test136()  throws Throwable  {
      int[] intArray0 = new int[6];
      int[] intArray1 = new int[6];
      boolean boolean0 = NumberUtils.equals(intArray0, intArray1);
  }

  //Test case number: 137
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 92 IF_ACMPNE L748 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 92 IF_ACMPNE L748 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 748
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 749
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 7. Weak Mutation 204: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:748 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 205: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:749 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:true
   */

  @Test
  public void test137()  throws Throwable  {
      int[] intArray0 = new int[1];
      boolean boolean0 = NumberUtils.equals(intArray0, intArray0);
  }

  //Test case number: 138
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 92 IF_ACMPNE L748 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 93 IFNULL L751 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 94 IFNONNULL L751 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 95 IF_ICMPEQ L754 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I4 Branch 92 IF_ACMPNE L748 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I12 Branch 93 IFNULL L751 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I14 Branch 94 IFNONNULL L751 - true in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: I25 Branch 95 IF_ICMPEQ L754 - false in context: org.apache.commons.lang.math.NumberUtils:equals([I[I)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 748
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 751
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 754
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z: Line 755
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z
   * Goal 15. Weak Mutation 204: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:748 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 206: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:751 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 207: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:751 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 210: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:754 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 212: org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:755 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([I[I)Z:false
   */

  @Test
  public void test138()  throws Throwable  {
      int[] intArray0 = new int[9];
      int[] intArray1 = new int[3];
      boolean boolean0 = NumberUtils.equals(intArray0, intArray1);
  }

  //Test case number: 139
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 86 IF_ACMPNE L721 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 86 IF_ACMPNE L721 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 721
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 722
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 7. Weak Mutation 177: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:721 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 178: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:722 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:true
   */

  @Test
  public void test139()  throws Throwable  {
      short[] shortArray0 = new short[2];
      boolean boolean0 = NumberUtils.equals(shortArray0, shortArray0);
  }

  //Test case number: 140
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 86 IF_ACMPNE L721 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 87 IFNULL L724 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 88 IFNONNULL L724 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 89 IF_ICMPEQ L727 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I4 Branch 86 IF_ACMPNE L721 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I12 Branch 87 IFNULL L724 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I14 Branch 88 IFNONNULL L724 - true in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: I25 Branch 89 IF_ICMPEQ L727 - false in context: org.apache.commons.lang.math.NumberUtils:equals([S[S)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 721
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 724
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 727
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z: Line 728
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z
   * Goal 15. Weak Mutation 177: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:721 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 179: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:724 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 180: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:724 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 183: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:727 - ReplaceComparisonOperator == -> >=
   * Goal 19. Weak Mutation 185: org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:728 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([S[S)Z:false
   */

  @Test
  public void test140()  throws Throwable  {
      short[] shortArray0 = new short[6];
      short[] shortArray1 = new short[1];
      boolean boolean0 = NumberUtils.equals(shortArray0, shortArray1);
  }

  //Test case number: 141
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 81 IFNULL L697 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 82 IFNONNULL L697 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 83 IF_ICMPEQ L700 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I38 Branch 84 IF_ICMPGE L704 - false
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I47 Branch 85 IF_ICMPEQ L705 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I47 Branch 85 IF_ICMPEQ L705 - false
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 81 IFNULL L697 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 82 IFNONNULL L697 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 83 IF_ICMPEQ L700 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I38 Branch 84 IF_ICMPGE L704 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I47 Branch 85 IF_ICMPEQ L705 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I47 Branch 85 IF_ICMPEQ L705 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 694
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 697
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 700
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 704
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 705
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 706
   * Goal 21. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 22. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 23. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:694 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 152: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:697 - ReplaceComparisonOperator = null -> != null
   * Goal 25. Weak Mutation 153: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:697 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 155: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:700 - ReplaceComparisonOperator == -> -2
   * Goal 27. Weak Mutation 159: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:704 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 163: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:704 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 172: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:705 - ReplaceComparisonOperator == -> -2
   * Goal 30. Weak Mutation 174: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:705 - ReplaceComparisonOperator == -> <=
   * Goal 31. Weak Mutation 175: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:706 - ReplaceConstant - 0 -> 1
   * Goal 32. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:false
   */

  @Test
  public void test141()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-127);
      byte[] byteArray1 = new byte[4];
      boolean boolean0 = NumberUtils.equals(byteArray0, byteArray1);
  }

  //Test case number: 142
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 81 IFNULL L697 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 82 IFNONNULL L697 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 83 IF_ICMPEQ L700 - true
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I38 Branch 84 IF_ICMPGE L704 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I38 Branch 84 IF_ICMPGE L704 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I47 Branch 85 IF_ICMPEQ L705 - true
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 81 IFNULL L697 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 82 IFNONNULL L697 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 83 IF_ICMPEQ L700 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I38 Branch 84 IF_ICMPGE L704 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I38 Branch 84 IF_ICMPGE L704 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I47 Branch 85 IF_ICMPEQ L705 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 15. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 694
   * Goal 16. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 697
   * Goal 17. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 700
   * Goal 18. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 704
   * Goal 19. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 705
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 710
   * Goal 21. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 22. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 23. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:694 - ReplaceComparisonOperator != -> ==
   * Goal 24. Weak Mutation 152: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:697 - ReplaceComparisonOperator = null -> != null
   * Goal 25. Weak Mutation 153: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:697 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 155: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:700 - ReplaceComparisonOperator == -> -2
   * Goal 27. Weak Mutation 159: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:704 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 163: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:704 - ReplaceComparisonOperator >= -> -1
   * Goal 29. Weak Mutation 164: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:704 - ReplaceComparisonOperator >= -> >
   * Goal 30. Weak Mutation 172: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:705 - ReplaceComparisonOperator == -> -2
   * Goal 31. Weak Mutation 176: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:710 - ReplaceConstant - 1 -> 0
   * Goal 32. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:true
   */

  @Test
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[4];
      boolean boolean0 = NumberUtils.equals(byteArray0, byteArray1);
  }

  //Test case number: 143
  /*
   * 9 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 694
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 695
   * Goal 5. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 6. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 7. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:694 - ReplaceComparisonOperator != -> ==
   * Goal 8. Weak Mutation 151: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:695 - ReplaceConstant - 1 -> 0
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:true
   */

  @Test
  public void test143()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      boolean boolean0 = NumberUtils.equals(byteArray0, byteArray0);
  }

  //Test case number: 144
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 81 IFNULL L697 - false
   * Goal 3. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 82 IFNONNULL L697 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 83 IF_ICMPEQ L700 - false
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I4 Branch 80 IF_ACMPNE L694 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I12 Branch 81 IFNULL L697 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 7. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I14 Branch 82 IFNONNULL L697 - true in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 8. Branch org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: I25 Branch 83 IF_ICMPEQ L700 - false in context: org.apache.commons.lang.math.NumberUtils:equals([B[B)Z
   * Goal 9. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 694
   * Goal 10. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 697
   * Goal 11. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 700
   * Goal 12. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z: Line 701
   * Goal 13. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 14. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z
   * Goal 15. Weak Mutation 150: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:694 - ReplaceComparisonOperator != -> ==
   * Goal 16. Weak Mutation 152: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:697 - ReplaceComparisonOperator = null -> != null
   * Goal 17. Weak Mutation 153: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:697 - ReplaceComparisonOperator != null -> = null
   * Goal 18. Weak Mutation 157: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:700 - ReplaceComparisonOperator == -> <=
   * Goal 19. Weak Mutation 158: org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:701 - ReplaceConstant - 0 -> 1
   * Goal 20. org.apache.commons.lang.math.NumberUtils.equals([B[B)Z:false
   */

  @Test
  public void test144()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[7];
      boolean boolean0 = NumberUtils.equals(byteArray0, byteArray1);
  }

  //Test case number: 145
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 78 IFNONNULL L674 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 79 IFEQ L678 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 78 IFNONNULL L674 - true in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 79 IFEQ L678 - false in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 5. createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;_java.lang.NumberFormatException_EXPLICIT
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 674
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 678
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 679
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 10. Weak Mutation 147: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:674 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 148: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:678 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 149: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:679 - ReplaceConstant - A blank string is not a valid number -> 
   */

  @Test
  public void test145()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createBigDecimal("");
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 146
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 78 IFNONNULL L674 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 78 IFNONNULL L674 - false in context: org.apache.commons.lang.math.NumberUtils:createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 674
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 675
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 7. Weak Mutation 147: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:674 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:null
   */

  @Test
  public void test146()  throws Throwable  {
      BigDecimal bigDecimal0 = NumberUtils.createBigDecimal((String) null);
  }

  //Test case number: 147
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: I3 Branch 77 IFNONNULL L658 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: I3 Branch 77 IFNONNULL L658 - false in context: org.apache.commons.lang.math.NumberUtils:createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 658
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 659
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   * Goal 7. Weak Mutation 146: org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;:658 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;:null
   */

  @Test
  public void test147()  throws Throwable  {
      BigInteger bigInteger0 = NumberUtils.createBigInteger((String) null);
  }

  //Test case number: 148
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: I3 Branch 76 IFNONNULL L642 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: I3 Branch 76 IFNONNULL L642 - false in context: org.apache.commons.lang.math.NumberUtils:createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 642
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 643
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 7. Weak Mutation 145: org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;:642 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;:null
   */

  @Test
  public void test148()  throws Throwable  {
      Long long0 = NumberUtils.createLong((String) null);
  }

  //Test case number: 149
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 74 IFNONNULL L608 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 74 IFNONNULL L608 - false in context: org.apache.commons.lang.math.NumberUtils:createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 608
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 609
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;
   * Goal 7. Weak Mutation 143: org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;:608 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;:null
   */

  @Test
  public void test149()  throws Throwable  {
      Double double0 = NumberUtils.createDouble((String) null);
  }

  //Test case number: 150
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: I3 Branch 73 IFNONNULL L592 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: I3 Branch 73 IFNONNULL L592 - false in context: org.apache.commons.lang.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 592
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 593
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 7. Weak Mutation 142: org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;:592 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;:null
   */

  @Test
  public void test150()  throws Throwable  {
      Float float0 = NumberUtils.createFloat((String) null);
  }

  //Test case number: 151
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: I3 Branch 73 IFNONNULL L592 - true
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: I3 Branch 73 IFNONNULL L592 - true in context: org.apache.commons.lang.math.NumberUtils:createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 3. createFloat(Ljava/lang/String;)Ljava/lang/Float;_java.lang.NumberFormatException_IMPLICIT
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 592
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 595
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 7. Weak Mutation 142: org.apache.commons.lang.math.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;:592 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test151()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.createFloat("");
      } catch(NumberFormatException e) {
         //
         // empty String
         //
         assertThrownBy("sun.misc.FloatingDecimal", e);
      }
  }

  //Test case number: 152
  /*
   * 137 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I134 Branch 13 IF_ICMPLE L433 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I160 Branch 15 IF_ICMPLE L441 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I198 Branch 17 IFEQ L448 - true
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 19 LOOKUPSWITCH L449 Case 68 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 20 LOOKUPSWITCH L449 Case 70 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 21 LOOKUPSWITCH L449 Case 76 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 22 LOOKUPSWITCH L449 Case 100 - true
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 23 LOOKUPSWITCH L449 Case 102 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 24 LOOKUPSWITCH L449 Case 108 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 25 LOOKUPSWITCH L449 Default-Case - false
   * Goal 18. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 69 IFNONNULL L570 - true
   * Goal 19. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 70 IFLT L573 - false
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 71 IF_ICMPEQ L574 - false
   * Goal 21. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: I3 Branch 74 IFNONNULL L608 - true
   * Goal 22. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I3 Branch 78 IFNONNULL L674 - true
   * Goal 23. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: I12 Branch 79 IFEQ L678 - true
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I134 Branch 13 IF_ICMPLE L433 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I160 Branch 15 IF_ICMPLE L441 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I198 Branch 17 IFEQ L448 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 23 LOOKUPSWITCH L449 Case 102 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 25 LOOKUPSWITCH L449 Default-Case - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 22 LOOKUPSWITCH L449 Case 100 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 37. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 20 LOOKUPSWITCH L449 Case 70 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 38. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 24 LOOKUPSWITCH L449 Case 108 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 39. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 21 LOOKUPSWITCH L449 Case 76 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 40. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 19 LOOKUPSWITCH L449 Case 68 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 41. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 69 IFNONNULL L570 - true in context: 
   * Goal 42. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 70 IFLT L573 - false in context: 
   * Goal 43. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 71 IF_ICMPEQ L574 - false in context: 
   * Goal 44. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 45. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 674
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 678
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 681
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 608
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 611
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 54. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 55. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 56. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 57. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 58. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 433
   * Goal 59. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 436
   * Goal 60. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 438
   * Goal 61. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 62. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 441
   * Goal 63. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 444
   * Goal 64. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 447
   * Goal 65. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 448
   * Goal 66. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 449
   * Goal 67. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 496
   * Goal 68. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 500
   * Goal 69. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 504
   * Goal 70. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 505
   * Goal 71. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 510
   * Goal 72. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 570
   * Goal 73. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 573
   * Goal 74. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 574
   * Goal 75. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 575
   * Goal 76. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 77. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 78. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 79. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 80. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 81. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 82. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 83. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 84. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 85. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 86. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 87. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 88. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 89. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 90. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 91. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 92. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 93. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 94. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 95. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 96. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 97. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 98. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 99. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 100. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 101. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 102. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 103. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 104. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 105. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 106. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 107. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 108. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 109. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 110. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 111. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 112. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 113. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 114. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 115. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 116. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 117. Weak Mutation 76: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 118. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 119. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 120. Weak Mutation 80: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> <
   * Goal 121. Weak Mutation 112: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:570 - ReplaceComparisonOperator != null -> = null
   * Goal 122. Weak Mutation 114: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceConstant - 1 -> 0
   * Goal 123. Weak Mutation 115: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> +
   * Goal 124. Weak Mutation 116: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> %
   * Goal 125. Weak Mutation 117: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> *
   * Goal 126. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> /
   * Goal 127. Weak Mutation 123: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceComparisonOperator < -> !=
   * Goal 128. Weak Mutation 128: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 0
   * Goal 129. Weak Mutation 129: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 1
   * Goal 130. Weak Mutation 130: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> -1
   * Goal 131. Weak Mutation 131: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 47
   * Goal 132. Weak Mutation 132: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 49
   * Goal 133. Weak Mutation 134: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceComparisonOperator == -> >=
   * Goal 134. Weak Mutation 136: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:575 - ReplaceConstant - 0 -> 1
   * Goal 135. Weak Mutation 143: org.apache.commons.lang.math.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;:608 - ReplaceComparisonOperator != null -> = null
   * Goal 136. Weak Mutation 147: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:674 - ReplaceComparisonOperator != null -> = null
   * Goal 137. Weak Mutation 148: org.apache.commons.lang.math.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;:678 - ReplaceComparisonOperator == -> !=
   */

  @Test
  public void test152()  throws Throwable  {
      try { 
        NumberUtils.createNumber("=@d");
      } catch(NumberFormatException e) {
         //
         // =@d is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 153
  /*
   * 142 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I134 Branch 13 IF_ICMPLE L433 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I160 Branch 15 IF_ICMPLE L441 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I166 Branch 16 IF_ICMPGE L441 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I198 Branch 17 IFEQ L448 - true
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 19 LOOKUPSWITCH L449 Case 68 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 20 LOOKUPSWITCH L449 Case 70 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 21 LOOKUPSWITCH L449 Case 76 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 22 LOOKUPSWITCH L449 Case 100 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 23 LOOKUPSWITCH L449 Case 102 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 24 LOOKUPSWITCH L449 Case 108 - true
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 25 LOOKUPSWITCH L449 Default-Case - false
   * Goal 19. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 26 IFNONNULL L452 - false
   * Goal 20. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I217 Branch 27 IFNONNULL L452 - true
   * Goal 21. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I239 Branch 31 IFNONNULL L454 - false
   * Goal 22. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I241 Branch 32 IFNONNULL L454 - true
   * Goal 23. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I262 Branch 36 IFNONNULL L456 - false
   * Goal 24. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I264 Branch 37 IFNONNULL L456 - true
   * Goal 25. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I318 Branch 46 IFNONNULL L467 - false
   * Goal 26. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I320 Branch 47 IFNONNULL L467 - true
   * Goal 27. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 69 IFNONNULL L570 - true
   * Goal 28. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 70 IFLT L573 - false
   * Goal 29. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 71 IF_ICMPEQ L574 - false
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I134 Branch 13 IF_ICMPLE L433 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 37. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 38. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I166 Branch 16 IF_ICMPGE L441 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 39. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I160 Branch 15 IF_ICMPLE L441 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 40. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I198 Branch 17 IFEQ L448 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 41. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 22 LOOKUPSWITCH L449 Case 100 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 42. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 23 LOOKUPSWITCH L449 Case 102 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 43. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 24 LOOKUPSWITCH L449 Case 108 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 44. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 25 LOOKUPSWITCH L449 Default-Case - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 45. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 20 LOOKUPSWITCH L449 Case 70 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 46. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 21 LOOKUPSWITCH L449 Case 76 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 47. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 19 LOOKUPSWITCH L449 Case 68 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 48. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I215 Branch 26 IFNONNULL L452 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 49. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I217 Branch 27 IFNONNULL L452 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 50. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I241 Branch 32 IFNONNULL L454 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 51. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I239 Branch 31 IFNONNULL L454 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 52. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I262 Branch 36 IFNONNULL L456 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 53. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I264 Branch 37 IFNONNULL L456 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 54. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I320 Branch 47 IFNONNULL L467 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 55. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I318 Branch 46 IFNONNULL L467 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 56. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 69 IFNONNULL L570 - true in context: 
   * Goal 57. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 70 IFLT L573 - false in context: 
   * Goal 58. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 71 IF_ICMPEQ L574 - false in context: 
   * Goal 59. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 60. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 61. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 62. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 63. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 64. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 65. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 66. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 67. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 68. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 433
   * Goal 69. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 434
   * Goal 70. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 438
   * Goal 71. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 72. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 441
   * Goal 73. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 442
   * Goal 74. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 447
   * Goal 75. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 448
   * Goal 76. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 449
   * Goal 77. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 452
   * Goal 78. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 467
   * Goal 79. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 478
   * Goal 80. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 570
   * Goal 81. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 573
   * Goal 82. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 574
   * Goal 83. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 575
   * Goal 84. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 85. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 86. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 87. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 88. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 89. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 90. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 91. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 92. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 93. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 94. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 95. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 96. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 97. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 98. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 99. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 100. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 101. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 102. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 103. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 104. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 105. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 106. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 107. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 108. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 109. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 110. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 111. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 112. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 113. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 114. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 115. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 116. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 117. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 118. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 119. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 120. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 121. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 122. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 123. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 124. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 125. Weak Mutation 76: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 126. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 127. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 128. Weak Mutation 80: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> <
   * Goal 129. Weak Mutation 112: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:570 - ReplaceComparisonOperator != null -> = null
   * Goal 130. Weak Mutation 114: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceConstant - 1 -> 0
   * Goal 131. Weak Mutation 115: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> +
   * Goal 132. Weak Mutation 116: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> %
   * Goal 133. Weak Mutation 117: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> *
   * Goal 134. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> /
   * Goal 135. Weak Mutation 123: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceComparisonOperator < -> !=
   * Goal 136. Weak Mutation 128: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 0
   * Goal 137. Weak Mutation 129: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 1
   * Goal 138. Weak Mutation 130: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> -1
   * Goal 139. Weak Mutation 131: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 47
   * Goal 140. Weak Mutation 132: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 49
   * Goal 141. Weak Mutation 134: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceComparisonOperator == -> >=
   * Goal 142. Weak Mutation 136: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:575 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test153()  throws Throwable  {
      try { 
        NumberUtils.createNumber("Strings must not be null");
      } catch(NumberFormatException e) {
         //
         // Strings must not be null is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 154
  /*
   * 79 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I89 Branch 12 IF_ICMPGE L424 - false
   * Goal 9. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 10. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 11. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 12. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 13. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 14. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I89 Branch 12 IF_ICMPGE L424 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 17. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 19. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 20. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 21. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 22. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 23. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 24. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 25. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 26. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 423
   * Goal 27. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 424
   * Goal 28. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 425
   * Goal 29. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 31. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 32. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 33. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 35. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 36. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 38. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 39. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 41. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 42. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 43. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 44. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 45. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 46. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 47. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 48. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 49. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 50. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 51. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 52. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 53. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 54. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 55. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 56. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 57. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 58. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 59. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 60. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 61. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 62. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 63. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 64. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 65. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 66. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 67. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 68. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 69. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 70. Weak Mutation 76: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 71. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 72. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 73. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> -1
   * Goal 74. Weak Mutation 85: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 0
   * Goal 75. Weak Mutation 86: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 1
   * Goal 76. Weak Mutation 87: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> -2
   * Goal 77. Weak Mutation 88: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceComparisonOperator <= -> -1
   * Goal 78. Weak Mutation 97: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:424 - ReplaceComparisonOperator >= -> -1
   * Goal 79. Weak Mutation 100: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:425 - ReplaceConstant -  is not a valid number. -> 
   */

  @Test
  public void test154()  throws Throwable  {
      try { 
        NumberUtils.createNumber("d:]ME..d2:GJz7VOzJ.");
      } catch(NumberFormatException e) {
         //
         // d:]ME..d2:GJz7VOzJ. is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 155
  /*
   * 137 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - false
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I89 Branch 12 IF_ICMPGE L424 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - false
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I160 Branch 15 IF_ICMPLE L441 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I166 Branch 16 IF_ICMPGE L441 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I198 Branch 17 IFEQ L448 - true
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 19 LOOKUPSWITCH L449 Case 68 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 20 LOOKUPSWITCH L449 Case 70 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 21 LOOKUPSWITCH L449 Case 76 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 22 LOOKUPSWITCH L449 Case 100 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 23 LOOKUPSWITCH L449 Case 102 - false
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 24 LOOKUPSWITCH L449 Case 108 - false
   * Goal 19. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 25 LOOKUPSWITCH L449 Default-Case - true
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 69 IFNONNULL L570 - true
   * Goal 21. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 70 IFLT L573 - false
   * Goal 22. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 71 IF_ICMPEQ L574 - false
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I89 Branch 12 IF_ICMPGE L424 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I166 Branch 16 IF_ICMPGE L441 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I160 Branch 15 IF_ICMPLE L441 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I198 Branch 17 IFEQ L448 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 22 LOOKUPSWITCH L449 Case 100 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 25 LOOKUPSWITCH L449 Default-Case - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 37. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 23 LOOKUPSWITCH L449 Case 102 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 38. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 20 LOOKUPSWITCH L449 Case 70 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 39. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 24 LOOKUPSWITCH L449 Case 108 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 40. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 21 LOOKUPSWITCH L449 Case 76 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 41. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 19 LOOKUPSWITCH L449 Case 68 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 42. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 69 IFNONNULL L570 - true in context: 
   * Goal 43. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 70 IFLT L573 - false in context: 
   * Goal 44. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I24 Branch 71 IF_ICMPEQ L574 - false in context: 
   * Goal 45. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 54. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 423
   * Goal 55. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 424
   * Goal 56. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 427
   * Goal 57. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 431
   * Goal 58. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 59. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 441
   * Goal 60. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 442
   * Goal 61. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 447
   * Goal 62. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 448
   * Goal 63. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 449
   * Goal 64. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 510
   * Goal 65. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 570
   * Goal 66. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 573
   * Goal 67. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 574
   * Goal 68. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 575
   * Goal 69. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 70. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 71. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 72. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 73. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 75. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 76. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 77. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 78. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 79. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 80. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 81. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 82. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 83. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 84. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 85. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 86. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 87. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 88. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 89. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 90. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 91. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 92. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 93. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 94. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 95. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 96. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 97. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 98. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 99. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 100. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 101. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 102. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 103. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 104. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 105. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 106. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 107. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 108. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 109. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 110. Weak Mutation 76: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 111. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 112. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 113. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> -1
   * Goal 114. Weak Mutation 85: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 0
   * Goal 115. Weak Mutation 86: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 1
   * Goal 116. Weak Mutation 87: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> -2
   * Goal 117. Weak Mutation 88: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceComparisonOperator <= -> -1
   * Goal 118. Weak Mutation 99: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:424 - ReplaceComparisonOperator >= -> ==
   * Goal 119. Weak Mutation 104: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:427 - ReplaceConstant - 1 -> 0
   * Goal 120. Weak Mutation 105: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:427 - ReplaceArithmeticOperator + -> %
   * Goal 121. Weak Mutation 106: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:427 - ReplaceArithmeticOperator + -> -
   * Goal 122. Weak Mutation 107: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:427 - ReplaceArithmeticOperator + -> *
   * Goal 123. Weak Mutation 108: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:427 - ReplaceArithmeticOperator + -> /
   * Goal 124. Weak Mutation 112: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:570 - ReplaceComparisonOperator != null -> = null
   * Goal 125. Weak Mutation 114: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceConstant - 1 -> 0
   * Goal 126. Weak Mutation 115: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> +
   * Goal 127. Weak Mutation 116: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> %
   * Goal 128. Weak Mutation 117: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> *
   * Goal 129. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> /
   * Goal 130. Weak Mutation 123: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceComparisonOperator < -> !=
   * Goal 131. Weak Mutation 128: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 0
   * Goal 132. Weak Mutation 129: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 1
   * Goal 133. Weak Mutation 130: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> -1
   * Goal 134. Weak Mutation 131: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 47
   * Goal 135. Weak Mutation 132: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceConstant - 48 -> 49
   * Goal 136. Weak Mutation 134: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:574 - ReplaceComparisonOperator == -> >=
   * Goal 137. Weak Mutation 136: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:575 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test155()  throws Throwable  {
      try { 
        NumberUtils.createNumber("org.apache.commons.lang.math.NumberUtils");
      } catch(NumberFormatException e) {
         //
         // org.apache.commons.lang.math.NumberUtils is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 156
  /*
   * 120 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - false
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I160 Branch 15 IF_ICMPLE L441 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I198 Branch 17 IFEQ L448 - true
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 19 LOOKUPSWITCH L449 Case 68 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 20 LOOKUPSWITCH L449 Case 70 - false
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 21 LOOKUPSWITCH L449 Case 76 - false
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 22 LOOKUPSWITCH L449 Case 100 - false
   * Goal 15. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 23 LOOKUPSWITCH L449 Case 102 - false
   * Goal 16. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 24 LOOKUPSWITCH L449 Case 108 - false
   * Goal 17. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 25 LOOKUPSWITCH L449 Default-Case - true
   * Goal 18. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 69 IFNONNULL L570 - true
   * Goal 19. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 70 IFLT L573 - true
   * Goal 20. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I37 Branch 72 IFLE L578 - true
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I84 Branch 11 IF_ICMPLE L423 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 29. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I160 Branch 15 IF_ICMPLE L441 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 30. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I198 Branch 17 IFEQ L448 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 22 LOOKUPSWITCH L449 Case 100 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 32. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 25 LOOKUPSWITCH L449 Default-Case - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 23 LOOKUPSWITCH L449 Case 102 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 20 LOOKUPSWITCH L449 Case 70 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 35. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 24 LOOKUPSWITCH L449 Case 108 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 36. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 21 LOOKUPSWITCH L449 Case 76 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 37. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I211 Branch 19 LOOKUPSWITCH L449 Case 68 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 38. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I3 Branch 69 IFNONNULL L570 - true in context: 
   * Goal 39. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I17 Branch 70 IFLT L573 - true in context: 
   * Goal 40. Branch org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: I37 Branch 72 IFLE L578 - true in context: 
   * Goal 41. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 42. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 43. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 44. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 45. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 423
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 429
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 431
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 54. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 441
   * Goal 55. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 444
   * Goal 56. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 447
   * Goal 57. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 448
   * Goal 58. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 449
   * Goal 59. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 510
   * Goal 60. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 570
   * Goal 61. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 573
   * Goal 62. org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 578
   * Goal 63. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 64. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 65. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 66. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 67. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 68. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 69. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 70. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 71. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 72. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 73. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 74. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 75. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 76. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 77. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 78. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 79. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 80. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 81. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 82. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 83. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 84. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 85. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 86. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 87. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 88. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 89. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 90. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 91. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 92. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 93. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 94. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 95. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 96. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 97. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 98. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 99. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 100. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 101. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 102. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 103. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 104. Weak Mutation 76: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 105. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 106. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 107. Weak Mutation 79: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> -1
   * Goal 108. Weak Mutation 85: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 0
   * Goal 109. Weak Mutation 86: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> 1
   * Goal 110. Weak Mutation 87: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceConstant - -1 -> -2
   * Goal 111. Weak Mutation 89: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:423 - ReplaceComparisonOperator <= -> <
   * Goal 112. Weak Mutation 112: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:570 - ReplaceComparisonOperator != null -> = null
   * Goal 113. Weak Mutation 114: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceConstant - 1 -> 0
   * Goal 114. Weak Mutation 115: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> +
   * Goal 115. Weak Mutation 116: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> %
   * Goal 116. Weak Mutation 117: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> *
   * Goal 117. Weak Mutation 118: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceArithmeticOperator - -> /
   * Goal 118. Weak Mutation 122: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:573 - ReplaceComparisonOperator < -> -2
   * Goal 119. Weak Mutation 139: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:578 - ReplaceComparisonOperator <= -> <
   * Goal 120. Weak Mutation 141: org.apache.commons.lang.math.NumberUtils.isAllZeros(Ljava/lang/String;)Z:578 - ReplaceConstant - 0 -> 1
   */

  @Test
  public void test156()  throws Throwable  {
      try { 
        NumberUtils.createNumber("...");
      } catch(NumberFormatException e) {
         //
         // ... is not a valid number.
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 157
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - false
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 5. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 6. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 409
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 13. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 14. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 15. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 16. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 31: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> -1
   * Goal 18. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:null
   */

  @Test
  public void test157()  throws Throwable  {
      Number number0 = NumberUtils.createNumber("--d:]ME..d2:GJz7VOzJ.");
  }

  //Test case number: 158
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 5. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 402
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 10. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 11. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 12. Weak Mutation 28: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:402 - ReplaceConstant - A blank string is not a valid number -> 
   */

  @Test
  public void test158()  throws Throwable  {
      try { 
        NumberUtils.createNumber("");
      } catch(NumberFormatException e) {
         //
         // A blank string is not a valid number
         //
         assertThrownBy("org.apache.commons.lang.math.NumberUtils", e);
      }
  }

  //Test case number: 159
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 399
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 7. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:null
   */

  @Test
  public void test159()  throws Throwable  {
      Number number0 = NumberUtils.createNumber((String) null);
  }

  //Test case number: 160
  /*
   * 100 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true
   * Goal 2. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true
   * Goal 3. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true
   * Goal 4. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false
   * Goal 5. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true
   * Goal 6. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true
   * Goal 7. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I134 Branch 13 IF_ICMPLE L433 - true
   * Goal 8. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - true
   * Goal 9. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I449 Branch 57 IF_ICMPLE L516 - true
   * Goal 10. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I474 Branch 59 IFNONNULL L521 - false
   * Goal 11. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I476 Branch 60 IFNONNULL L521 - false
   * Goal 12. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: I3 Branch 75 IFNONNULL L625 - true
   * Goal 13. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: I3 Branch 76 IFNONNULL L642 - true
   * Goal 14. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: I3 Branch 77 IFNONNULL L658 - true
   * Goal 15. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I3 Branch 5 IFNONNULL L398 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 16. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I12 Branch 6 IFEQ L401 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 17. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I26 Branch 7 IFLE L404 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 18. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I37 Branch 8 IFGT L411 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 19. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I42 Branch 9 IFLE L411 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 20. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I79 Branch 10 IF_ICMPLE L421 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 21. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I134 Branch 13 IF_ICMPLE L433 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 22. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I155 Branch 14 IFNE L440 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 23. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I449 Branch 57 IF_ICMPLE L516 - true in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I476 Branch 60 IFNONNULL L521 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Branch org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: I474 Branch 59 IFNONNULL L521 - false in context: org.apache.commons.lang.math.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 26. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 27. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 658
   * Goal 28. org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 661
   * Goal 29. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 625
   * Goal 30. org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 629
   * Goal 31. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 642
   * Goal 32. org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 645
   * Goal 33. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 398
   * Goal 34. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 401
   * Goal 35. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 404
   * Goal 36. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 411
   * Goal 37. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 414
   * Goal 38. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 418
   * Goal 39. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 419
   * Goal 40. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 421
   * Goal 41. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 433
   * Goal 42. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 436
   * Goal 43. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 438
   * Goal 44. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 440
   * Goal 45. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 516
   * Goal 46. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 519
   * Goal 47. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 521
   * Goal 48. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 524
   * Goal 49. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 525
   * Goal 50. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 529
   * Goal 51. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 530
   * Goal 52. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 533
   * Goal 53. org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 54. Weak Mutation 26: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:398 - ReplaceComparisonOperator != null -> = null
   * Goal 55. Weak Mutation 27: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:401 - ReplaceComparisonOperator == -> !=
   * Goal 56. Weak Mutation 29: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - -- -> 
   * Goal 57. Weak Mutation 30: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceConstant - 0 -> 1
   * Goal 58. Weak Mutation 32: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:404 - ReplaceComparisonOperator <= -> ==
   * Goal 59. Weak Mutation 34: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0x -> 
   * Goal 60. Weak Mutation 35: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 61. Weak Mutation 37: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator > -> !=
   * Goal 62. Weak Mutation 39: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - -0x -> 
   * Goal 63. Weak Mutation 40: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceConstant - 0 -> 1
   * Goal 64. Weak Mutation 42: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:411 - ReplaceComparisonOperator <= -> ==
   * Goal 65. Weak Mutation 44: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceConstant - 1 -> 0
   * Goal 66. Weak Mutation 45: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> +
   * Goal 67. Weak Mutation 46: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> %
   * Goal 68. Weak Mutation 47: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> *
   * Goal 69. Weak Mutation 48: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:414 - ReplaceArithmeticOperator - -> /
   * Goal 70. Weak Mutation 49: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 0
   * Goal 71. Weak Mutation 50: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 1
   * Goal 72. Weak Mutation 51: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> -1
   * Goal 73. Weak Mutation 52: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 45
   * Goal 74. Weak Mutation 53: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:418 - ReplaceConstant - 46 -> 47
   * Goal 75. Weak Mutation 54: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 0
   * Goal 76. Weak Mutation 55: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 1
   * Goal 77. Weak Mutation 56: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> -1
   * Goal 78. Weak Mutation 57: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 100
   * Goal 79. Weak Mutation 58: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 101 -> 102
   * Goal 80. Weak Mutation 59: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 0
   * Goal 81. Weak Mutation 60: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 1
   * Goal 82. Weak Mutation 61: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> -1
   * Goal 83. Weak Mutation 62: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 68
   * Goal 84. Weak Mutation 63: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 69 -> 70
   * Goal 85. Weak Mutation 64: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 86. Weak Mutation 65: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 87. Weak Mutation 66: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 88. Weak Mutation 67: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 89. Weak Mutation 68: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceConstant - 1 -> 0
   * Goal 90. Weak Mutation 69: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> %
   * Goal 91. Weak Mutation 70: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> -
   * Goal 92. Weak Mutation 71: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> *
   * Goal 93. Weak Mutation 72: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:419 - ReplaceArithmeticOperator + -> /
   * Goal 94. Weak Mutation 76: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 0
   * Goal 95. Weak Mutation 77: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> 1
   * Goal 96. Weak Mutation 78: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceConstant - -1 -> -2
   * Goal 97. Weak Mutation 80: org.apache.commons.lang.math.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:421 - ReplaceComparisonOperator <= -> <
   * Goal 98. Weak Mutation 144: org.apache.commons.lang.math.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;:625 - ReplaceComparisonOperator != null -> = null
   * Goal 99. Weak Mutation 145: org.apache.commons.lang.math.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;:642 - ReplaceComparisonOperator != null -> = null
   * Goal 100. Weak Mutation 146: org.apache.commons.lang.math.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;:658 - ReplaceComparisonOperator != null -> = null
   */

  @Test
  public void test160()  throws Throwable  {
      try { 
        NumberUtils.createNumber("Ugujb~GoTRg r^O]'j9");
      } catch(NumberFormatException e) {
         //
         // For input string: \"U\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }

  //Test case number: 161
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: I3 Branch 4 IFNONNULL L325 - false
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:toDouble(Ljava/lang/String;)D
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D: Line 302
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 325
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D: Line 326
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D
   * Goal 9. Weak Mutation 21: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D:302 - ReplaceConstant - 0.0 -> 1.0
   * Goal 10. Weak Mutation 22: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D:302 - ReplaceConstant - 0.0 -> -1.0
   * Goal 11. Weak Mutation 23: org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;D)D:325 - ReplaceComparisonOperator != null -> = null
   * Goal 12. org.apache.commons.lang.math.NumberUtils.toDouble(Ljava/lang/String;)D:zero
   */

  @Test
  public void test161()  throws Throwable  {
      double double0 = NumberUtils.toDouble((String) null);
  }

  //Test case number: 162
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - false
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - false in context: org.apache.commons.lang.math.NumberUtils:toLong(Ljava/lang/String;J)J
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 221
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 222
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J
   * Goal 7. Weak Mutation 13: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:221 - ReplaceComparisonOperator != null -> = null
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:positive
   */

  @Test
  public void test162()  throws Throwable  {
      long long0 = NumberUtils.toLong((String) null, 450L);
  }

  //Test case number: 163
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(FFF)F: Line 1381
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(FFF)F:positive
   */

  @Test
  public void test163()  throws Throwable  {
      float float0 = NumberUtils.max((float) (byte)0, 559.2815F, 1.0F);
  }

  //Test case number: 164
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: I3 Branch 2 IFNONNULL L221 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J: root-Branch in context: org.apache.commons.lang.math.NumberUtils:toLong(Ljava/lang/String;)J
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J: Line 200
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 221
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 225
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 226
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J: Line 227
   * Goal 9. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J
   * Goal 11. Weak Mutation 11: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J:200 - ReplaceConstant - 0 -> 1
   * Goal 12. Weak Mutation 12: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J:200 - ReplaceConstant - 0 -> -1
   * Goal 13. Weak Mutation 13: org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;J)J:221 - ReplaceComparisonOperator != null -> = null
   * Goal 14. org.apache.commons.lang.math.NumberUtils.toLong(Ljava/lang/String;)J:zero
   */

  @Test
  public void test164()  throws Throwable  {
      long long0 = NumberUtils.toLong("=@d");
  }

  //Test case number: 165
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.max(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:max(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.max(DDD)D: Line 1366
   * Goal 4. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.max(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.max(DDD)D:negative
   */

  @Test
  public void test165()  throws Throwable  {
      double double0 = NumberUtils.max((-2268.84), (-2268.84), (-2268.84));
  }

  //Test case number: 166
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(DDD)D: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(DDD)D
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(DDD)D: Line 1262
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(DDD)D
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(DDD)D:negative
   */

  @Test
  public void test166()  throws Throwable  {
      double double0 = NumberUtils.min((-42.0), (double) (byte) (-42), (double) 0);
  }

  //Test case number: 167
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.min(FFF)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:min(FFF)F
   * Goal 3. org.apache.commons.lang.math.NumberUtils.min(FFF)F: Line 1277
   * Goal 4. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 5. org.apache.commons.lang.math.NumberUtils.min(FFF)F
   * Goal 6. org.apache.commons.lang.math.NumberUtils.min(FFF)F:zero
   */

  @Test
  public void test167()  throws Throwable  {
      float float0 = NumberUtils.min(0.0F, 2926.793F, 3545.8F);
  }

  //Test case number: 168
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: I3 Branch 3 IFNONNULL L273 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F: root-Branch in context: org.apache.commons.lang.math.NumberUtils:toFloat(Ljava/lang/String;)F
   * Goal 4. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F: Line 250
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 273
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 277
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 278
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F: Line 279
   * Goal 9. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F
   * Goal 10. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F
   * Goal 11. Weak Mutation 16: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F:250 - ReplaceConstant - 0.0 -> 1.0
   * Goal 12. Weak Mutation 17: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F:250 - ReplaceConstant - 0.0 -> -1.0
   * Goal 13. Weak Mutation 18: org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;F)F:273 - ReplaceComparisonOperator != null -> = null
   * Goal 14. org.apache.commons.lang.math.NumberUtils.toFloat(Ljava/lang/String;)F:zero
   */

  @Test
  public void test168()  throws Throwable  {
      float float0 = NumberUtils.toFloat("Strings must not be null");
  }

  //Test case number: 169
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - true
   * Goal 3. Branch org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:stringToInt(Ljava/lang/String;I)I
   * Goal 4. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 151
   * Goal 5. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 176
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 177
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 178
   * Goal 9. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 11. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 12. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;I)I:negative
   */

  @Test
  public void test169()  throws Throwable  {
      int int0 = NumberUtils.stringToInt("Array cannot be empty.", (-1791));
  }

  //Test case number: 170
  /*
   * 5 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.<init>()V: root-Branch
   * Goal 2. Branch org.apache.commons.lang.math.NumberUtils.<init>()V: root-Branch in context: org.apache.commons.lang.math.NumberUtils:<init>()V
   * Goal 3. org.apache.commons.lang.math.NumberUtils.<init>()V: Line 86
   * Goal 4. org.apache.commons.lang.math.NumberUtils.<init>()V
   * Goal 5. org.apache.commons.lang.math.NumberUtils.<init>()V
   */

  @Test
  public void test170()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
  }

  //Test case number: 171
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I: root-Branch
   * Goal 2. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: root-Branch
   * Goal 3. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: I3 Branch 1 IFNONNULL L172 - false
   * Goal 4. Branch org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I: root-Branch in context: org.apache.commons.lang.math.NumberUtils:stringToInt(Ljava/lang/String;)I
   * Goal 5. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I: Line 108
   * Goal 6. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I: Line 129
   * Goal 7. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 172
   * Goal 8. org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I: Line 173
   * Goal 9. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I
   * Goal 10. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I
   * Goal 11. Weak Mutation 0: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;)I:129 - ReplaceConstant - 0 -> 1
   * Goal 12. Weak Mutation 4: org.apache.commons.lang.math.NumberUtils.toInt(Ljava/lang/String;I)I:172 - ReplaceComparisonOperator != null -> = null
   * Goal 13. org.apache.commons.lang.math.NumberUtils.stringToInt(Ljava/lang/String;)I:zero
   */

  @Test
  public void test171()  throws Throwable  {
      int int0 = NumberUtils.stringToInt((String) null);
  }
}
