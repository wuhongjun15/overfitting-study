/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 11:32:39 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Button;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Paint;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.DirectColorModel;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.Icon;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardXYZToolTipGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.renderer.AreaRendererEndType;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GradientBarPainter;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Object object0 = layeredBarRenderer0.clone();
      layeredBarRenderer0.setMaximumBarWidth(0.0);
      layeredBarRenderer0.setAutoPopulateSeriesPaint(true);
      // Undeclared exception!
      try { 
        layeredBarRenderer0.setSeriesBarWidth((-565), 337.470146934);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      double double0 = layeredBarRenderer0.getSeriesBarWidth(2921);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Paint paint0 = waterfallBarRenderer0.getFirstBarPaint();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      boolean boolean0 = lineRenderer3D0.equals(layeredBarRenderer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = waterfallBarRenderer0.createState(plotRenderingInfo0);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(true);
      combinedRangeCategoryPlot0.setDomainCrosshairRowKey((Comparable) waterfallBarRenderer0.ZERO);
      Point point0 = new Point();
      ellipse2D_Float0.width = 1.0F;
      boolean boolean1 = ellipse2D_Float0.contains((Point2D) point0);
      CategoryDataset categoryDataset0 = null;
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.drawItem((Graphics2D) null, categoryItemRendererState0, rectangle2D0, combinedRangeCategoryPlot0, (CategoryAxis) null, cyclicNumberAxis0, (CategoryDataset) null, 500, 500, true, 1300);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.WaterfallBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(15.777968492674, 0.0);
      stackedBarRenderer3D0.setItemLabelAnchorOffset(15.777968492674);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      boolean boolean0 = stackedBarRenderer3D0.equals(waterfallBarRenderer0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Shape shape0 = lineRenderer3D0.getLegendShape(3);
      Paint paint0 = lineRenderer3D0.getWallPaint();
      stackedBarRenderer3D0.setIncludeBaseInRange(false);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      waterfallBarRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, numberAxis3D0, (Rectangle2D) null, 560.6124445484, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_STROKE);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getToolTipGenerator(2340, 0, false);
      waterfallBarRenderer0.setSeriesToolTipGenerator(2340, (CategoryToolTipGenerator) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Paint paint1 = ganttRenderer0.getCompletePaint();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.removeAnnotations();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Locale locale0 = Locale.ITALIAN;
      DateFormat dateFormat0 = MockDateFormat.getDateInstance(0, locale0);
      String string0 = locale0.getScript();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("N'/", dateFormat0);
      stackedAreaRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      boolean boolean0 = lineAndShapeRenderer0.getItemShapeVisible(0, 307);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      boolean boolean0 = levelRenderer0.equals((Object) null);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) levelRenderer0.ZERO, 1751.2019319667, false);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = levelRenderer0.getSeriesItemLabelGenerator(1430);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesItemLabelGenerator((-1006), (CategoryItemLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2.0, (-781.728406812));
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("T(s[MZ{Dd]O", numberFormat0);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesItemLabelGenerator((-740), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(4.0, 11.4548243067);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.equals(barRenderer3D0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = 0;
      Boolean boolean1 = lineRenderer3D0.getSeriesShapesFilled(0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setDefaultEntityRadius((-608));
      AreaRendererEndType areaRendererEndType0 = stackedAreaRenderer0.getEndType();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      char[] charArray0 = new char[3];
      charArray0[0] = '6';
      charArray0[1] = 's';
      charArray0[2] = 'l';
      AffineTransform affineTransform0 = new AffineTransform(195.0F, 0.0F, (-351.1838F), (float) 10, (-1355.6445F), (float) (-608));
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      FontRenderContext fontRenderContext0 = null;
      try {
        fontRenderContext0 = new FontRenderContext(affineTransform0, stackedBarRenderer0, stackedBarRenderer0);
      } catch(IllegalArgumentException e) {
         //
         // AA hint:org.jfree.chart.renderer.category.StackedBarRenderer@ed424b56
         //
         verifyException("java.awt.font.FontRenderContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Null 'plot' argument.");
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, extendedCategoryAxis0, valueAxis0, groupedStackedBarRenderer0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      Rectangle2D rectangle2D0 = null;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'plot' argument.", valueAxis0.DEFAULT_TICK_LABEL_FONT, fastScatterPlot0, true);
      int int0 = (-3110);
      int int1 = 0;
      double double0 = 4.0;
      PlotRenderingInfo plotRenderingInfo0 = null;
      Button button0 = null;
      try {
        button0 = new Button();
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SystemColor systemColor0 = SystemColor.inactiveCaption;
      minMaxCategoryRenderer0.setLegendTextPaint(1696, systemColor0);
      Icon icon0 = minMaxCategoryRenderer0.getMinIcon();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardXYZToolTipGenerator standardXYZToolTipGenerator0 = new StandardXYZToolTipGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((double) minMaxCategoryRenderer0.ZERO, true, standardXYZToolTipGenerator0);
      boolean boolean0 = boxAndWhiskerRenderer0.hasListener(candlestickRenderer0);
      Stroke stroke0 = boxAndWhiskerRenderer0.lookupSeriesStroke(1696);
      boolean boolean1 = boxAndWhiskerRenderer0.isMeanVisible();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin((-668.112919599685));
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(1696, (-290), 3);
      } catch(IllegalArgumentException e) {
         //
         // Width (1696) and height (-290) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setItemMargin(0.0);
      ganttRenderer0.setDrawBarOutline(false);
      LegendItem legendItem0 = ganttRenderer0.getLegendItem(35, 35);
      boolean boolean0 = false;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Shape shape0 = statisticalBarRenderer0.lookupLegendShape(3621);
      Stroke stroke0 = statisticalBarRenderer0.getErrorIndicatorStroke();
      BarPainter barPainter0 = BarRenderer.getDefaultBarPainter();
      BarRenderer.setDefaultBarPainter(barPainter0);
      double[][] doubleArray0 = new double[7][9];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 3.0;
      doubleArray1[1] = (double) 3621;
      doubleArray1[2] = (double) 3621;
      doubleArray1[3] = 3.0;
      doubleArray1[4] = (double) 3621;
      doubleArray1[5] = 0.2;
      doubleArray1[6] = (double) 3621;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 3.0;
      doubleArray2[1] = 3.0;
      doubleArray2[2] = 3.0;
      doubleArray2[3] = (double) 3621;
      doubleArray2[4] = 0.005;
      doubleArray2[5] = 0.2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[3];
      doubleArray3[0] = 3.0;
      doubleArray3[1] = (-2824.82118246);
      doubleArray3[2] = 0.005;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[3];
      doubleArray4[0] = 0.005;
      doubleArray4[1] = 0.005;
      doubleArray4[2] = 0.2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = (double) statisticalBarRenderer0.ZERO;
      doubleArray5[1] = 0.2;
      doubleArray5[2] = 0.005;
      doubleArray5[3] = (double) 3621;
      doubleArray5[4] = 0.2;
      doubleArray5[5] = (-2824.82118246);
      doubleArray5[6] = (double) statisticalBarRenderer0.ZERO;
      doubleArray5[7] = (double) statisticalBarRenderer0.ZERO;
      doubleArray5[8] = 0.2;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[7];
      doubleArray6[0] = (double) 3621;
      doubleArray6[1] = 0.2;
      doubleArray6[2] = (-306.91139679412805);
      doubleArray6[3] = 0.005;
      doubleArray6[4] = 0.2;
      doubleArray6[5] = (-2824.82118246);
      doubleArray6[6] = 0.2;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[8];
      doubleArray7[0] = (double) 3621;
      doubleArray7[1] = (-2824.82118246);
      doubleArray7[2] = (-1069.379);
      doubleArray7[3] = (-2824.82118246);
      doubleArray7[4] = (-2824.82118246);
      doubleArray7[5] = 0.005;
      doubleArray7[6] = (-306.91139679412805);
      doubleArray7[7] = (-2824.82118246);
      doubleArray0[6] = doubleArray7;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = intervalBarRenderer0.getLegendItemURLGenerator();
      intervalBarRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      int int0 = 0;
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, (-1062));
      Range range0 = intervalBarRenderer0.findRangeBounds(slidingGanttCategoryDataset0);
      int int1 = (-208);
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-208), 1518, (float[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getBaseToolTipGenerator();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.setSeriesToolTipGenerator((-803), (CategoryToolTipGenerator) null, true);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      int int0 = 4278;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)0;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(4278, byteArray0);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      int int1 = 59;
      DirectColorModel directColorModel0 = null;
      try {
        directColorModel0 = new DirectColorModel(59, 10, 10, (-1));
      } catch(IllegalArgumentException e) {
         //
         // Noncontiguous red mask (a
         //
         verifyException("java.awt.image.PackedColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setLegendTextPaint(0, (Paint) null);
      Object object0 = statisticalLineAndShapeRenderer0.clone();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      double double0 = stackedBarRenderer0.getShadowXOffset();
      stackedBarRenderer0.clearSeriesPaints(false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("4-f4Cc^/H", statisticalLineAndShapeRenderer0.ZERO, (-1480.0), 3.0);
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      statisticalLineAndShapeRenderer0.setBaseLegendTextPaint(categoryPointerAnnotation0.DEFAULT_PAINT);
      categoryPointerAnnotation0.setPaint(statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_PAINT);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, 3.0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultCategoryDataset0, 1, 1);
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, stackedBarRenderer0.DEFAULT_SHAPE, slidingCategoryDataset0, 1, 1, false, 3.0, 4.0);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-4.0), 0.0);
      double double0 = barRenderer3D0.getYOffset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      minMaxCategoryRenderer0.setItemLabelAnchorOffset((-4.0));
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      Object object0 = standardCategoryItemLabelGenerator0.clone();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      double double1 = barRenderer3D0.getMaximumBarWidth();
      CategoryURLGenerator categoryURLGenerator0 = barRenderer3D0.getBaseURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Object object1 = scatterRenderer0.clone();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      String string0 = "Bq=b)w0a4^[TA";
      float[][] floatArray0 = new float[9][7];
      float[] floatArray1 = new float[6];
      floatArray1[0] = 0.0F;
      floatArray1[1] = 0.0F;
      floatArray1[2] = 0.0F;
      floatArray1[3] = 0.0F;
      floatArray1[4] = (-1960.6947F);
      floatArray1[5] = 489.13F;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[1];
      floatArray2[0] = 0.0F;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[7];
      floatArray3[0] = 0.0F;
      floatArray3[1] = 0.0F;
      floatArray3[2] = 0.0F;
      floatArray3[3] = 0.0F;
      floatArray3[4] = 0.0F;
      floatArray3[5] = 0.0F;
      floatArray3[6] = 0.0F;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[8];
      floatArray4[0] = (-1960.6947F);
      floatArray4[1] = 0.0F;
      floatArray4[2] = 0.0F;
      floatArray4[3] = 0.0F;
      floatArray4[4] = 0.0F;
      floatArray4[5] = 0.0F;
      floatArray4[6] = (-1960.6947F);
      floatArray4[7] = 0.0F;
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[0];
      floatArray0[4] = floatArray5;
      float[] floatArray6 = new float[6];
      floatArray6[0] = 0.0F;
      floatArray6[1] = 489.13F;
      floatArray6[2] = 0.0F;
      floatArray6[3] = 0.0F;
      floatArray6[4] = 0.0F;
      floatArray6[5] = 0.0F;
      floatArray0[5] = floatArray6;
      float[] floatArray7 = new float[6];
      floatArray7[0] = 0.0F;
      floatArray7[1] = 0.0F;
      floatArray7[2] = 0.0F;
      floatArray7[3] = 0.0F;
      floatArray7[4] = 0.0F;
      floatArray7[5] = 0.0F;
      floatArray0[6] = floatArray7;
      float[] floatArray8 = new float[7];
      floatArray8[0] = 0.0F;
      floatArray8[1] = 0.0F;
      floatArray8[2] = 0.0F;
      floatArray8[3] = 685.82306F;
      floatArray8[4] = (-1960.6947F);
      floatArray8[5] = 0.0F;
      floatArray8[6] = 0.0F;
      floatArray0[7] = floatArray8;
      float[] floatArray9 = new float[8];
      floatArray9[0] = 0.0F;
      floatArray9[1] = (-1960.6947F);
      floatArray9[2] = (-1960.6947F);
      floatArray9[3] = 489.13F;
      floatArray9[4] = 0.0F;
      floatArray9[5] = (-1960.6947F);
      floatArray9[6] = 0.0F;
      floatArray9[7] = (-1960.6947F);
      floatArray0[8] = floatArray9;
      NumberAxis numberAxis0 = new NumberAxis("{2}");
      FastScatterPlot fastScatterPlot0 = null;
      try {
        fastScatterPlot0 = new FastScatterPlot(floatArray0, numberAxis0, numberAxis0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.chart.plot.FastScatterPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter(2660.17244265, 0.0, 0.0);
      barRenderer3D0.setBarPainter(gradientBarPainter0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Range range0 = stackedAreaRenderer0.findRangeBounds(taskSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      AreaRendererEndType areaRendererEndType0 = stackedAreaRenderer0.getEndType();
      stackedAreaRenderer0.setEndType(areaRendererEndType0);
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      boolean boolean0 = BarRenderer.getDefaultShadowsVisible();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getSeriesURLGenerator(0);
      stackedAreaRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null);
      String string0 = "";
      Font font0 = Font.getFont("U`rBADQ9[m");
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("", (Font) null, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, false, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }
}
