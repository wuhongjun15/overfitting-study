/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 11:39:55 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.IndexColorModel;
import java.awt.image.MemoryImageSource;
import java.awt.image.PixelGrabber;
import java.lang.reflect.Array;
import java.sql.Connection;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.List;
import java.util.Stack;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.JToggleButton;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.needle.WindNeedle;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.GradientPaintTransformer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.pie.PieDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Second;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Paint paint0 = boxAndWhiskerRenderer0.getArtifactPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, paint0, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Graphics2D graphics2D0 = null;
      Stack<BoxAndWhiskerRenderer> stack0 = new Stack<BoxAndWhiskerRenderer>();
      int int0 = 1293;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 1293);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0);
      Rectangle rectangle0 = jTable0.getCellRect(1293, 1293, true);
      Rectangle2D rectangle2D0 = rectangle0.getFrame();
      String string0 = "";
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle rectangle1 = new Rectangle(65, 65);
      Point2D point2D0 = RectangleAnchor.coordinates(rectangle1, (RectangleAnchor) null);
      CategoryPlot categoryPlot0 = combinedDomainCategoryPlot0.findSubplot(plotRenderingInfo0, point2D0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.getRangeAxis((CategoryPlot) null, 0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      ganttRenderer0.setAutoPopulateSeriesPaint(true);
      defaultCategoryDataset0.fireSelectionEvent();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = 3821;
      statisticalBarRenderer0.setErrorIndicatorPaint(ganttRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getSeriesURLGenerator(3821);
      // Undeclared exception!
      try { 
        ganttRenderer0.setSeriesURLGenerator((-3741), (CategoryURLGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2.5E-8, 2.5E-8, true);
      int int0 = stackedBarRenderer3D0.getColumnCount();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.setUseSeriesOffset(true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalLineAndShapeRenderer0.getSeriesToolTipGenerator(0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = intervalBarRenderer0.getSeriesURLGenerator(0);
      intervalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      boolean boolean0 = intervalBarRenderer0.getIncludeBaseInRange();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart("P.", groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot3D0, false);
      int int0 = 0;
      int int1 = (-483);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      boolean boolean0 = true;
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO);
      Object object0 = stackedBarRenderer3D0.clone();
      int int0 = 33;
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true, false, true, true, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Color color0 = (Color)LabelBlock.DEFAULT_PAINT;
      ganttRenderer0.setCompletePaint(color0);
      Number[][] numberArray0 = new Number[2][7];
      Number[] numberArray1 = new Number[7];
      numberArray1[0] = (Number) 3.0;
      numberArray1[1] = (Number) ganttRenderer0.ZERO;
      numberArray1[2] = (Number) 0.2;
      numberArray1[3] = (Number) ganttRenderer0.ZERO;
      numberArray1[4] = (Number) ganttRenderer0.ZERO;
      numberArray1[5] = (Number) 0.2;
      numberArray1[6] = (Number) ganttRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[5];
      numberArray2[0] = (Number) 3.0;
      numberArray2[1] = (Number) 0.2;
      numberArray2[2] = (Number) 3.0;
      numberArray2[3] = (Number) 0.2;
      numberArray2[4] = (Number) 3.0;
      numberArray0[1] = numberArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      // Undeclared exception!
      try { 
        ganttRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, multiplePiePlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getToolTipGenerator(0, 0, false);
      boxAndWhiskerRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(stackedBarRenderer3D0);
      ChartChangeEventType chartChangeEventType0 = ChartChangeEventType.GENERAL;
      rendererChangeEvent0.setType(chartChangeEventType0);
      stackedBarRenderer3D0.notifyListeners(rendererChangeEvent0);
      double double0 = stackedBarRenderer3D0.getMinimumBarLength();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT, stackedBarRenderer3D0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_PAINT);
      Paint paint0 = waterfallBarRenderer0.getNegativeBarPaint();
      Graphics2D graphics2D0 = null;
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.getDomainAxis(categoryPlot0, taskSeriesCollection0);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("$065OkM>2SA%*>J[Y", ganttRenderer0.ZERO, 3.0, (double) ganttRenderer0.ZERO);
      boolean boolean0 = ganttRenderer0.removeAnnotation(categoryPointerAnnotation0);
      boolean boolean1 = ganttRenderer0.getShadowsVisible();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin(0.0);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      customCategoryURLGenerator0.addURLSeries((List) null);
      Object object0 = customCategoryURLGenerator0.clone();
      levelRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      levelRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, false);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setFirstBarPaint(levelRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      Stroke stroke0 = statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      Shape shape0 = statisticalLineAndShapeRenderer0.lookupSeriesShape(0);
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getURLGenerator(0, 0, true);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.setBaseLegendTextPaint(levelRenderer0.DEFAULT_OUTLINE_PAINT);
      double double0 = layeredBarRenderer0.getSeriesBarWidth(3323);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      stackedBarRenderer0.setRenderAsPercentages(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      boolean boolean2 = stackedBarRenderer3D0.getIgnoreZeroValues();
      Boolean boolean3 = statisticalLineAndShapeRenderer0.getSeriesShapesVisible(3323);
      int int0 = layeredBarRenderer0.getPassCount();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)8;
      byte byte0 = (byte)48;
      byteArray0[4] = (byte)48;
      byteArray0[5] = (byte)108;
      byteArray0[6] = (byte) (-127);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(0, 0, byteArray0, byteArray0, byteArray0);
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      categoryStepRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 1259, 1259, true, 1.0E11, 2980.798178589581, false);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = categoryStepRenderer0.getBaseItemLabelGenerator();
      boolean boolean0 = BarRenderer.getDefaultShadowsVisible();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      Object object0 = standardCategoryItemLabelGenerator0.clone();
      barRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryURLGenerator categoryURLGenerator0 = barRenderer3D0.getBaseURLGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setFillBox(false);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      Rectangle2D rectangle2D0 = null;
      double[][] doubleArray0 = new double[9][2];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 0.2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[2];
      doubleArray2[0] = (-748.130876);
      doubleArray2[1] = (-10.0);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[8];
      doubleArray3[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray3[1] = 8.0;
      doubleArray3[2] = 4234.568587382;
      doubleArray3[3] = (double) 10;
      doubleArray3[4] = 3.0;
      doubleArray3[5] = (-748.130876);
      doubleArray3[6] = 3.0;
      doubleArray3[7] = (-748.130876);
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[2];
      doubleArray4[0] = 686.6;
      doubleArray4[1] = (double) barRenderer3D0.ZERO;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = (-10.0);
      doubleArray5[1] = (-639.588171768);
      doubleArray5[2] = 8.0;
      doubleArray5[3] = (-10.0);
      doubleArray5[4] = (double) 2.0F;
      doubleArray5[5] = 0.0;
      doubleArray5[6] = (double) 10;
      doubleArray5[7] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray5[8] = (double) 10;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[3];
      doubleArray6[0] = (double) 10;
      doubleArray6[1] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray6[2] = (double) 10;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[6];
      doubleArray7[0] = (double) barRenderer3D0.ZERO;
      doubleArray7[1] = 12.0;
      doubleArray7[2] = (double) barRenderer3D0.ZERO;
      doubleArray7[3] = 0.0;
      doubleArray7[4] = 686.6;
      doubleArray7[5] = (double) 2.0F;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[8];
      doubleArray8[0] = (-3726.33);
      doubleArray8[1] = 4234.568587382;
      doubleArray8[2] = (double) 10;
      doubleArray8[3] = (double) 2.0F;
      doubleArray8[4] = 0.2;
      doubleArray8[5] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray8[6] = 3.141592653589793;
      doubleArray8[7] = (double) barRenderer3D0.ZERO;
      doubleArray0[7] = doubleArray8;
      double[] doubleArray9 = new double[3];
      doubleArray9[0] = (double) 2.0F;
      doubleArray9[1] = (double) barRenderer3D0.ZERO;
      doubleArray9[2] = 0.2;
      doubleArray0[8] = doubleArray9;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      JFreeChart jFreeChart0 = new JFreeChart("'FLJYGPI", categoryAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainCategoryPlot0, true);
      int int0 = (-1065);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-1065), (-4018), 2067, chartRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 2067
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Paint paint0 = ganttRenderer0.getCompletePaint();
      levelRenderer0.setBaseLegendTextPaint(paint0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer0.getLegendItemURLGenerator();
      levelRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      double double0 = levelRenderer0.getItemMargin();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      boolean boolean0 = statisticalLineAndShapeRenderer0.getDrawOutlines();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      Number[][] numberArray0 = new Number[1][5];
      Number[] numberArray1 = new Number[9];
      numberArray1[0] = (Number) stackedBarRenderer0.ZERO;
      numberArray1[1] = (Number) levelRenderer0.ZERO;
      numberArray1[2] = (Number) levelRenderer0.ZERO;
      numberArray1[3] = (Number) 3.0;
      numberArray1[4] = (Number) stackedBarRenderer0.ZERO;
      numberArray1[5] = (Number) 0.2;
      numberArray1[6] = (Number) stackedBarRenderer0.ZERO;
      numberArray1[7] = (Number) levelRenderer0.ZERO;
      numberArray1[8] = (Number) stackedBarRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Comparable[]) null, (Comparable[]) null, numberArray0, numberArray0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultIntervalCategoryDataset0);
      CategoryURLGenerator categoryURLGenerator0 = spiderWebPlot0.getURLGenerator();
      stackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, false);
      boolean boolean1 = stackedBarRenderer0.getShadowsVisible();
      boolean boolean2 = ganttRenderer0.getShadowsVisible();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Color color0 = Color.getHSBColor((-1315.56F), (-1315.56F), (-1315.56F));
      Color color1 = Color.YELLOW;
      Color color2 = Color.getColor("Fk-&}B<<", (-1));
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 1;
      floatArray0[1] = (float) 1;
      floatArray0[2] = (-1315.56F);
      float[] floatArray1 = Color.RGBtoHSB((-1), 1, (-5470), floatArray0);
      Color color3 = Color.getColor("Fk-&}B<<", color1);
      statisticalBarRenderer0.setBaseLegendTextPaint(color0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      boolean boolean0 = statisticalBarRenderer0.equals(stackedAreaRenderer0);
      int int0 = stackedAreaRenderer0.getPassCount();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setDrawOutlines(true);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = defaultCategoryItemRenderer0.getLegendItemToolTipGenerator();
      stackedAreaRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DateFormat dateFormat0 = DateFormat.getTimeInstance(0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("", dateFormat0);
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      stackedBarRenderer3D0.setShadowVisible(false);
      stackedBarRenderer3D0.setItemMargin((-180.0));
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemLabelGenerator();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {3} - {4}", combinedDomainCategoryPlot0);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0, false);
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      boolean boolean0 = true;
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(stackedAreaRenderer1, true);
      int int0 = 2130;
      Stroke stroke0 = stackedAreaRenderer1.lookupSeriesOutlineStroke(2130);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(stackedAreaRenderer1.ZERO, (-4156.6608), stackedAreaRenderer0.ZERO, 0.0, stackedAreaRenderer0.DEFAULT_OUTLINE_PAINT, stroke0);
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      rendererChangeEvent0.setChart((JFreeChart) null);
      stackedAreaRenderer0.notifyListeners(rendererChangeEvent0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getSeriesURLGenerator(7);
      stackedAreaRenderer0.setSeriesURLGenerator(7, (CategoryURLGenerator) null);
      boolean boolean1 = stackedAreaRenderer0.removeAnnotation((CategoryAnnotation) null);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      boolean boolean2 = statisticalLineAndShapeRenderer0.getBaseShapesFilled();
      boolean boolean3 = false;
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel((JFreeChart) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addAnnotation((CategoryAnnotation) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BarRenderer.setDefaultShadowsVisible(true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 0;
      DateFormat dateFormat0 = DateFormat.getDateTimeInstance(0, 0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("da=YK:#A}", dateFormat0);
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      boolean boolean0 = scatterRenderer0.getBaseShapesFilled();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0, true);
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, 0, scatterRenderer0.ZERO);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(waferMapPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, 0, 0, 3586, (-3887), false, true, false, false, true, true, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      int int0 = stackedBarRenderer0.getRowCount();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      SystemColor systemColor0 = SystemColor.control;
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.2, (double) levelRenderer0.ZERO, 0.2, (-1216.0), systemColor0, levelRenderer0.DEFAULT_STROKE);
      boolean boolean0 = levelRenderer0.removeAnnotation(categoryLineAnnotation0);
      levelRenderer0.setMaximumItemWidth(1.0E-7);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.notifyListeners((RendererChangeEvent) null);
      double double0 = stackedBarRenderer3D0.getShadowXOffset();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = levelRenderer0.getSeriesItemLabelGenerator(0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = stackedBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      barRenderer0.clearSeriesStrokes(true);
      barRenderer0.setShadowYOffset((-2674.439744419936));
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Null 'serialDate' argument.");
      barRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      GradientPaintTransformer gradientPaintTransformer0 = layeredBarRenderer0.getGradientPaintTransformer();
      layeredBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-710.28056070102));
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = new JFreeChart(multiplePiePlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      int int0 = 1966;
      MemoryImageSource memoryImageSource0 = new MemoryImageSource(15, 1966, (int[]) null, 1966, 10);
      PixelGrabber pixelGrabber0 = new PixelGrabber(memoryImageSource0, 2936, 15, 10, 10, (int[]) null, 0, 2936);
      ColorModel colorModel0 = pixelGrabber0.getColorModel();
      BufferedImage bufferedImage1 = affineTransformOp0.createCompatibleDestImage(bufferedImage0, colorModel0);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D rectangle2D0 = null;
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[4][7];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray1[1] = (double) 0.5F;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = (double) 10;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = (double) 1.0F;
      doubleArray2[1] = (double) 0;
      doubleArray2[2] = 4.0;
      doubleArray2[3] = (double) 15;
      doubleArray2[4] = (double) 10;
      doubleArray2[5] = (double) 10;
      doubleArray2[6] = 0.2;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) 10;
      doubleArray3[1] = (double) 0;
      doubleArray3[2] = 2.0;
      doubleArray3[3] = (double) 10;
      doubleArray3[4] = 0.2;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[8];
      doubleArray4[0] = (double) 1.0F;
      doubleArray4[1] = (double) 0.5F;
      doubleArray4[2] = (double) layeredBarRenderer0.ZERO;
      doubleArray4[3] = 0.0;
      doubleArray4[4] = (double) layeredBarRenderer0.ZERO;
      doubleArray4[5] = 3.0;
      doubleArray4[6] = 2.0;
      doubleArray4[7] = (double) 10;
      doubleArray0[3] = doubleArray4;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise(graphics2D0, (Rectangle2D) null, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = false;
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(scatterRenderer0, false);
      groupedStackedBarRenderer0.notifyListeners(rendererChangeEvent0);
      int int0 = (-1905);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = groupedStackedBarRenderer0.getItemLabelGenerator((-1905), (-1905), false);
      // Undeclared exception!
      try { 
        scatterRenderer0.setItemMargin((-1905));
      } catch(IllegalArgumentException e) {
         //
         // Requires 0.0 <= margin < 1.0.
         //
         verifyException("org.jfree.chart.renderer.category.ScatterRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      waterfallBarRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) customCategoryURLGenerator0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 3.0);
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      NumberFormat numberFormat0 = meterPlot0.getTickLabelFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("1NCOWPyy:.", numberFormat0);
      waterfallBarRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      meterPlot0.setBackgroundImageAlignment(1);
      int[] intArray0 = new int[7];
      intArray0[0] = 10;
      intArray0[1] = 10;
      intArray0[2] = 10;
      intArray0[3] = 270;
      defaultValueDataset0.setValue(10);
      intArray0[4] = 10;
      intArray0[5] = 270;
      ChoiceFormat choiceFormat0 = new ChoiceFormat("1NCOWPyy:.");
      numberFormat0.setMaximumIntegerDigits(270);
      // Undeclared exception!
      try { 
        choiceFormat0.getCurrency();
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.NumberFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      int int0 = (-167);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.setSeriesItemLabelGenerator((-167), (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getBaseItemLabelGenerator();
      stackedBarRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, true);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset((Connection) null);
      } catch(NullPointerException e) {
         //
         // A connection must be supplied.
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedBarRenderer3D0.setPlot(combinedRangeCategoryPlot0);
      Object object0 = stackedBarRenderer3D0.clone();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setPlot(combinedRangeCategoryPlot0);
      boolean boolean0 = stackedAreaRenderer0.equals(combinedRangeCategoryPlot0);
      CategoryPlot categoryPlot0 = stackedBarRenderer3D0.getPlot();
      stackedBarRenderer3D0.setPlot(combinedRangeCategoryPlot0);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      boolean boolean1 = stackedBarRenderer0.equals(object0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(16, 0, (-1850.08009), (double) stackedBarRenderer0.ZERO, chartRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Width (16) and height (0) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.setValue((Number) stackedAreaRenderer0.ZERO, (Comparable) stackedAreaRenderer0.ZERO, (Comparable) stackedAreaRenderer0.ZERO);
      Range range0 = stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, false);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = 3912;
      // Undeclared exception!
      try { 
        standardCategoryItemLabelGenerator0.generateLabel(defaultStatisticalCategoryDataset0, 3912, 3912);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3912, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      boolean boolean0 = scatterRenderer0.equals(layeredBarRenderer0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemURLGenerator();
      scatterRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      boolean boolean1 = lineRenderer3D0.getDrawOutlines();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      int int0 = stackedAreaRenderer0.getPassCount();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getItemLabelGenerator((-1), (-1), true);
      lineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setMaximumItemWidth((-1.0));
      levelRenderer0.setItemMargin((-3794.5888368862));
      BarRenderer.setDefaultShadowsVisible(true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.getUseFillPaint();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(0.0, (-2306.0));
      boolean boolean1 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Icon icon0 = minMaxCategoryRenderer0.getMaxIcon();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean2 = boxAndWhiskerRenderer0.equals(minMaxCategoryRenderer0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double double0 = lineRenderer3D0.getXOffset();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("", "", "");
      // Undeclared exception!
      try { 
        scatterRenderer0.setSeriesURLGenerator((-1), (CategoryURLGenerator) standardCategoryURLGenerator0, true);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      CategoryPlot categoryPlot0 = minMaxCategoryRenderer0.getPlot();
      Comparable<MinMaxCategoryRenderer>[] comparableArray0 = (Comparable<MinMaxCategoryRenderer>[]) Array.newInstance(Comparable.class, 8);
      LogAxis logAxis0 = new LogAxis();
      NumberTickUnit numberTickUnit0 = logAxis0.getTickUnit();
      comparableArray0[0] = (Comparable<MinMaxCategoryRenderer>) numberTickUnit0;
      Second second0 = null;
      try {
        second0 = new Second((-1987), 10, (-1639), 0, 232, 1102);
      } catch(IllegalArgumentException e) {
         //
         // The 'year' argument must be in range 1900 to 9999.
         //
         verifyException("org.jfree.data.time.SpreadsheetDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      LegendItemCollection legendItemCollection0 = stackedBarRenderer0.getLegendItems();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer0.getLegendItemToolTipGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(stackedBarRenderer0.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = stackedBarRenderer0.equals(legendItemCollection0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      boolean boolean1 = minMaxCategoryRenderer0.isDrawLines();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      RendererChangeEvent rendererChangeEvent0 = null;
      try {
        rendererChangeEvent0 = new RendererChangeEvent((Object) null, false);
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DrawingSupplier drawingSupplier0 = intervalBarRenderer0.getDrawingSupplier();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      boolean boolean0 = stackedBarRenderer0.getRenderAsPercentages();
      LegendItem legendItem0 = stackedBarRenderer0.getLegendItem(2517, 1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      double double0 = (-1.0);
      barRenderer0.setShadowYOffset((-1.0));
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      boolean boolean0 = lineRenderer3D0.equals(barRenderer0);
      lineRenderer3D0.setYOffset(3.0);
      int int0 = barRenderer0.getPassCount();
      barRenderer0.setItemMargin(235.87189103285);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ImageIcon imageIcon0 = new ImageIcon();
      JToggleButton jToggleButton0 = new JToggleButton("yrlzBW<", imageIcon0, false);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jToggleButton0, (Border) null, 0, 0, 0, 0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle0, (CategoryPlot) null, slidingGanttCategoryDataset0, plotRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryURLGenerator categoryURLGenerator0 = levelRenderer0.getURLGenerator(24, 3316, true);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      // Undeclared exception!
      try { 
        polarPlot0.DEFAULT_INSETS.createOutsetRectangle((Rectangle2D) null, true, false);
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      double double0 = lineAndShapeRenderer0.getItemMargin();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setAutoPopulateSeriesFillPaint(true);
      int int0 = 903;
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.updateCrosshairValues(categoryCrosshairState0, lineAndShapeRenderer0.ZERO, lineAndShapeRenderer0.ZERO, 0.0, 685, (-1357.501012074465), 808.1455608543, plotOrientation0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeXYPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Paint paint0 = statisticalBarRenderer0.lookupSeriesFillPaint((-1515));
      float[][] floatArray0 = new float[0][8];
      statisticalBarRenderer0.removeAnnotations();
      NumberAxis numberAxis0 = new NumberAxis("");
      LogAxis logAxis0 = new LogAxis("");
      FastScatterPlot fastScatterPlot0 = null;
      try {
        fastScatterPlot0 = new FastScatterPlot(floatArray0, numberAxis0, logAxis0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.chart.plot.FastScatterPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Paint paint0 = statisticalBarRenderer0.getErrorIndicatorPaint();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getBaseItemLabelGenerator();
      statisticalBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_PAINT, statisticalBarRenderer0.DEFAULT_PAINT);
      ItemLabelPosition itemLabelPosition0 = waterfallBarRenderer0.getPositiveItemLabelPositionFallback();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = waterfallBarRenderer0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        waterfallBarRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState1 = stackedAreaRenderer0.createState(plotRenderingInfo1);
      stackedAreaRenderer0.setBaseLegendShape(areaRenderer0.DEFAULT_SHAPE);
      boolean boolean0 = areaRenderer0.equals(stackedAreaRenderer0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean1 = scatterRenderer0.getItemShapeFilled((-1723), 0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      boolean boolean0 = false;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0, 783.608732107, false);
      ItemLabelPosition itemLabelPosition0 = stackedBarRenderer3D0.getNegativeItemLabelPositionFallback();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Boolean boolean1 = defaultPolarItemRenderer0.getSeriesVisible(256);
      statisticalLineAndShapeRenderer0.setSeriesShapesVisible(256, (Boolean) null);
      statisticalLineAndShapeRenderer0.removeAnnotations();
      Object object0 = statisticalLineAndShapeRenderer0.clone();
      Boolean boolean2 = statisticalLineAndShapeRenderer0.getSeriesShapesVisible(0);
      WindNeedle windNeedle0 = new WindNeedle();
      Paint paint0 = windNeedle0.getOutlinePaint();
      WaterfallBarRenderer waterfallBarRenderer0 = null;
      try {
        waterfallBarRenderer0 = new WaterfallBarRenderer(defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT, (Paint) null, statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      } catch(IllegalArgumentException e) {
         //
         // Null 'negativeBarPaint' argument
         //
         verifyException("org.jfree.chart.renderer.category.WaterfallBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      boolean boolean0 = true;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultCategoryDataset0);
      Range range1 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) null);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Paint paint0 = stackedAreaRenderer0.lookupSeriesFillPaint(5);
      // Undeclared exception!
      try { 
        stackedAreaRenderer0.getPreviousHeight((CategoryDataset) null, 5, 5);
      } catch(IllegalArgumentException e) {
         //
         // Null 'data' argument.
         //
         verifyException("org.jfree.data.DataUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("", "", "");
      statisticalLineAndShapeRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) standardCategoryURLGenerator0, false);
  }
}
