/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 11:30:07 GMT 2020
 */

package com.google.javascript.rhino.jstype;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.ErrorFunctionType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.IndexedType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.NoObjectType;
import com.google.javascript.rhino.jstype.NoResolvedType;
import com.google.javascript.rhino.jstype.NoType;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.RecordType;
import com.google.javascript.rhino.jstype.RecordTypeBuilder;
import com.google.javascript.rhino.jstype.SimpleSlot;
import com.google.javascript.rhino.jstype.StringType;
import com.google.javascript.rhino.jstype.VoidType;
import java.util.HashMap;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PrototypeObjectType_ESTest extends PrototypeObjectType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();
      boolean boolean0 = noObjectType0.differsFrom(objectType0);
      HashMap<String, RecordTypeBuilder.RecordProperty> hashMap0 = new HashMap<String, RecordTypeBuilder.RecordProperty>();
      boolean boolean1 = noObjectType0.isGlobalThisType();
      RecordType recordType0 = new RecordType(jSTypeRegistry0, hashMap0);
      JSType jSType0 = recordType0.getGreatestSubtypeHelper(noObjectType0);
      String string0 = jSType0.toDebugHashCodeString();
      boolean boolean2 = noObjectType0.isSubtype(jSType0);
      boolean boolean3 = recordType0.hasCachedValues();
      SimpleSlot simpleSlot0 = new SimpleSlot("", recordType0, false);
      JSDocInfo jSDocInfo0 = simpleSlot0.getJSDocInfo();
      recordType0.setPropertyJSDocInfo("Unknown class name", (JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      HashMap<String, RecordTypeBuilder.RecordProperty> hashMap0 = new HashMap<String, RecordTypeBuilder.RecordProperty>();
      RecordType recordType0 = jSTypeRegistry0.createRecordType(hashMap0);
      boolean boolean0 = recordType0.isPrettyPrint();
      String string0 = ".prototype";
      StringType stringType0 = new StringType(jSTypeRegistry0);
      FunctionType functionType0 = JSType.toMaybeFunctionType((JSType) stringType0);
      boolean boolean1 = true;
      JSType[] jSTypeArray0 = new JSType[4];
      jSTypeArray0[0] = (JSType) null;
      jSTypeArray0[1] = (JSType) recordType0;
      jSTypeArray0[2] = (JSType) recordType0;
      jSTypeArray0[3] = (JSType) recordType0;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ErrorReporter errorReporter0 = null;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, ", ");
      JSType jSType0 = errorFunctionType0.getPropertyType("S ITD:%7%D]L*^8KX");
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionType(jSType0, false, (JSType[]) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      NoType noType0 = new NoType(jSTypeRegistry0);
      int int0 = noType0.getPropertiesCount();
      String string0 = "";
      String string1 = "M";
      Node[] nodeArray0 = new Node[4];
      Node node0 = new Node(0);
      nodeArray0[0] = node0;
      IndexedType indexedType0 = new IndexedType(jSTypeRegistry0, noType0, noType0);
      Node node1 = Node.newNumber((double) 53, 25, 0);
      Node node2 = indexedType0.getPropertyNode("M");
      Node node3 = null;
      try {
        node3 = new Node(1116, (Node) null, node0, (Node) null, (Node) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "5'@H^TE^R/&G</446)";
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      JSTypeNative jSTypeNative0 = JSTypeNative.EVAL_ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.URI_ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.BOOLEAN_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.NUMBER_OBJECT_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSType jSType0 = jSTypeRegistry1.createUnionType(jSTypeNativeArray0);
      VoidType voidType0 = new VoidType(jSTypeRegistry1);
      JSType jSType1 = voidType0.restrictByNotNullOrUndefined();
      EnumType enumType0 = new EnumType(jSTypeRegistry1, "5'@H^TE^R/&G</446)", (Node) null, jSType1);
      FunctionType functionType0 = enumType0.getConstructor();
      // Undeclared exception!
      try { 
        noResolvedType0.differsFrom((JSType) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSType", e);
      }
  }
}
