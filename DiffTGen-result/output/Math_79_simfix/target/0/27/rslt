* EvoSuite 1.0.6
* Going to generate test cases for class: org.apache.commons.math.util.MathUtils
* Starting client
* Connecting to master process on port 11746
* Analyzing classpath: 
  - /home/hewitt/work/DiffTGen-master/output/Math_79_simfix/target/build/classes/all0.jar
  - /home/hewitt/work/DiffTGen-master/lib/myprinter.jar
  - /home/hewitt/work/DiffTGen-master/lib/commons-lang3-3.5.jar
* Finished analyzing classpath
* Generating tests for class org.apache.commons.math.util.MathUtils
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 420
  - Branch 364
  - Exception 0
  - MutationFactory 829
  - Output 179
  - Method 57
  - MethodNoException 57
  - CBranchFitnessFactory 364
* Using seed 1585834477870
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:>                                  2%][Progress:===>                          11%] [Cov:====>                              14%][Progress:===>                          11%] [Cov:=====>                             16%][Progress:===>                          11%] [Cov:======>                            18%][Progress:===>                          13%] [Cov:>                                  1%][Progress:===>                          13%] [Cov:>                                  2%][Progress:===>                          13%] [Cov:=====>                             15%][Progress:===>                          13%] [Cov:=====>                             16%][Progress:===>                          13%] [Cov:======>                            19%][Progress:===>                          13%] [Cov:=======>                           21%][Progress:====>                         15%] [Cov:>                                  2%][Progress:====>                         15%] [Cov:=>                                 4%][Progress:====>                         15%] [Cov:=====>                             17%][Progress:====>                         15%] [Cov:======>                            18%][Progress:====>                         15%] [Cov:======>                            19%][Progress:====>                         15%] [Cov:=======>                           21%][Progress:====>                         15%] [Cov:========>                          24%][Progress:====>                         15%] [Cov:=========>                         26%][Progress:====>                         16%] [Cov:===========>                       32%][Progress:====>                         16%] [Cov:=============>                     38%][Progress:====>                         16%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:=>                                 4%][Progress:=====>                        18%] [Cov:==>                                8%][Progress:=====>                        18%] [Cov:=======>                           20%][Progress:=====>                        18%] [Cov:========>                          24%][Progress:=====>                        18%] [Cov:=========>                         26%][Progress:=====>                        18%] [Cov:===========>                       33%][Progress:=====>                        18%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:==============>                    40%][Progress:======>                       20%] [Cov:>                                  2%][Progress:======>                       20%] [Cov:=>                                 5%][Progress:======>                       20%] [Cov:=====>                             17%][Progress:======>                       20%] [Cov:======>                            19%][Progress:======>                       20%] [Cov:=======>                           20%][Progress:======>                       20%] [Cov:========>                          25%][Progress:======>                       20%] [Cov:==========>                        29%][Progress:======>                       20%] [Cov:==========>                        30%][Progress:======>                       21%] [Cov:>                                  2%][Progress:======>                       21%] [Cov:=>                                 4%][Progress:======>                       21%] [Cov:=====>                             16%][Progress:======>                       21%] [Cov:=====>                             17%][Progress:======>                       21%] [Cov:======>                            18%][Progress:======>                       21%] [Cov:=======>                           22%][Progress:======>                       21%] [Cov:========>                          25%][Progress:======>                       21%] [Cov:=========>                         26%][Progress:======>                       21%] [Cov:==========>                        29%][Progress:======>                       21%] [Cov:===========>                       34%][Progress:======>                       21%] [Cov:============>                      35%][Progress:======>                       23%] [Cov:=======>                           20%][Progress:======>                       23%] [Cov:=======>                           21%][Progress:======>                       23%] [Cov:=========>                         26%][Progress:======>                       23%] [Cov:==========>                        30%][Progress:======>                       23%] [Cov:==========>                        31%][Progress:======>                       23%] [Cov:===========>                       32%][Progress:=========>                    31%] [Cov:=>                                 4%][Progress:=========>                    31%] [Cov:==>                                8%][Progress:=========>                    31%] [Cov:=======>                           20%][Progress:=========>                    31%] [Cov:========>                          24%][Progress:=========>                    31%] [Cov:=========>                         28%][Progress:=========>                    31%] [Cov:===========>                       33%][Progress:=========>                    31%] [Cov:===========>                       34%][Progress:=========>                    31%] [Cov:============>                      36%][Progress:=========>                    31%] [Cov:============>                      37%][Progress:=========>                    33%] [Cov:=======>                           22%][Progress:=========>                    33%] [Cov:========>                          24%][Progress:=========>                    33%] [Cov:=========>                         28%][Progress:=========>                    33%] [Cov:===========>                       32%][Progress:=========>                    33%] [Cov:===========>                       33%][Progress:=========>                    33%] [Cov:============>                      37%][Progress:=========>                    33%] [Cov:=============>                     38%][Progress:===========>                  38%] [Cov:>                                  0%][Progress:===========>                  38%] [Cov:>                                  1%][Progress:===========>                  38%] [Cov:====>                              14%][Progress:===========>                  38%] [Cov:=====>                             15%][Progress:===========>                  38%] [Cov:=====>                             16%][Progress:===========>                  38%] [Cov:=======>                           20%][Progress:============>                 40%] [Cov:========>                          24%][Progress:============>                 40%] [Cov:=========>                         26%][Progress:============>                 40%] [Cov:===========>                       33%][Progress:============>                 40%] [Cov:==============>                    40%][Progress:============>                 41%] [Cov:=>                                 4%][Progress:============>                 41%] [Cov:===>                               9%][Progress:============>                 41%] [Cov:=======>                           21%][Progress:============>                 41%] [Cov:=========>                         26%][Progress:============>                 41%] [Cov:==========>                        29%][Progress:============>                 41%] [Cov:============>                      36%][Progress:============>                 41%] [Cov:===============>                   43%][Progress:============>                 41%] [Cov:===============>                   44%][Progress:============>                 43%] [Cov:>                                  1%][Progress:============>                 43%] [Cov:>                                  2%][Progress:============>                 43%] [Cov:=====>                             15%][Progress:============>                 43%] [Cov:=====>                             16%][Progress:============>                 43%] [Cov:=====>                             17%][Progress:=============>                45%] [Cov:>                                  2%][Progress:=============>                45%] [Cov:=>                                 3%][Progress:=============>                45%] [Cov:=====>                             15%][Progress:=============>                45%] [Cov:=====>                             16%][Progress:=============>                45%] [Cov:=====>                             17%][Progress:=============>                45%] [Cov:=======>                           20%][Progress:=============>                45%] [Cov:========>                          23%][Progress:===============>              53%] [Cov:>                                  1%][Progress:===============>              53%] [Cov:=>                                 3%][Progress:===============>              53%] [Cov:=====>                             15%][Progress:===============>              53%] [Cov:======>                            18%][Progress:===============>              53%] [Cov:=======>                           20%][Progress:===============>              53%] [Cov:========>                          23%][Progress:===============>              53%] [Cov:=========>                         26%][Progress:===============>              53%] [Cov:=========>                         27%][Progress:================>             55%] [Cov:=>                                 3%][Progress:================>             55%] [Cov:=>                                 5%][Progress:================>             55%] [Cov:=====>                             17%][Progress:================>             55%] [Cov:======>                            19%][Progress:================>             55%] [Cov:=======>                           21%][Progress:================>             55%] [Cov:========>                          25%][Progress:================>             55%] [Cov:==========>                        29%][Progress:================>             55%] [Cov:===============>                   44%][Progress:================>             56%] [Cov:=========>                         27%][Progress:================>             56%] [Cov:=========>                         28%][Progress:================>             56%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:===============>                   44%][Progress:=================>            58%] [Cov:============>                      35%][Progress:=================>            58%] [Cov:==============>                    40%][Progress:==================>           60%] [Cov:===========>                       33%][Progress:==================>           60%] [Cov:=============>                     39%][Progress:==================>           60%] [Cov:==============>                    41%][Progress:==================>           60%] [Cov:==============>                    42%][Progress:==================>           60%] [Cov:===============>                   43%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           61%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:==============================>    88%]
* Search finished after 63s and 14 generations, 12051 statements, best individual has fitness: 571.979264153642
* Minimizing test suite
* Going to analyze the coverage criteria
[MASTER] 21:36:52.670 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 85%
* Total number of goals: 420
* Number of covered goals: 359
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 84%
* Total number of goals: 364
* Number of covered goals: 304
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 80%
* Total number of goals: 829
* Number of covered goals: 666
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 78%
* Total number of goals: 179
* Number of covered goals: 139
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 57
* Number of covered goals: 57
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 57
* Number of covered goals: 57
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 78%
* Total number of goals: 364
* Number of covered goals: 284
* Generated 145 tests with total length 2215
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Compiling and checking tests
* Writing JUnit test case 'MathUtils_ESTest' to evosuite-tests
* Done!

* Computation finished
