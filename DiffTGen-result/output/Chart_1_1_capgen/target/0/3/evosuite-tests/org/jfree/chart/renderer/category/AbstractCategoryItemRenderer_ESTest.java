/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 10:03:45 GMT 2020
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BandedSampleModel;
import java.awt.image.BufferedImage;
import java.awt.image.IndexColorModel;
import java.sql.Connection;
import java.sql.Statement;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.TimeZone;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarPainter;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.GradientPaintTransformer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.StandardGradientPaintTransformer;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.Month;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimePeriod;
import org.jfree.data.time.TimePeriodValues;
import org.jfree.data.time.TimePeriodValuesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Paint paint0 = boxAndWhiskerRenderer0.getArtifactPaint();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2.0, 2.0, false);
      double[][] doubleArray0 = new double[7][9];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray2[1] = 0.2;
      doubleArray2[2] = 8.0;
      doubleArray2[3] = 8.0;
      doubleArray2[4] = 12.0;
      doubleArray2[5] = 3.0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray3[1] = 0.2;
      doubleArray3[2] = 2.0;
      doubleArray3[3] = 8.0;
      doubleArray3[4] = 8.0;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[9];
      doubleArray4[0] = 1.0E11;
      doubleArray4[1] = 2.0;
      doubleArray4[2] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray4[3] = 12.0;
      doubleArray4[4] = 8.0;
      doubleArray4[5] = 0.2;
      doubleArray4[6] = 12.0;
      doubleArray4[7] = 12.0;
      doubleArray4[8] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[3];
      doubleArray5[0] = 1375.1741899;
      doubleArray5[1] = 1.0E11;
      doubleArray5[2] = 0.2;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[9];
      doubleArray6[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray6[1] = 2.0;
      doubleArray6[2] = 12.0;
      doubleArray6[3] = 8.0;
      doubleArray6[4] = 12.0;
      doubleArray6[5] = 12.0;
      doubleArray6[6] = 0.2;
      doubleArray6[7] = 1.0E11;
      doubleArray6[8] = 2958.0;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[7];
      doubleArray7[0] = 12.0;
      doubleArray7[1] = 1375.1741899;
      doubleArray7[2] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray7[3] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray7[4] = 12.0;
      doubleArray7[5] = 12.0;
      doubleArray7[6] = 1.0E11;
      doubleArray0[6] = doubleArray7;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      int int0 = (-2080);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      // Undeclared exception!
      try { 
        barRenderer3D0.updateCrosshairValues(categoryCrosshairState0, (Comparable) null, (Comparable) null, (-1733.63900531), (-2080), (-1733.63900531), 0.0, plotOrientation0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = 0;
      int int1 = 0;
      Boolean boolean0 = Boolean.FALSE;
      lineRenderer3D0.setSeriesShapesVisible(0, boolean0);
      boolean boolean1 = lineRenderer3D0.getItemLineVisible(0, (-704));
      int int2 = lineRenderer3D0.getRowCount();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int3 = (-1310);
      Paint paint0 = levelRenderer0.lookupLegendTextPaint((-1310));
      levelRenderer0.setAutoPopulateSeriesOutlinePaint(true);
      levelRenderer0.setMaximumItemWidth((-1257.497766913));
      lineRenderer3D0.setWallPaint(levelRenderer0.DEFAULT_PAINT);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer0.getLegendItemLabelGenerator();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      // Undeclared exception!
      try { 
        rectangleInsets0.createAdjustedRectangle((Rectangle2D) null, lengthAdjustmentType0, lengthAdjustmentType0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'base' argument.
         //
         verifyException("org.jfree.chart.util.RectangleInsets", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Stroke stroke0 = layeredBarRenderer0.lookupSeriesOutlineStroke(1837);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = layeredBarRenderer0.getBaseItemLabelGenerator();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      AffineTransform affineTransform0 = new AffineTransform((-5068.0622), (-5068.0622), (double) layeredBarRenderer0.ZERO, (-840.0), (-842.4063231476), 30.0);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, 1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)81;
      byte byte0 = (byte) (-19);
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte) (-66);
      byte byte1 = (byte)0;
      byteArray0[3] = (byte)0;
      byte byte2 = (byte) (-58);
      byteArray0[4] = (byte) (-58);
      IndexColorModel indexColorModel0 = new IndexColorModel(1, 1, byteArray0, byteArray0, byteArray0);
      int int0 = 99;
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-19);
      int int1 = 3;
      intArray0[1] = 3;
      intArray0[2] = 1837;
      intArray0[3] = (int) (byte) (-58);
      intArray0[4] = (-227);
      intArray0[5] = (int) (byte) (-58);
      BandedSampleModel bandedSampleModel0 = null;
      try {
        bandedSampleModel0 = new BandedSampleModel(99, 99, 1837, (byte)81, intArray0, intArray0);
      } catch(IllegalArgumentException e) {
         //
         // Unsupported dataType: 99
         //
         verifyException("java.awt.image.SampleModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart("Base tool tip generator not cloneable.", boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_FONT, spiderWebPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 1.0F, 17.16478563042, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = chartPanel0.getBounds();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle0, categoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("ZOOM_RESET_DOMAIN");
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "ZOOM_IN_BOTH");
      DateAxis dateAxis0 = new DateAxis("Not implemented.", simpleTimeZone0);
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.drawVerticalItem(graphics2D0, categoryItemRendererState0, rectangle0, categoryPlot0, extendedCategoryAxis0, dateAxis0, (CategoryDataset) null, 0, 3, false, (-144));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.BoxAndWhiskerRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getToolTipGenerator(0, 0, false);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(0, true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2487.80527091, 1.0E9);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(statisticalLineAndShapeRenderer0, true);
      JFreeChart jFreeChart0 = rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, true, false, true, false, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = (-3089);
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem((-3089), (-3089));
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setBaseLegendTextFont(minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT);
      int int1 = 1952;
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-1196.64613864));
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3158, 2.0, 2387.6108897393, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D1 = bufferedImageRenderingSource0.createGraphics2D();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel(timeTableXYDataset0);
      JTable jTable0 = new JTable(xYDatasetTableModel0);
      Rectangle rectangle0 = jTable0.getCellRect(3158, (-2418), true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("ZOOM_OUT_BOTH");
      // Undeclared exception!
      try { 
        candlestickRenderer0.createHotSpotBounds(graphics2D1, rectangle0, combinedRangeXYPlot0, logarithmicAxis0, logarithmicAxis0, timeTableXYDataset0, 680, 10, false, (XYItemRendererState) null, rectangle0);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      LegendItemCollection legendItemCollection0 = statisticalLineAndShapeRenderer0.getLegendItems();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalLineAndShapeRenderer0.getItemLabelGenerator(0, (-1), false);
      statisticalLineAndShapeRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, false);
      statisticalLineAndShapeRenderer0.setUseOutlinePaint(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(standardGradientPaintTransformer0);
      stackedBarRenderer3D0.notifyListeners(rendererChangeEvent0);
      ItemLabelPosition itemLabelPosition0 = stackedBarRenderer3D0.getPositiveItemLabelPositionFallback();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemURLGenerator();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setDrawLines(false);
      ChartChangeEventType chartChangeEventType0 = ChartChangeEventType.GENERAL;
      rendererChangeEvent0.setType(chartChangeEventType0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      plotRenderingInfo0.setPlotArea((Rectangle2D) null);
      CategoryItemRendererState categoryItemRendererState0 = minMaxCategoryRenderer0.createState(plotRenderingInfo0);
      boolean boolean0 = scatterRenderer0.equals(rendererChangeEvent0);
      double double0 = stackedBarRenderer3D0.getShadowXOffset();
      minMaxCategoryRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0, "Null 'orientation' argument.");
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.jdbc.JDBCCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = categoryStepRenderer0.getSeriesToolTipGenerator(0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getItemLabelGenerator(0, 0, true);
      categoryStepRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("Nfy^)r s<\"");
      intervalBarRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setDataBoundsIncludesVisibleSeriesOnly(false);
      Boolean boolean0 = lineRenderer3D0.getSeriesShapesFilled((-1276));
      Plot plot0 = null;
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((String) null, (Plot) null);
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setItemMargin(1065.6503);
      int int0 = (-637);
      int int1 = 0;
      Paint paint0 = levelRenderer0.lookupSeriesPaint(0);
      CategoryURLGenerator categoryURLGenerator0 = levelRenderer0.getURLGenerator((-637), (-2434), true);
      // Undeclared exception!
      try { 
        levelRenderer0.setSeriesURLGenerator((-2434), (CategoryURLGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      DrawingSupplier drawingSupplier0 = lineAndShapeRenderer0.getDrawingSupplier();
      lineAndShapeRenderer0.setSeriesToolTipGenerator(185, (CategoryToolTipGenerator) null, true);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      boolean boolean0 = statisticalBarRenderer0.equals((Object) null);
      lineAndShapeRenderer0.setUseOutlinePaint(true);
      Millisecond millisecond0 = new Millisecond();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Base tool tip generator not cloneable.", millisecond0, 2993.9162, 3.0);
      Layer layer0 = Layer.BACKGROUND;
      lineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      lineAndShapeRenderer0.setSeriesShapesVisible(0, false);
      double double0 = statisticalBarRenderer0.getShadowYOffset();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Object object0 = scatterRenderer0.clone();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Stroke stroke0 = statisticalBarRenderer0.getErrorIndicatorStroke();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1884.2271123312635, (double) statisticalBarRenderer0.ZERO);
      double double0 = (-712.334);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      double double0 = (-679.04);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        barRenderer3D0.getDomainAxis(combinedDomainCategoryPlot0, taskSeriesCollection0);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.removeAnnotations();
      defaultCategoryItemRenderer0.setDrawOutlines(false);
      Paint paint0 = defaultCategoryItemRenderer0.getLegendTextPaint(0);
      defaultCategoryItemRenderer0.setUseOutlinePaint(true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseShapesFilled(false);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Paint paint0 = levelRenderer0.lookupSeriesOutlinePaint(0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Range range0 = levelRenderer0.findRangeBounds(taskSeriesCollection0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      boolean boolean0 = stackedAreaRenderer0.equals((Object) null);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      boolean boolean1 = stackedBarRenderer0.getRenderAsPercentages();
      GradientPaintTransformer gradientPaintTransformer0 = stackedBarRenderer0.getGradientPaintTransformer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      boolean boolean2 = minMaxCategoryRenderer0.equals(taskSeriesCollection0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseOutlinePaint(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, (double) levelRenderer0.ZERO);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(3, 0, (-1467));
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -1467
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Graphics2D graphics2D0 = null;
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      // Undeclared exception!
      try { 
        defaultCategoryItemRenderer0.drawBackground((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Float0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.Plot", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      CategoryCrosshairState categoryCrosshairState0 = categoryStepRenderer_State0.getCrosshairState();
      MockDate mockDate0 = new MockDate(12L);
      TimeZone timeZone0 = TimeZone.getTimeZone("Null 'generator' argument.");
      Month month0 = new Month(mockDate0, timeZone0);
      int int0 = (-1);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'generator' argument.", boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, false);
      CategoryPlot categoryPlot1 = jFreeChart0.getCategoryPlot();
      PlotOrientation plotOrientation0 = categoryPlot1.getOrientation();
      boxAndWhiskerRenderer0.updateCrosshairValues((CategoryCrosshairState) null, (Comparable) null, month0, (-1.0), (-1), 1273.901, (-269.08989), plotOrientation0);
      boxAndWhiskerRenderer0.setItemMargin((-471.7));
      BarRenderer barRenderer0 = new BarRenderer();
      double[] doubleArray0 = barRenderer0.calculateBarL0L1(140.05833042253013, (-1874.60988981), 140.05833042253013);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) 5;
      AffineTransform affineTransform0 = null;
      try {
        affineTransform0 = new AffineTransform(floatArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      levelRenderer0.setSeriesItemLabelGenerator(991, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      double double0 = levelRenderer0.getItemMargin();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseLegendShape(levelRenderer0.DEFAULT_SHAPE);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
      try { 
        defaultMultiValueCategoryDataset0.getRowKey(1799);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1799, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      String string0 = "J\\ec>XCTF";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Jec>XCTF", (-1.0), 3.4028234663852886E38);
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      defaultTableXYDataset0.removeAllValuesForX(0.4);
      CategoryToolTipGenerator categoryToolTipGenerator0 = spiderWebPlot0.getToolTipGenerator();
      double double0 = defaultTableXYDataset0.getDomainUpperBound(false);
      boolean boolean0 = false;
      groupedStackedBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      boolean boolean1 = defaultMultiValueCategoryDataset0.hasListener(defaultTableXYDataset0);
      Range range0 = groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("Jec>XCTF", spiderWebPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-2848), (-1198), (double) (-1198), 0.4, chartRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Width (-2848) and height (-1198) cannot be <= 0
         //
         verifyException("java.awt.image.DirectColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      Paint paint0 = waterfallBarRenderer0.getLastBarPaint();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.setAutoPopulateSeriesOutlinePaint(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) categoryStepRenderer0.ZERO, (-10.0));
      boolean boolean0 = categoryStepRenderer0.equals(stackedBarRenderer3D0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 5, 3.0);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      LegendItem legendItem0 = scatterRenderer0.getLegendItem(0, 365);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      int int0 = (-983);
      CategoryURLGenerator categoryURLGenerator0 = lineAndShapeRenderer0.getURLGenerator((-983), (-983), false);
      // Undeclared exception!
      try { 
        lineAndShapeRenderer0.setSeriesURLGenerator((-983), (CategoryURLGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryPlot categoryPlot0 = barRenderer0.getPlot();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Shape shape0 = categoryStepRenderer0.getLegendShape(10);
      LegendItemCollection legendItemCollection0 = categoryStepRenderer0.getLegendItems();
      barRenderer0.setMinimumBarLength(5);
      LegendItem legendItem0 = categoryStepRenderer0.getLegendItem((-1464), 10);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      Icon icon0 = defaultListCellRenderer0.getDisabledIcon();
      // Undeclared exception!
      try { 
        minMaxCategoryRenderer0.setObjectIcon((Icon) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'icon' argument.
         //
         verifyException("org.jfree.chart.renderer.category.MinMaxCategoryRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      LegendItemCollection legendItemCollection0 = defaultCategoryItemRenderer0.getLegendItems();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Should never get to here!", "", "eiUb");
      defaultCategoryItemRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      defaultCategoryItemRenderer0.setAutoPopulateSeriesOutlineStroke(true);
      defaultCategoryItemRenderer0.setBaseLinesVisible(false);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      stackedBarRenderer3D0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      Paint paint0 = stackedBarRenderer3D0.getShadowPaint();
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getURLGenerator((-1), 0, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 0, 0);
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 0
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = categoryStepRenderer0.getLegendItemToolTipGenerator();
      categoryStepRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Stroke stroke0 = statisticalBarRenderer0.getErrorIndicatorStroke();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      minMaxCategoryRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double((double) minMaxCategoryRenderer0.ZERO, (double) minMaxCategoryRenderer0.ZERO, 0.0, (double) minMaxCategoryRenderer0.ZERO, 0.0, (-1.0));
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      // Undeclared exception!
      try { 
        plotRenderingInfo0.getSubplotInfo(1581);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1581, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setShadowVisible(false);
      ItemLabelPosition itemLabelPosition0 = ganttRenderer0.getNegativeItemLabelPositionFallback();
      ganttRenderer0.setBase(1573);
      LegendItem legendItem0 = ganttRenderer0.getLegendItem(1573, 573);
      ItemLabelPosition itemLabelPosition1 = ganttRenderer0.getNegativeItemLabelPositionFallback();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.2);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Stroke stroke0 = thermometerPlot0.getThermometerStroke();
      JFreeChart jFreeChart0 = new JFreeChart("TimeSeriesDataset.addValue(): series #", levelRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0, false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 0, 573, (-1455), 0, 3, 2647, false, true, false, false, true, false);
      boolean boolean0 = defaultValueDataset0.hasListener(chartPanel0);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(levelRenderer0.ZERO, 5064.201, ganttRenderer0.ZERO, 0.2, ganttRenderer0.DEFAULT_PAINT, stroke0);
      categoryLineAnnotation0.setCategory2(2);
      Object object0 = categoryLineAnnotation0.clone();
      boolean boolean1 = levelRenderer0.removeAnnotation(categoryLineAnnotation0);
      levelRenderer0.setItemMargin(3.0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double double0 = boxAndWhiskerRenderer0.getMaximumBarWidth();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      ChartEntity chartEntity0 = new ChartEntity(boxAndWhiskerRenderer1.DEFAULT_SHAPE, "");
      standardEntityCollection0.add(chartEntity0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = boxAndWhiskerRenderer0.getToolTipGenerator(0, 0, false);
      boxAndWhiskerRenderer1.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null);
      int int0 = 0;
      boolean boolean0 = false;
      Shape shape0 = boxAndWhiskerRenderer1.getItemShape(0, 0, false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.getMinOutlier((Comparable) boxAndWhiskerRenderer1.ZERO, (Comparable) boxAndWhiskerRenderer1.ZERO);
      } catch(IllegalArgumentException e) {
         //
         // Row key (0.0) not recognised.
         //
         verifyException("org.jfree.data.KeyedObjects2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      boolean boolean0 = boxAndWhiskerRenderer0.getFillBox();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = boxAndWhiskerRenderer0.getPlot();
      // Undeclared exception!
      try { 
        lineRenderer3D0.drawBackground((Graphics2D) null, (CategoryPlot) null, (Rectangle2D) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.LineRenderer3D", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CategoryDataset categoryDataset0 = null;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) null);
      Paint paint0 = multiplePiePlot0.getAggregatedItemsPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, paint0, multiplePiePlot0.DEFAULT_BACKGROUND_PAINT, multiplePiePlot0.DEFAULT_OUTLINE_PAINT);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("YOEC[zAjqM>w$~Hq");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = waterfallBarRenderer0.getToolTipGenerator((-1309), (-3), false);
      boxAndWhiskerRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      Graphics2D graphics2D0 = null;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Graphics2D graphics2D0 = null;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) ganttRenderer0.ZERO, (double) ganttRenderer0.ZERO, false);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(1.0F, 3574.7585F, 1.0F, 1.0F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.JAPAN;
      DateAxis dateAxis0 = new DateAxis("Should never get to here!", timeZone0, locale0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, taskSeriesCollection0, (PlotRenderingInfo) null);
      } catch(IllegalArgumentException e) {
         //
         // Negative 'index'.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Shape shape0 = groupedStackedBarRenderer0.lookupSeriesShape(2064);
      Paint paint0 = groupedStackedBarRenderer0.getLegendTextPaint(2064);
      groupedStackedBarRenderer0.setBase(3615.601773836454);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseSeriesOffset(true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      LegendItem legendItem0 = statisticalLineAndShapeRenderer0.getLegendItem(0, 2064);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Range range0 = stackedBarRenderer3D0.findRangeBounds(taskSeriesCollection0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getBaseToolTipGenerator();
      double[][] doubleArray0 = new double[6][7];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 0.2;
      doubleArray1[1] = 12.0;
      doubleArray1[2] = 12.0;
      doubleArray1[3] = 8.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = 3.0;
      doubleArray2[1] = 12.0;
      doubleArray2[2] = 12.0;
      doubleArray2[3] = 0.2;
      doubleArray2[4] = 8.0;
      doubleArray2[5] = 3.0;
      doubleArray2[6] = 8.0;
      doubleArray2[7] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray2[8] = 3.0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[8];
      doubleArray4[0] = 8.0;
      doubleArray4[1] = 12.0;
      doubleArray4[2] = 12.0;
      doubleArray4[3] = 8.0;
      doubleArray4[4] = 3.0;
      doubleArray4[5] = 3.0;
      doubleArray4[6] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray4[7] = 3.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[3];
      doubleArray5[0] = 12.0;
      doubleArray5[1] = 0.2;
      doubleArray5[2] = 3.0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[6];
      doubleArray6[0] = 12.0;
      doubleArray6[1] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray6[2] = 12.0;
      doubleArray6[3] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray6[4] = 0.05;
      doubleArray6[5] = 0.2;
      doubleArray0[5] = doubleArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(10, 400, chartRenderingInfo0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      int int0 = lineAndShapeRenderer0.hashCode();
      Object object0 = lineAndShapeRenderer0.clone();
      lineAndShapeRenderer0.setBaseShapesFilled(true);
      boolean boolean0 = lineAndShapeRenderer0.getItemLineVisible(462, 462);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      boolean boolean1 = minMaxCategoryRenderer0.isDrawLines();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.setIncludeBaseInRange(true);
      Paint paint0 = stackedBarRenderer3D0.getShadowPaint();
      LegendItemCollection legendItemCollection0 = lineAndShapeRenderer0.getLegendItems();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double double0 = levelRenderer0.getMaximumItemWidth();
      lineRenderer3D0.setSeriesShapesFilled(462, true);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      int int0 = areaRenderer0.hashCode();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.setUseFillPaint(true);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Shape shape0 = lineRenderer3D0.getLegendShape(4368);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = lineRenderer3D0.getSeriesItemLabelGenerator((-1198));
      lineRenderer3D0.setSeriesItemLabelGenerator(4368, (CategoryItemLabelGenerator) null);
      Paint paint0 = lineRenderer3D0.getLegendTextPaint(67);
      double double0 = lineRenderer3D0.getXOffset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getBaseToolTipGenerator();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setSeriesToolTipGenerator((-246), (CategoryToolTipGenerator) null, true);
      } catch(IllegalArgumentException e) {
         //
         // Requires index >= 0.
         //
         verifyException("org.jfree.chart.util.AbstractObjectList", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      PiePlot piePlot0 = new PiePlot();
      JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 3850.863, (-1367.18), chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(10);
      statisticalLineAndShapeRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, rectangle0);
      Boolean boolean0 = statisticalLineAndShapeRenderer0.getSeriesShapesVisible(0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(21, 10, (-3337.02191124308), (double) 1.0F, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((-3337.02191124308));
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      // Undeclared exception!
      try { 
        statisticalBarRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, valueAxis0, (Rectangle2D) null, (double) scatterRenderer0.ZERO, valueAxis0.DEFAULT_TICK_MARK_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.NumberAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((-1.0), (-1.0));
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("", dateFormat0);
      barRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = lineRenderer3D0.getLegendItemToolTipGenerator();
      // Undeclared exception!
      try { 
        lineRenderer3D0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'generator' argument.
         //
         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseLegendTextFont(ganttRenderer0.DEFAULT_VALUE_LABEL_FONT);
      TimePeriodValues timePeriodValues0 = new TimePeriodValues(stackedAreaRenderer0.ZERO);
      Week week0 = new Week((-3632), (-3632));
      RegularTimePeriod regularTimePeriod0 = week0.previous();
      Date date0 = regularTimePeriod0.getStart();
      RegularTimePeriod regularTimePeriod1 = week0.previous();
      Locale locale0 = Locale.CHINESE;
      Calendar calendar0 = MockCalendar.getInstance(locale0);
      long long0 = regularTimePeriod0.getFirstMillisecond(calendar0);
      timePeriodValues0.add((TimePeriod) regularTimePeriod0, 3.0);
      stackedAreaRenderer0.setDefaultEntityRadius(1285);
      TimePeriodValuesCollection timePeriodValuesCollection0 = new TimePeriodValuesCollection(timePeriodValues0);
      boolean boolean0 = stackedAreaRenderer0.hasListener(timePeriodValuesCollection0);
      stackedAreaRenderer0.setRenderAsPercentages(true);
      boolean boolean1 = ganttRenderer0.equals(date0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      stackedAreaRenderer0.setSeriesURLGenerator(994, (CategoryURLGenerator) standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Canvas canvas0 = new Canvas();
      boolean boolean0 = levelRenderer0.equals(canvas0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer0.getLegendItemURLGenerator();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double double0 = boxAndWhiskerRenderer0.getMaximumBarWidth();
      Year year0 = new Year();
      Week week0 = new Week(2984, year0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("rxv", week0, 1.0);
      Layer layer0 = Layer.FOREGROUND;
      boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Color color0 = (Color)Plot.DEFAULT_OUTLINE_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = null;
      try {
        waterfallBarRenderer0 = new WaterfallBarRenderer((Paint) null, (Paint) null, color0, color0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'firstBarPaint' argument
         //
         verifyException("org.jfree.chart.renderer.category.WaterfallBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      String string0 = "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer";
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", combinedDomainCategoryPlot0);
      int int0 = (-385);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage((-385), 3, (-385), chartRenderingInfo0);
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type -385
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultTableXYDataset defaultTableXYDataset0 = new DefaultTableXYDataset(false);
      // Undeclared exception!
      try { 
        defaultTableXYDataset0.getSeries((-855));
      } catch(IllegalArgumentException e) {
         //
         // Index outside valid range.
         //
         verifyException("org.jfree.data.xy.DefaultTableXYDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double double0 = boxAndWhiskerRenderer0.getItemMargin();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      double[][] doubleArray0 = new double[5][9];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 0.2;
      doubleArray1[1] = (double) groupedStackedBarRenderer0.ZERO;
      doubleArray1[2] = 0.2;
      doubleArray1[3] = 0.2;
      doubleArray1[4] = (-219.28430665766365);
      doubleArray1[5] = (double) levelRenderer0.ZERO;
      doubleArray1[6] = 0.2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[7];
      doubleArray3[0] = (-219.28430665766365);
      doubleArray3[1] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray3[2] = (-219.28430665766365);
      doubleArray3[3] = (double) levelRenderer0.ZERO;
      doubleArray3[4] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray3[5] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray3[6] = (double) groupedStackedBarRenderer0.ZERO;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[8];
      doubleArray4[0] = 0.2;
      doubleArray4[1] = 0.0;
      doubleArray4[2] = (double) levelRenderer0.ZERO;
      doubleArray4[3] = 0.2;
      doubleArray4[4] = 3.0;
      doubleArray4[5] = (-346.464);
      doubleArray4[6] = 0.2;
      doubleArray4[7] = (double) levelRenderer0.ZERO;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[5];
      doubleArray5[0] = (double) levelRenderer0.ZERO;
      doubleArray5[1] = 0.2;
      doubleArray5[2] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray5[3] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray5[4] = 0.0;
      doubleArray0[4] = doubleArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      JFreeChart jFreeChart0 = null;
      try {
        jFreeChart0 = new JFreeChart((Plot) null);
      } catch(NullPointerException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.JFreeChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(minMaxCategoryRenderer0);
      JFreeChart jFreeChart0 = rendererChangeEvent0.getChart();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false, false, true, true, true);
      // Undeclared exception!
      try { 
        chartPanel0.createGraphics2D();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Object object0 = defaultCategoryDataset0.clone();
      double double0 = stackedAreaRenderer0.getPreviousHeight(defaultCategoryDataset0, (-1051), (-1051));
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 4375);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'annotation' argument.");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        groupedStackedBarRenderer0.calculateBarW0(combinedDomainCategoryPlot0, plotOrientation0, rectangle0, subCategoryAxis0, categoryItemRendererState0, 3600, 3600);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.category.GroupedStackedBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BarPainter barPainter0 = BarRenderer.getDefaultBarPainter();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BoxAndWhiskerXYToolTipGenerator boxAndWhiskerXYToolTipGenerator0 = new BoxAndWhiskerXYToolTipGenerator();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(14.0, false, boxAndWhiskerXYToolTipGenerator0);
      Shape shape0 = candlestickRenderer0.getItemShape((-1771), 2225, false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        lineRenderer3D0.addEntity((EntityCollection) null, shape0, defaultBoxAndWhiskerCategoryDataset0, 0, 151, true);
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      boolean boolean0 = true;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      String string0 = "Not implemented.";
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("?v4FGFYU`Y.", "?v4FGFYU`Y.", "xrD;ze]YlY*[P9C", "Not implemented.");
      } catch(Throwable e) {
      }
  }
}
