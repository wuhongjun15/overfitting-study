/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 27 08:43:26 GMT 2020
 */

package org.jfree.chart.axis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.image.BufferedImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.data.general.PieDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.SerialDate;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Axis_ESTest extends Axis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("64 0TBv>=au");
      subCategoryAxis0.configure();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("3\"~");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("3\"~");
      boolean boolean0 = dateAxis0.equals(logarithmicAxis0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("<W*!:");
      boolean boolean0 = logarithmicAxis0.isVisible();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      RectangleInsets rectangleInsets0 = categoryAxis0.getTickLabelInsets();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      Stroke stroke0 = categoryAxis3D0.getTickMarkStroke();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("3\"~");
      float float0 = dateAxis0.getTickMarkInsideLength();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("Null 'font' argument.", zoneInfo0);
      Font font0 = dateAxis0.getTickLabelFont();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("uu{");
      Plot plot0 = categoryAxis0.getPlot();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("ITb[_.z_FC");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      extendedCategoryAxis0.addChangeListener(combinedDomainXYPlot0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D((PieDataset) null);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      subCategoryAxis0.setTickMarkPaint(piePlot3D0.DEFAULT_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("3\"~");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("3\"~");
      logarithmicAxis0.setTickMarkStroke(dateAxis0.DEFAULT_TICK_MARK_STROKE);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, ".(/Vmhv1");
      // Undeclared exception!
      try { 
        cyclicNumberAxis0.setTickLabelPaint((Paint) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.axis.Axis", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3511.67168571, (String) null);
      SystemColor systemColor0 = SystemColor.controlLtHighlight;
      cyclicNumberAxis0.setTickLabelPaint(systemColor0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("|");
      SerialDate serialDate0 = SerialDate.createInstance(14);
      Day day0 = new Day(serialDate0);
      PeriodAxis periodAxis0 = new PeriodAxis("|", day0, day0);
      categoryAxis3D0.setTickLabelFont(periodAxis0.DEFAULT_AXIS_LABEL_FONT);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[6];
      SymbolAxis symbolAxis0 = new SymbolAxis("org.jfree.chart.axis.Axis", stringArray0);
      symbolAxis0.setTickLabelsVisible(false);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Ls");
      categoryAxis3D0.setTickLabelsVisible(true);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[7];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      // Undeclared exception!
      try { 
        symbolAxis0.setAxisLineStroke((Stroke) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.axis.Axis", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("WDBOjZ");
      // Undeclared exception!
      try { 
        logarithmicAxis0.setAxisLinePaint((Paint) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.axis.Axis", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("uu{");
      Color color0 = (Color)Plot.DEFAULT_OUTLINE_PAINT;
      categoryAxis0.setAxisLinePaint(color0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      DateAxis dateAxis0 = new DateAxis();
      logarithmicAxis0.setLabelPaint(dateAxis0.DEFAULT_AXIS_LABEL_PAINT);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      categoryAxis3D0.setLabelFont(categoryAxis3D0.DEFAULT_TICK_LABEL_FONT);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis(",}r^K_`aD");
      dateAxis0.setLabel(",}r^K_`aD");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'interval' argument.");
      subCategoryAxis0.setLabel("");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      categoryAxis0.setTickMarkInsideLength((-72.36F));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("ChartChangeEventType.DATASET_UPDATED");
      PiePlot piePlot0 = new PiePlot();
      logarithmicAxis0.removeChangeListener(piePlot0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("64 0TBv>=au");
      double double0 = subCategoryAxis0.getLabelAngle();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      Object object0 = dateAxis0.clone();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      boolean boolean0 = valueAxis0.hasListener(thermometerPlot0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      logarithmicAxis0.setLabelURL("Null 'info' argument.");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      logarithmicAxis0.setFixedDimension((-884.94481));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("b70V_ ");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("RectangleAnchor.BOTTOM_LEFT", subCategoryAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeXYPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 1.0F, 2069.54, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.data.KeyToGroupMap");
      Font font0 = logarithmicAxis0.getLabelFont();
  }
}
