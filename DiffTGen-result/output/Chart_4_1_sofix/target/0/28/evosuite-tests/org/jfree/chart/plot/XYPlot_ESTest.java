/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 28 12:04:52 GMT 2020
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.IllegalComponentStateException;
import java.awt.Image;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.color.ICC_Profile;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.RescaleOp;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.EventListener;
import java.util.Hashtable;
import java.util.List;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.DebugGraphics;
import javax.swing.JList;
import javax.swing.JTable;
import javax.swing.border.BevelBorder;
import javax.swing.plaf.multi.MultiListUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.PolarChartPanel;
import org.jfree.chart.annotations.XYAnnotation;
import org.jfree.chart.annotations.XYBoxAnnotation;
import org.jfree.chart.annotations.XYImageAnnotation;
import org.jfree.chart.annotations.XYLineAnnotation;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.event.ChartChangeEventType;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.labels.XYToolTipGenerator;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SeriesRenderingOrder;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.chart.renderer.xy.CyclicXYItemRenderer;
import org.jfree.chart.renderer.xy.SamplingXYLineRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer;
import org.jfree.chart.renderer.xy.StackedXYAreaRenderer2;
import org.jfree.chart.renderer.xy.WindItemRenderer;
import org.jfree.chart.renderer.xy.XYAreaRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.urls.TimeSeriesURLGenerator;
import org.jfree.chart.urls.XYURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.time.Hour;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XYPlot_ESTest extends XYPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TimeZone timeZone0 = TimeZone.getDefault();
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset(timeZone0);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(228.557008312742, "\"{ggMc>y");
      SamplingXYLineRenderer samplingXYLineRenderer0 = new SamplingXYLineRenderer();
      XYPlot xYPlot0 = new XYPlot(timeTableXYDataset0, cyclicNumberAxis0, cyclicNumberAxis0, samplingXYLineRenderer0);
      ValueAxis valueAxis0 = xYPlot0.getRangeAxis();
      samplingXYLineRenderer0.setAutoPopulateSeriesShape(false);
      xYPlot0.setRangeMinorGridlinesVisible(false);
      boolean boolean0 = xYPlot0.isRangeCrosshairLockedOnData();
      Hashtable<RenderingHints.Key, IntervalMarker> hashtable0 = new Hashtable<RenderingHints.Key, IntervalMarker>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      RescaleOp rescaleOp0 = new RescaleOp(0.5F, 2.0F, renderingHints0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(76, (-533), 500);
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 500
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("|u#k)4'");
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(dateAxis0);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(3, 3);
      LegendItemCollection legendItemCollection0 = waferMapRenderer0.getLegendCollection();
      combinedRangeXYPlot0.setFixedLegendItems(legendItemCollection0);
      int int0 = combinedRangeXYPlot0.getRendererCount();
      combinedRangeXYPlot0.setRangeCrosshairLockedOnData(true);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DefaultKeyedValuesDataset defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset();
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset(defaultKeyedValuesDataset0);
      PiePlot3D piePlot3D0 = new PiePlot3D(defaultPieDataset0);
      Paint paint0 = piePlot3D0.getLabelPaint();
      xYPlot0.setQuadrantPaint(0, paint0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      thermometerPlot0.setInsets(valueAxis0.DEFAULT_AXIS_LABEL_INSETS, true);
      combinedRangeXYPlot0.setDomainAxis(0, valueAxis0, true);
      ValueAxis valueAxis1 = combinedRangeXYPlot0.getRangeAxis(500);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05);
      Layer layer0 = Layer.BACKGROUND;
      boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker(3, (Marker) categoryMarker0, layer0, true);
      String string0 = "tc:H`Ld2N+";
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("tc:H`Ld2N+");
      Paint paint0 = extendedCategoryAxis0.getTickLabelPaint((Comparable) 3);
      CategoryMarker categoryMarker1 = new CategoryMarker(2.0F, valueAxis1.DEFAULT_TICK_MARK_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, paint0, valueAxis0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
      Layer layer1 = null;
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.addDomainMarker((Marker) categoryMarker1, (Layer) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      boolean boolean0 = combinedRangeXYPlot0.isRangeGridlinesVisible();
      int int0 = 0;
      ValueAxis valueAxis0 = combinedRangeXYPlot0.getRangeAxis(0);
      Range range0 = combinedRangeXYPlot0.getDataRange(valueAxis0);
      List list0 = combinedRangeXYPlot0.getAnnotations();
      boolean boolean1 = combinedRangeXYPlot0.isRangeZeroBaselineVisible();
      int int1 = (-607);
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 0;
      floatArray0[1] = 1.0F;
      floatArray0[2] = (-2471.8052F);
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-607), 500, floatArray0);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      SeriesRenderingOrder seriesRenderingOrder0 = combinedDomainXYPlot0.getSeriesRenderingOrder();
      AxisLocation axisLocation0 = AxisLocation.TOP_OR_LEFT;
      AxisLocation axisLocation1 = axisLocation0.getOpposite();
      combinedDomainXYPlot0.setRangeAxisLocation(0, axisLocation1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      AxisLocation axisLocation0 = xYPlot0.getRangeAxisLocation();
      double double0 = 857.987791057157;
      Color color0 = Color.red;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte) (-95);
      byteArray0[2] = (byte)10;
      byte byte0 = (byte)106;
      byteArray0[3] = (byte)106;
      byteArray0[4] = (byte) (-113);
      byteArray0[5] = (byte)54;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)106;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(1128, 10, byteArray0, byteArray0, byteArray1, byteArray0);
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(numberAxis3D0);
      Object object0 = numberAxis3D0.clone();
      combinedRangeXYPlot0.setRangeCrosshairValue((-1815.8772), true);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(object0, false);
      ChartChangeEventType chartChangeEventType0 = ChartChangeEventType.DATASET_UPDATED;
      rendererChangeEvent0.setType(chartChangeEventType0);
      combinedRangeXYPlot0.rendererChanged(rendererChangeEvent0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      int int0 = 255;
      int int1 = (-969);
      int int2 = (-1858);
      PolarChartPanel polarChartPanel0 = null;
      try {
        polarChartPanel0 = new PolarChartPanel(jFreeChart0);
      } catch(IllegalArgumentException e) {
         //
         // plot is not a PolarPlot
         //
         verifyException("org.jfree.chart.PolarChartPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Stroke stroke0 = combinedDomainXYPlot0.getRangeGridlineStroke();
      int int0 = (-1372);
      ValueMarker valueMarker0 = new ValueMarker(10);
      combinedDomainXYPlot0.setDatasetGroup((DatasetGroup) null);
      float[] floatArray0 = new float[0];
      Kernel kernel0 = new Kernel(10, 0, floatArray0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0, (-1372), renderingHints0);
      BufferedImage bufferedImage0 = null;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-63);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(10, 374, byteArray0, byteArray0, byteArray0, byteArray0);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      Object[][][] objectArray0 = new Object[5][2][9];
      Object[][] objectArray1 = new Object[1][8];
      Object[] objectArray2 = new Object[9];
      objectArray2[0] = (Object) xYPlot0;
      objectArray2[1] = (Object) xYPlot0;
      objectArray2[2] = (Object) xYPlot0;
      objectArray2[3] = (Object) xYPlot0;
      objectArray2[4] = (Object) xYPlot0;
      objectArray2[5] = (Object) xYPlot0;
      objectArray2[6] = (Object) xYPlot0;
      objectArray2[7] = (Object) xYPlot0;
      objectArray2[8] = (Object) xYPlot0;
      objectArray1[0] = objectArray2;
      objectArray0[0] = objectArray1;
      Object[][] objectArray3 = new Object[3][7];
      objectArray3[0] = objectArray2;
      objectArray3[1] = objectArray2;
      objectArray3[2] = objectArray2;
      objectArray0[1] = objectArray3;
      Object[][] objectArray4 = new Object[5][7];
      objectArray4[0] = objectArray2;
      objectArray4[1] = objectArray2;
      objectArray4[2] = objectArray2;
      objectArray4[3] = objectArray2;
      objectArray4[4] = objectArray2;
      objectArray0[2] = objectArray4;
      Object[][] objectArray5 = new Object[4][4];
      objectArray5[0] = objectArray2;
      Object[] objectArray6 = new Object[6];
      objectArray6[0] = (Object) xYPlot0;
      objectArray6[1] = (Object) xYPlot0;
      objectArray6[2] = (Object) xYPlot0;
      Object object0 = xYPlot0.clone();
      objectArray6[3] = object0;
      objectArray6[4] = (Object) xYPlot0;
      objectArray6[5] = (Object) xYPlot0;
      objectArray5[1] = objectArray6;
      objectArray5[2] = objectArray2;
      objectArray5[3] = objectArray2;
      objectArray0[3] = objectArray5;
      Object[][] objectArray7 = new Object[7][9];
      objectArray7[0] = objectArray2;
      objectArray7[1] = objectArray2;
      objectArray7[2] = objectArray6;
      objectArray7[3] = objectArray6;
      objectArray7[4] = objectArray2;
      objectArray7[5] = objectArray6;
      Object[] objectArray8 = new Object[5];
      objectArray8[0] = (Object) xYPlot0;
      objectArray8[1] = object0;
      objectArray8[2] = object0;
      Object object1 = new Object();
      objectArray8[3] = object1;
      objectArray8[4] = (Object) xYPlot0;
      objectArray7[6] = objectArray8;
      objectArray0[4] = objectArray7;
      DefaultWindDataset defaultWindDataset0 = null;
      try {
        defaultWindDataset0 = new DefaultWindDataset(objectArray0);
      } catch(ClassCastException e) {
         //
         // org.jfree.chart.plot.XYPlot cannot be cast to java.lang.Number
         //
         verifyException("org.jfree.data.xy.DefaultWindDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker((-2468.4), 1.0F, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker((Marker) intervalMarker0, layer0);
      combinedRangeXYPlot0.setDomainCrosshairLockedOnData(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = combinedDomainCategoryPlot0.getDatasetRenderingOrder();
      combinedRangeXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot1);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      Image image0 = chartPanel0.createImage(0, 30);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      XYImageAnnotation xYImageAnnotation0 = null;
      try {
        xYImageAnnotation0 = new XYImageAnnotation(10.0, Double.POSITIVE_INFINITY, (Image) null, rectangleAnchor0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'image' argument.
         //
         verifyException("org.jfree.chart.annotations.XYImageAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      int int0 = 0;
      XYLineAndShapeRenderer xYLineAndShapeRenderer0 = new XYLineAndShapeRenderer(false, false);
      int int1 = 0;
      Shape shape0 = xYLineAndShapeRenderer0.getLegendShape(0);
      xYPlot0.setRenderer(0, (XYItemRenderer) xYLineAndShapeRenderer0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      String string0 = "";
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0, (double) xYLineAndShapeRenderer0.ZERO);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[8];
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(500);
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer(2836.558424403305);
      int int0 = xYPlot0.getIndexOf(candlestickRenderer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      combinedDomainXYPlot0.addChangeListener(combinedRangeXYPlot0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.REVERSE;
      combinedDomainXYPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      combinedRangeXYPlot0.configureRangeAxes();
      combinedRangeXYPlot0.setWeight(10);
      combinedRangeXYPlot0.configureDomainAxes();
      Paint paint0 = combinedRangeXYPlot0.getDomainGridlinePaint();
      combinedDomainXYPlot0.setRangePannable(false);
      Paint paint1 = combinedDomainXYPlot0.getDomainTickBandPaint();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.setInsets(combinedDomainXYPlot0.DEFAULT_INSETS);
      LegendItemCollection legendItemCollection0 = fastScatterPlot0.getLegendItems();
      combinedRangeXYPlot0.setFixedLegendItems((LegendItemCollection) null);
      combinedRangeXYPlot0.setDomainMinorGridlinePaint(paint0);
      combinedDomainXYPlot0.zoomDomainAxes((double) 10, (PlotRenderingInfo) null, (Point2D) null, false);
      double double0 = 38.07278;
      double double1 = 0.35;
      Color color0 = Color.getColor((String) null);
      BevelBorder bevelBorder0 = null;
      try {
        bevelBorder0 = new BevelBorder(10, (Color) null, (Color) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.border.BevelBorder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PeriodAxis periodAxis0 = new PeriodAxis("N++ODw");
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = new StandardXYToolTipGenerator();
      TimeSeriesURLGenerator timeSeriesURLGenerator0 = new TimeSeriesURLGenerator();
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer(500, standardXYToolTipGenerator0, timeSeriesURLGenerator0);
      XYPlot xYPlot0 = new XYPlot((XYDataset) null, periodAxis0, periodAxis0, xYAreaRenderer0);
      int int0 = (-2866);
      ArrayList<SymbolAxis> arrayList0 = new ArrayList<SymbolAxis>();
      VectorSeriesCollection vectorSeriesCollection0 = new VectorSeriesCollection();
      // Undeclared exception!
      try { 
        timeSeriesURLGenerator0.generateURL(vectorSeriesCollection0, 1996, 10);
      } catch(IllegalArgumentException e) {
         //
         // Series index out of bounds
         //
         verifyException("org.jfree.data.xy.VectorSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      DateAxis dateAxis0 = new DateAxis();
      xYPlot0.setRangeAxis((ValueAxis) dateAxis0);
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      JFreeChart jFreeChart0 = new JFreeChart(xYPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(iCC_ProfileArray0, renderingHints0);
      int int0 = 702;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-123);
      byteArray0[1] = (byte)1;
      byte byte0 = (byte) (-24);
      byteArray0[2] = (byte) (-24);
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(702, 0, byteArray0, byteArray0, byteArray0, (byte) (-24));
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Graphics2D graphics2D0 = null;
      MultiListUI multiListUI0 = new MultiListUI();
      XYAreaRenderer[] xYAreaRendererArray0 = new XYAreaRenderer[3];
      XYAreaRenderer xYAreaRenderer0 = new XYAreaRenderer();
      xYAreaRendererArray0[0] = xYAreaRenderer0;
      LegendItemCollection legendItemCollection0 = combinedRangeXYPlot0.getLegendItems();
      XYAreaRenderer xYAreaRenderer1 = new XYAreaRenderer();
      xYAreaRendererArray0[1] = xYAreaRenderer1;
      StackedXYAreaRenderer stackedXYAreaRenderer0 = new StackedXYAreaRenderer();
      xYAreaRendererArray0[2] = (XYAreaRenderer) stackedXYAreaRenderer0;
      JList<XYAreaRenderer> jList0 = new JList<XYAreaRenderer>(xYAreaRendererArray0);
      // Undeclared exception!
      try { 
        multiListUI0.getCellBounds(jList0, (-917), 3);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-96.478094));
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      combinedDomainXYPlot0.setRangeCrosshairVisible(false);
      combinedDomainXYPlot0.setOutlineVisible(true);
      cyclicNumberAxis0.setLabelInsets(combinedDomainXYPlot0.DEFAULT_INSETS);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, combinedDomainXYPlot0.DEFAULT_OUTLINE_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainXYPlot0.addRangeMarker(500, (Marker) categoryMarker0, layer0, true);
      cyclicNumberAxis0.setTickMarksVisible(false);
      XYLineAnnotation xYLineAnnotation0 = new XYLineAnnotation(10, 500, 0.0, 317.1, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_STROKE, combinedDomainXYPlot0.DEFAULT_GRIDLINE_PAINT);
      combinedDomainXYPlot0.addAnnotation((XYAnnotation) xYLineAnnotation0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      int int0 = combinedDomainXYPlot0.getSeriesCount();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot((ValueAxis) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(10, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, combinedRangeXYPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeXYPlot0.DEFAULT_GRIDLINE_STROKE, 0.0F);
      boolean boolean0 = combinedRangeXYPlot0.removeRangeMarker((Marker) categoryMarker0);
      // Undeclared exception!
      try { 
        combinedRangeXYPlot0.setDomainZeroBaselinePaint((Paint) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Graphics2D graphics2D0 = null;
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      combinedDomainXYPlot0.drawZeroDomainBaseline((Graphics2D) null, rectangle2D0);
      combinedDomainXYPlot0.mapDatasetToDomainAxis(4, 4);
      combinedDomainXYPlot0.setBackgroundImageAlignment(4);
      int int0 = combinedDomainXYPlot0.getDatasetCount();
      Paint paint0 = combinedDomainXYPlot0.getDomainGridlinePaint();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getDomainAxisLocation();
      AxisLocation axisLocation1 = AxisLocation.getOpposite(axisLocation0);
      combinedDomainXYPlot0.setRangeAxisLocation(axisLocation0);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.calculateAxisSpace((Graphics2D) null, rectangle2D0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      // Undeclared exception!
      try { 
        chartPanel0.getLocationOnScreen();
      } catch(IllegalComponentStateException e) {
         //
         // component must be showing on the screen to determine its location
         //
         verifyException("java.awt.Component", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot(logAxis0);
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(logAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeXYPlot0.mapDatasetToRangeAxis(0, 0);
      Locale locale0 = Locale.US;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      StandardXYToolTipGenerator standardXYToolTipGenerator0 = null;
      try {
        standardXYToolTipGenerator0 = new StandardXYToolTipGenerator((String) null, numberFormat0, (DateFormat) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'formatString' argument.
         //
         verifyException("org.jfree.chart.labels.AbstractXYItemLabelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.clearRangeMarkers(1);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      Paint paint0 = meterPlot0.getValuePaint();
      combinedDomainXYPlot0.setRangeZeroBaselinePaint(paint0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      int int0 = 250;
      Point point0 = gridBagLayout0.location(10, 250);
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.zoomRangeAxes(0.0, (PlotRenderingInfo) null, (Point2D) point0);
      } catch(IllegalArgumentException e) {
         //
         // Null 'info' argument.
         //
         verifyException("org.jfree.chart.plot.CombinedDomainXYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      // Undeclared exception!
      try { 
        combinedDomainXYPlot0.setRangeGridlineStroke((Stroke) null);
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.XYPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(335.7460200929633, 335.7460200929633, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_PAINT);
      boolean boolean0 = combinedRangeXYPlot0.removeDomainMarker((Marker) intervalMarker0, (Layer) null);
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false, false, true, true, true);
      Stroke stroke0 = chartPanel0.getSelectionOutlineStroke();
      combinedRangeXYPlot0.setDomainZeroBaselineStroke(stroke0);
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeXYPlot0.DEFAULT_OUTLINE_STROKE, combinedRangeXYPlot0.DEFAULT_BACKGROUND_PAINT, stroke0, 0.0F);
      Class<DefaultWindDataset> class0 = DefaultWindDataset.class;
      EventListener[] eventListenerArray0 = valueMarker0.getListeners(class0);
      Layer layer0 = Layer.FOREGROUND;
      boolean boolean1 = combinedRangeXYPlot0.removeRangeMarker((-2813), (Marker) valueMarker0, layer0);
      combinedRangeXYPlot0.setRangeGridlinesVisible(false);
      double double0 = combinedRangeXYPlot0.getDomainCrosshairValue();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      combinedDomainXYPlot0.setDomainGridlinesVisible(false);
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(0.0F, 1018.036F, (-1558.7F), 1018.036F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      combinedDomainXYPlot0.drawQuadrants((Graphics2D) null, rectangle2D0);
      Layer layer0 = Layer.FOREGROUND;
      Collection collection0 = combinedDomainXYPlot0.getDomainMarkers((-621), layer0);
      combinedDomainXYPlot0.setRangeGridlinesVisible(true);
      combinedDomainXYPlot0.clearRangeMarkers((-621));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Null 'c' argument.";
      stringArray0[1] = "Null 'c' argument.";
      stringArray0[2] = "Null 'c' argument.";
      stringArray0[3] = "Null 'c' argument.";
      stringArray0[4] = "Null 'c' argument.";
      SymbolAxis symbolAxis0 = new SymbolAxis("Null 'c' argument.", stringArray0);
      CyclicXYItemRenderer cyclicXYItemRenderer0 = new CyclicXYItemRenderer(0, (XYToolTipGenerator) null, (XYURLGenerator) null);
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, symbolAxis0, symbolAxis0, cyclicXYItemRenderer0);
      xYPlot0.setRangeZeroBaselinePaint(cyclicXYItemRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = xYPlot0.getDomainMarkers(layer0);
      SeriesRenderingOrder seriesRenderingOrder0 = xYPlot0.getSeriesRenderingOrder();
      xYPlot0.setSeriesRenderingOrder(seriesRenderingOrder0);
      xYPlot0.setDomainMinorGridlineStroke(symbolAxis0.DEFAULT_AXIS_LINE_STROKE);
      PolarPlot polarPlot0 = new PolarPlot();
      LegendItemCollection legendItemCollection0 = polarPlot0.getLegendItems();
      xYPlot0.setFixedLegendItems(legendItemCollection0);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 10;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) 10;
      floatArray0[3] = (float) 10;
      floatArray0[4] = (float) 10;
      floatArray0[5] = (float) 0;
      floatArray0[6] = 1.0F;
      floatArray0[7] = (float) 8;
      floatArray0[8] = (float) 0;
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(10, 1, floatArray0);
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 9 and should be 10
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null);
      Point point0 = new Point();
      Dimension dimension0 = new Dimension(10, 10);
      Dimension dimension1 = new Dimension(dimension0);
      Rectangle rectangle0 = new Rectangle(point0, dimension1);
      // Undeclared exception!
      try { 
        debugGraphics0.getClipBounds(rectangle0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "3S')wu";
      MockDate mockDate0 = null;
      try {
        mockDate0 = new MockDate("");
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Date", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Hour hour0 = new Hour(mockDate0);
      XYSeries xYSeries0 = new XYSeries(hour0);
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      WindItemRenderer windItemRenderer0 = new WindItemRenderer();
      XYPlot xYPlot0 = new XYPlot(xYSeriesCollection0, valueAxis0, valueAxis0, windItemRenderer0);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, valueAxis0, minMaxCategoryRenderer0);
      Stroke stroke0 = categoryPlot0.getDomainCrosshairStroke();
      XYBoxAnnotation xYBoxAnnotation0 = new XYBoxAnnotation(612.0, 0.0F, 0.0F, 39.8590565, stroke0, categoryAxis0.DEFAULT_TICK_LABEL_PAINT, minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      boolean boolean0 = xYPlot0.removeAnnotation((XYAnnotation) xYBoxAnnotation0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      NumberAxis numberAxis0 = new NumberAxis();
      StackedXYAreaRenderer2 stackedXYAreaRenderer2_0 = new StackedXYAreaRenderer2();
      XYPlot xYPlot0 = null;
      try {
        xYPlot0 = new XYPlot(defaultWindDataset0, numberAxis0, numberAxis0, stackedXYAreaRenderer2_0);
      } catch(ClassCastException e) {
         //
         // org.jfree.data.xy.DefaultWindDataset cannot be cast to org.jfree.data.xy.TableXYDataset
         //
         verifyException("org.jfree.chart.renderer.xy.StackedXYAreaRenderer2", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XYPlot xYPlot0 = new XYPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 10, 217.00763742, 217.00763742);
      JTable jTable0 = new JTable(10, 10);
      Rectangle rectangle0 = jTable0.getCellRect(10, 10, true);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createIntersection(rectangle0);
      xYPlot0.drawZeroRangeBaseline((Graphics2D) null, rectangle2D0);
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 10);
      xYPlot0.panRangeAxes(0.0, plotRenderingInfo0, point2D_Double0);
      xYPlot0.setDomainMinorGridlinesVisible(true);
      ValueAxis valueAxis0 = xYPlot0.getRangeAxis();
      xYPlot0.setFixedLegendItems((LegendItemCollection) null);
  }
}
